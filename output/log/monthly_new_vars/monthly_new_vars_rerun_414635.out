Current working directory
/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml
source kevin/venv/bin/activate
which python3
/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/venv/bin/python3
2024-07-17 10:42:30,630	PANIC scripts.py:900 -- `--address` is a required flag unless starting a head node with `--head`.
Error: `{}` is a required flag unless starting a head node with `{}`.
Intel(R) Extension for Scikit-learn* enabled (https://github.com/intel/scikit-learn-intelex)
Intel(R) Extension for Scikit-learn* enabled (https://github.com/intel/scikit-learn-intelex)
INFO:preprocess_data_nn.py:

Loading and preprocessing data...

DEBUG:preprocess_data_nn.py:          date   permno
626    1980-01  10006.0
5399   1980-01  10057.0
11398  1980-01  10137.0
12828  1980-01  10145.0
13984  1980-01  10153.0
DEBUG:preprocess_data_nn.py:--------------------------------------------------
INFO:main.py:preprocessed df: (2005900, 161)
INFO:preprocess_data_nn.py:

Applying secondary data preprocessing..

INFO:main.py:secondary preprocessed df: (1942951, 161)
INFO:main.py:df sample:     permno       pdate        ym  gvkey  sic2    absacc       acc    aeavol  ...      roaa      roea   roavola       ret        mve_m      retq  pyear     date
0  10006.0  1980-01-01  198001.0   1010    37  0.083420  0.083420  1.001090  ...  0.048684  0.141715  0.004512  0.211679   303420.750 -0.055806   1980  1980-01
1  10057.0  1980-01-01  198001.0   1098    36  0.088951  0.088951 -0.613146  ...  0.092434  0.174252  0.035698  0.282297   111423.125 -0.069431   1980  1980-01
2  10137.0  1980-01-01  198001.0   1279    49  0.041008  0.041008 -0.491307  ...  0.034895  0.097554  0.006254 -0.032258   617349.500 -0.108065   1980  1980-01
3  10145.0  1980-01-01  198001.0   1300    99  0.050486  0.050486 -0.256932  ...  0.049028  0.122729  0.004320  0.150127  1415193.000 -0.085950   1980  1980-01
4  10153.0  1980-01-01  198001.0   1308    13       NaN       NaN  1.631801  ...  0.049860  0.109950  0.009149 -0.122744   429488.500 -0.285199   1980  1980-01

[5 rows x 161 columns]
INFO:main.py:Train year start: 1980
INFO:main.py:Prediction data years: [2012, 2020]
INFO:main.py:

Loop through all the prediction years and build optimized model for each year

INFO:main.py:

Transform data

INFO:transform_data_nn.py:Train data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010]
INFO:transform_data_nn.py:Train_data: (1546326, 161)

INFO:transform_data_nn.py:Test data years: [2011]
INFO:transform_data_nn.py:Test_data: (42205, 161)

INFO:transform_data_nn.py:Retrain data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011]
INFO:transform_data_nn.py:Retrain_data: (1588531, 161)

INFO:transform_data_nn.py:Prediction data years: [2012]
INFO:transform_data_nn.py:Prediction_data: (40994, 161)

INFO:main.py:

Generate X and y with train_data and test_data

INFO:main.py:
            x_train_tf: torch.Size([1546326, 152])
            y_train_tf: torch.Size([1546326])

            x_test_tf: torch.Size([42205, 152])
            y_test_tf: torch.Size([42205])

        
INFO:main.py:

Generate X and y with retrain_data and prediction_data

INFO:main.py:
            x_retrain_tf: torch.Size([1588531, 152])
            y_retrain_tf: torch.Size([1588531])

            x_prediction_tf: torch.Size([40994, 152])
            y_prediction_tf: torch.Size([40994])

        
INFO:main.py:

Create dataset

INFO:main.py:Create train_dataset
INFO:main.py:train_dataset first example: (tensor([-1.3927e-01,  9.1362e-01,  7.3040e-02, -1.6380e+00, -1.1193e-01,
        -8.4131e-01, -1.4537e-01, -3.4648e-01,  4.4611e-01, -1.7234e-01,
        -7.1204e-01,  8.8603e-02, -7.0973e-01, -5.3057e-01,  9.3019e-02,
         5.1464e-01, -1.2764e-01,  2.1285e-01, -8.8361e-02,  6.0712e-01,
        -4.1162e-01, -6.0162e-02, -1.7526e-01,  9.5381e-03, -8.8918e-02,
        -3.3825e-01, -5.9550e-01, -8.5255e-02,  3.4450e-01,  1.4138e+00,
         3.4766e-01, -1.2383e-01,  7.9050e-01,  3.0998e-01, -2.2421e-01,
        -2.3519e-01,  1.4277e-01,  9.1161e-01, -1.3247e-02, -1.1311e+00,
        -2.7677e-01,  3.0116e-01,  3.6358e-01,  3.5865e-02, -1.6293e-01,
        -7.4726e-01,  1.1604e-01, -6.3421e-02, -3.4996e-01, -1.3595e-01,
        -8.4847e-01,  3.5329e-01, -4.7331e-01,  8.5049e-02, -1.9453e-02,
         4.9264e-01, -5.7712e-01, -1.8437e-01, -2.4903e-01, -3.8648e-02,
         4.9528e-03, -3.0698e-01,  6.3616e-02,  2.1423e-01,  7.0318e-02,
        -1.9574e-01,  7.5221e-01, -2.6464e-01,  6.3217e-01, -5.7330e-01,
        -3.4933e-01, -1.7559e-01, -2.9092e-02, -8.9872e-01,  1.8520e-01,
         7.6351e-01,  8.8474e-01, -1.1792e+00,  2.7609e-01,  1.8951e-02,
        -9.6567e-01,  1.9667e-01,  3.7361e-01, -4.4194e-02, -5.7447e-01,
        -4.5898e-01, -5.5389e-01, -2.7038e-01,  8.9678e-02,  1.1469e-01,
        -5.9617e-01, -1.3397e+00,  2.4770e-01,  1.6653e-15,  1.6653e-15,
         3.2045e+00,  1.2849e-01,  2.4799e+00, -2.9059e+00,  6.0545e-01,
        -4.2080e-01,  1.9761e-01, -1.4282e-02, -5.6949e-02,  2.0421e-01,
         1.1749e-01, -1.4323e-01,  2.4634e-01,  5.3020e-01, -9.0624e-01,
         8.0823e-01, -8.8818e-15,  3.3851e-01,  1.3375e-02,  9.3341e-02,
         8.8609e-03,  3.4298e-01, -2.2962e-01,  1.7690e-02, -5.6735e-01,
         1.3758e-01, -2.5264e-01, -3.6472e-01,  3.6131e-01,  3.6599e-01,
        -4.1448e-01,  0.0000e+00,  0.0000e+00,  0.0000e+00,  1.0000e+00,
         1.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00]), tensor([11628]), tensor(0.2117))
INFO:main.py:Create test_dataset
INFO:main.py:test_dataset first example: (tensor([-1.4593e-01, -3.8136e-01,  1.7007e+00,  1.2281e+00,  1.3378e+00,
        -8.6637e-01, -5.5292e-01, -5.9307e-01, -1.2677e-01, -7.7821e-02,
        -4.8795e-01,  2.7126e-01, -7.0973e-01,  6.1386e-01,  9.6481e-02,
        -9.4817e-01,  2.0251e+00,  1.5007e+00, -8.8361e-02, -5.2999e-02,
        -2.1600e-01, -1.3043e-01, -1.5659e-01, -9.0095e-01,  8.6518e-01,
        -8.5948e-01, -5.7521e-01, -8.5255e-02,  6.5512e-01,  4.1118e-01,
         2.2221e-03,  7.8361e-01,  5.5636e-01,  3.0998e-01, -6.4979e-01,
         6.8597e-01,  4.4710e-01, -7.1851e-01,  1.1294e+00, -3.9751e-01,
        -2.7684e-01, -1.6970e-01,  3.6364e-01, -3.8339e-01,  7.1276e-01,
        -8.7437e-01, -1.7867e-01,  2.7941e-01, -8.7806e-02, -3.0062e-01,
         2.3450e+00, -2.6722e-01, -4.7331e-01, -6.7984e-01, -7.3664e-01,
         1.3883e-01, -9.5501e-01,  9.5136e-02, -7.1711e-01, -3.6146e-01,
         6.3871e-01, -5.5510e-01, -6.6889e-02, -1.3412e+00, -4.1492e-02,
        -2.5361e-01, -4.8886e-01, -3.9092e-01,  2.6562e+00, -7.3027e-01,
        -3.4933e-01, -1.7559e-01, -2.9092e-02, -1.0677e+00,  1.0917e-01,
         6.8587e-02,  8.8474e-01,  1.1271e-01,  1.5018e+00,  1.8951e-02,
        -9.6567e-01, -2.3218e-01, -4.1358e-01, -8.6765e-01, -3.7993e-01,
        -3.1589e-01, -4.5597e-01, -1.6292e-01, -5.7360e-01,  5.4074e-01,
        -2.6168e-01, -3.5320e-01,  2.4770e-01,  1.6653e-15,  1.6653e-15,
        -4.6751e-02,  2.3229e-01, -1.6333e+00,  1.2606e+00,  8.3593e-02,
        -3.5448e-01, -1.0159e-01, -1.4282e-02, -1.1116e+00,  2.0421e-01,
        -6.1516e-01, -1.6577e-01,  2.4634e-01,  1.3764e+00, -1.2562e+00,
        -8.3904e-01, -8.8818e-15,  3.7177e-01,  1.3788e+00,  9.3341e-02,
         8.8609e-03, -6.0953e-01,  2.4734e-01,  1.7690e-02, -3.5042e-01,
         1.2694e-01, -5.7492e-01, -7.4430e-01,  4.7313e-01,  4.0679e-01,
        -3.0843e-01,  1.0000e+00,  1.0000e+00,  0.0000e+00,  0.0000e+00,
         1.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00,  1.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00]), tensor([3729]), tensor(0.0290))
INFO:main.py:Create retrain_dataset
INFO:main.py:retrain_dataset first example: (tensor([-1.3421e-01,  9.2012e-01,  7.1742e-02, -1.6520e+00, -1.0992e-01,
        -8.4323e-01, -1.4508e-01, -3.4537e-01,  4.4567e-01, -1.7088e-01,
        -7.1560e-01,  8.5419e-02, -7.0943e-01, -5.3811e-01,  9.5369e-02,
         5.1465e-01, -1.2572e-01,  2.1018e-01, -8.8127e-02,  6.1102e-01,
        -4.0930e-01, -6.4709e-02, -1.7532e-01,  8.7376e-03, -9.0806e-02,
        -3.3850e-01, -5.9558e-01, -8.7117e-02,  3.2482e-01,  1.4134e+00,
         3.4916e-01, -1.2327e-01,  7.9186e-01,  3.1495e-01, -2.2519e-01,
        -2.2767e-01,  1.5045e-01,  9.1205e-01, -1.0170e-02, -1.1348e+00,
        -2.7491e-01,  2.9941e-01,  3.7015e-01,  3.2821e-02, -1.6069e-01,
        -7.4617e-01,  1.1367e-01, -6.2026e-02, -3.4387e-01, -1.3735e-01,
        -8.4920e-01,  3.3791e-01, -4.7321e-01,  8.5036e-02, -1.8521e-02,
         4.9203e-01, -5.7006e-01, -1.8394e-01, -2.4943e-01, -3.5014e-02,
         2.1188e-03, -3.0702e-01,  6.6905e-02,  2.1398e-01,  6.7521e-02,
        -1.9403e-01,  7.6069e-01, -2.6284e-01,  6.2228e-01, -5.7448e-01,
        -3.5127e-01, -1.7636e-01, -2.8452e-02, -8.9912e-01,  1.8356e-01,
         7.6858e-01,  8.9458e-01, -1.1816e+00,  2.7376e-01,  2.0176e-02,
        -9.8291e-01,  1.9850e-01,  3.7997e-01, -2.6430e-02, -5.7605e-01,
        -4.6305e-01, -5.5644e-01, -2.7175e-01,  9.2949e-02,  1.1296e-01,
        -6.0263e-01, -1.3391e+00,  2.5116e-01, -1.3323e-15, -1.3323e-15,
         3.2488e+00,  1.2636e-01,  2.4694e+00, -2.9267e+00,  6.1437e-01,
        -4.2846e-01,  2.0126e-01, -7.3742e-03,  1.1344e-02,  1.9078e-01,
         5.9915e-02, -1.4803e-01,  2.8404e-01,  5.8679e-01, -8.9707e-01,
         8.2537e-01,  2.1316e-14,  3.3517e-01,  2.6516e-02,  8.0245e-02,
         1.1423e-02,  3.5462e-01, -2.2791e-01,  1.7505e-02, -5.6513e-01,
         1.3821e-01, -2.4568e-01, -3.6121e-01,  3.6028e-01,  3.6456e-01,
        -4.1616e-01,  0.0000e+00,  0.0000e+00,  0.0000e+00,  1.0000e+00,
         1.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00]), tensor([11736]), tensor(0.2117))
INFO:main.py:Create prediction_dataset
INFO:main.py:prediction_dataset first example: (tensor([-9.1680e-01,  2.5333e-01, -3.3042e-01,  1.2092e+00,  6.4526e-02,
        -8.7021e-01, -1.2434e+00, -8.3151e-01,  7.2332e-02,  1.2866e-01,
        -3.9015e-01,  9.9670e-02, -7.0943e-01,  1.1884e-01, -2.7242e-01,
        -4.2252e-01, -2.1169e-01,  4.4219e-01, -1.5472e-02, -1.8236e-02,
        -2.6021e-01, -1.3249e-01, -2.2232e-01,  1.1231e-01, -2.4745e-01,
        -7.1799e-01, -6.5159e-01, -8.7117e-02, -2.7374e-01,  7.1037e-01,
         1.1697e-02,  2.9420e-01,  4.0988e-01,  3.1495e-01, -6.5863e-01,
        -3.2210e-01,  2.2429e+00, -7.1675e-01,  4.3161e-02, -8.1128e-01,
        -2.7217e-01, -1.1558e-02,  1.5891e+00, -4.0628e-01, -2.8799e-01,
        -8.6979e-01, -7.2526e-02,  2.7887e-01,  1.4523e-01, -2.4733e-01,
        -5.1036e-02, -2.2253e-01, -4.7321e-01, -3.7991e-01, -7.3723e-01,
         6.7478e-02, -9.4996e-01, -4.4855e-01,  8.9354e-01, -2.8457e-01,
        -1.4531e-01,  8.6250e-01,  2.5218e-01,  3.0592e-01, -4.0632e-02,
        -1.0468e-01, -8.1529e-02, -1.4994e+00, -7.2441e-01, -6.1754e-01,
        -3.5127e-01, -1.7636e-01, -2.8452e-02, -1.0305e+00,  2.0811e-01,
        -2.0925e-02,  2.6687e-01,  3.3106e-01,  1.5040e+00,  2.0176e-02,
         9.2158e-01,  1.1675e-01, -3.7812e-01, -5.1189e-01, -5.7238e-01,
        -3.3073e-01, -4.6618e-01, -4.1641e-01, -3.8912e-01, -2.3085e-01,
        -5.8487e-01,  1.7653e+00,  2.5116e-01, -1.3323e-15, -1.3323e-15,
        -5.0232e-02, -7.2598e-01, -1.5988e+00,  2.0591e-01,  6.1437e-01,
        -8.5679e-03, -6.7703e-02, -7.3742e-03, -8.3765e-01,  1.9078e-01,
         3.9580e+00, -1.6830e-01, -1.8694e-01,  2.3162e+00, -6.9272e-01,
        -4.2502e-01,  2.1316e-14,  3.4075e-01, -6.5667e-02, -6.3208e-01,
        -3.4313e+00, -5.9664e-01, -2.5386e-01,  1.7505e-02, -5.3497e-01,
        -6.5585e-01, -5.4200e-01, -5.1239e-01,  3.3924e-01,  1.9796e-01,
        -3.1040e-01,  1.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         1.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         1.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         1.0000e+00]), tensor([3598]), tensor(-0.0197))
INFO:main.py:

Create dataloader

INFO:main.py:Create train and test dataloader
INFO:main.py:Create retrain and prediction dataloader
INFO:main.py:

Hyperparameters tuning with Ray Tune

INFO:main.py:Training data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010]
INFO:main.py:Testing data year: 2011
INFO:main.py:

            ray_results_path: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
            num_samples: 50
            max_num_epochs: 30
            num_cpus: 50
            cpus_per_trial: 1
            num_gpus: 4
            gpus_per_trial: 1
            continuous_dim: 151
            num_embeddings: 15706
            device: cuda
            
2024-07-17 13:50:34,567	INFO worker.py:1753 -- Started a local Ray instance.
2024-07-17 13:50:34,619	INFO packaging.py:530 -- Creating a file package for local directory '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src'.
2024-07-17 13:50:34,665	INFO packaging.py:358 -- Pushing file package 'gcs://_ray_pkg_8058b1631051356f.zip' (1.31MiB) to Ray cluster...
2024-07-17 13:50:34,674	INFO packaging.py:371 -- Successfully pushed file package 'gcs://_ray_pkg_8058b1631051356f.zip'.
2024-07-17 13:50:38,442	WARNING tune.py:902 -- AIR_VERBOSITY is set, ignoring passed-in ProgressReporter for now.
2024-07-17 14:35:50,623	INFO tune.py:1009 -- Wrote the latest version of all result files and experiment state to '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results/train_fnn_2024-07-17_13-50-38' in 0.1273s.
INFO:model_data_nn.py:Best trial config: {'continuous_dim': 151, 'hidden_dim': 55, 'num_layers': 4, 'num_embeddings': 15706, 'embedding_dim': 15, 'dropout_rate': 0.17, 'lr': 0.0007, 'weight_decay': 5.43959123656852e-05, 'num_epochs': 30, 'num_gpus': 4}
INFO:model_data_nn.py:Best trial training loss: 0.03369905567806454
INFO:model_data_nn.py:Best trial testing loss: 0.021762439964169805
INFO:main.py:Ray Tune results have been saved to: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
INFO:main.py:Best trial directory: /tmp/ray/session_2024-07-17_13-50-31_795908_2550128/artifacts/2024-07-17_13-50-38/train_fnn_2024-07-17_13-50-38/driver_artifacts/train_fnn_38f5b_00028_28_dropout_rate=0.1700,embedding_dim=15,hidden_dim=55,lr=0.0007,num_layers=4,weight_decay=0.0001_2024-07-17_13-50-38
INFO:main.py:

Retrain a new model with data in years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011]

            Using the optimized hyperparameters: {'continuous_dim': 151, 'hidden_dim': 55, 'num_layers': 4, 'num_embeddings': 15854, 'embedding_dim': 15, 'dropout_rate': 0.17, 'lr': 0.0007, 'weight_decay': 5.43959123656852e-05, 'num_epochs': 30, 'num_gpus': 4}

INFO:model_data_nn.py:Epoch 1/30, metrics: {'avg_train_loss': 3.907352918672249, 'avg_test_loss': 0.02234102806411915}
INFO:model_data_nn.py:Epoch 2/30, metrics: {'avg_train_loss': 0.0354518192760824, 'avg_test_loss': 0.02155478475673228}
INFO:model_data_nn.py:Epoch 3/30, metrics: {'avg_train_loss': 0.03510099001390283, 'avg_test_loss': 0.021183122409310955}
INFO:model_data_nn.py:Epoch 4/30, metrics: {'avg_train_loss': 0.034237440062168764, 'avg_test_loss': 0.021246552045069495}
INFO:model_data_nn.py:Epoch 5/30, metrics: {'avg_train_loss': 0.03392020685723111, 'avg_test_loss': 0.021218746949727675}
INFO:model_data_nn.py:Epoch 6/30, metrics: {'avg_train_loss': 0.03378360311293934, 'avg_test_loss': 0.021162775886007904}
INFO:model_data_nn.py:Epoch 7/30, metrics: {'avg_train_loss': 0.03374811306927753, 'avg_test_loss': 0.021955233052812564}
INFO:model_data_nn.py:Epoch 8/30, metrics: {'avg_train_loss': 0.03368689782651579, 'avg_test_loss': 0.021219073647274548}
INFO:model_data_nn.py:Epoch 9/30, metrics: {'avg_train_loss': 0.03367738201259808, 'avg_test_loss': 0.021070541481354406}
INFO:model_data_nn.py:Epoch 10/30, metrics: {'avg_train_loss': 0.033666691945879554, 'avg_test_loss': 0.02109325667611838}
INFO:model_data_nn.py:Epoch 11/30, metrics: {'avg_train_loss': 0.033683276997115, 'avg_test_loss': 0.021378889555539588}
INFO:model_data_nn.py:Epoch 12/30, metrics: {'avg_train_loss': 0.03366661053604098, 'avg_test_loss': 0.021060383710894526}
INFO:model_data_nn.py:Epoch 13/30, metrics: {'avg_train_loss': 0.03367083885007944, 'avg_test_loss': 0.02146915352168661}
INFO:model_data_nn.py:Epoch 14/30, metrics: {'avg_train_loss': 0.033656858661113884, 'avg_test_loss': 0.021168676925163648}
INFO:model_data_nn.py:Epoch 15/30, metrics: {'avg_train_loss': 0.03363327885615659, 'avg_test_loss': 0.020893525378489347}
INFO:model_data_nn.py:Epoch 16/30, metrics: {'avg_train_loss': 0.033642828791806564, 'avg_test_loss': 0.021233521670866642}
INFO:model_data_nn.py:Epoch 17/30, metrics: {'avg_train_loss': 0.033611567789863385, 'avg_test_loss': 0.021268565505627335}
INFO:model_data_nn.py:Epoch 18/30, metrics: {'avg_train_loss': 0.03360721734350909, 'avg_test_loss': 0.021114184555846342}
INFO:model_data_nn.py:Early stopping at epoch 18
INFO:main.py:Making prediction for data in year: 2012
INFO:main.py:Prediction data shape: (40994,)
/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src/main.py:355: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  prediction_data['pred'] = predictions
INFO:main.py:Root Mean Squared Error for Prediction in 2012: 0.14535577195746918
INFO:main.py:Prediction Stats:                 ret          pred
count  40994.000000  40994.000000
mean       0.016349      0.015429
std        0.144873      0.020715
min       -0.830303     -0.107139
25%       -0.043610      0.004813
50%        0.010396      0.010859
75%        0.065653      0.023076
max        5.210484      0.243716
INFO:main.py:

Transform data

INFO:transform_data_nn.py:Train data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018]
INFO:transform_data_nn.py:Train_data: (1865875, 161)

INFO:transform_data_nn.py:Test data years: [2019]
INFO:transform_data_nn.py:Test_data: (38497, 161)

INFO:transform_data_nn.py:Retrain data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019]
INFO:transform_data_nn.py:Retrain_data: (1904372, 161)

INFO:transform_data_nn.py:Prediction data years: [2020]
INFO:transform_data_nn.py:Prediction_data: (38579, 161)

INFO:main.py:

Generate X and y with train_data and test_data

INFO:main.py:
            x_train_tf: torch.Size([1865875, 152])
            y_train_tf: torch.Size([1865875])

            x_test_tf: torch.Size([38497, 152])
            y_test_tf: torch.Size([38497])

        
INFO:main.py:

Generate X and y with retrain_data and prediction_data

INFO:main.py:
            x_retrain_tf: torch.Size([1904372, 152])
            y_retrain_tf: torch.Size([1904372])

            x_prediction_tf: torch.Size([38579, 152])
            y_prediction_tf: torch.Size([38579])

        
INFO:main.py:

Create dataset

INFO:main.py:Create train_dataset
INFO:main.py:train_dataset first example: (tensor([-1.1576e-01,  9.6224e-01,  6.1638e-02, -1.7205e+00, -9.4606e-02,
        -8.3439e-01, -1.6602e-01, -3.5902e-01,  4.7418e-01, -1.6647e-01,
        -7.2661e-01,  1.0893e-01, -7.2099e-01, -5.5530e-01,  1.0774e-01,
         5.3534e-01, -1.1646e-01,  2.0252e-01, -9.2181e-02,  6.5560e-01,
        -4.1992e-01, -6.8493e-02, -1.8295e-01,  1.8396e-02, -9.4103e-02,
        -3.3987e-01, -5.9288e-01, -9.4382e-02,  1.8197e-01,  1.4357e+00,
         3.5269e-01, -1.1145e-01,  8.0371e-01,  3.4073e-01, -2.1332e-01,
        -2.2151e-01,  1.7995e-01,  9.2418e-01, -1.4260e-03, -1.0858e+00,
        -2.5996e-01,  3.2775e-01,  4.1588e-01,  3.4052e-02, -1.5131e-01,
        -7.1695e-01,  1.2120e-01, -6.3799e-02, -3.5255e-01, -1.4124e-01,
        -8.5584e-01,  2.2608e-01, -4.7232e-01,  9.7673e-02, -2.1515e-03,
         4.7621e-01, -5.2720e-01, -1.7821e-01, -2.4768e-01, -2.6645e-02,
         7.6342e-04, -3.0434e-01,  6.5386e-02,  2.1840e-01,  7.3606e-02,
        -1.9663e-01,  8.1575e-01, -2.4754e-01,  6.0608e-01, -5.7660e-01,
        -3.6244e-01, -1.8637e-01, -2.8660e-02, -8.6887e-01,  2.0453e-01,
         8.1805e-01,  9.4735e-01, -1.2006e+00,  2.5226e-01,  2.0016e-02,
        -1.0960e+00,  2.1739e-01,  4.2847e-01,  7.8642e-02, -5.7835e-01,
        -4.9617e-01, -5.6875e-01, -2.7305e-01,  1.1779e-01,  1.1944e-01,
        -6.3864e-01, -1.3304e+00,  2.7403e-01,  4.4409e-15,  4.4409e-15,
         3.5363e+00,  2.6106e-01,  2.5321e+00, -3.1066e+00,  6.8064e-01,
        -4.1696e-01,  2.4093e-01,  2.5921e-03, -5.2058e-02,  1.6035e-01,
         4.7411e-02, -1.5973e-01,  2.2455e-01,  8.4621e-01, -8.2806e-01,
         9.5833e-01, -1.2434e-14,  3.1778e-01,  3.1800e-02,  4.7928e-02,
         8.8315e-03,  4.2260e-01, -2.2396e-01,  1.0226e-01, -5.5429e-01,
         1.4701e-01, -2.0542e-01, -3.3596e-01,  3.6909e-01,  3.5491e-01,
        -4.1249e-01,  0.0000e+00,  0.0000e+00,  0.0000e+00,  1.0000e+00,
         1.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00]), tensor([12696]), tensor(0.2117))
INFO:main.py:Create test_dataset
INFO:main.py:test_dataset first example: (tensor([-7.0015e-01,  1.3146e-01,  2.9713e-02,  1.1172e+00, -1.8643e-01,
        -3.4146e-01, -7.0817e-01, -6.7083e-01, -6.0852e-01, -1.2000e+00,
        -8.2074e-02,  1.7285e+00,  1.9368e+00,  2.0365e-03, -5.0218e-01,
        -1.2580e-01, -1.9911e-01,  3.5225e-01, -3.1327e-02,  4.8661e-02,
        -1.5253e-01,  1.1154e+00, -2.1503e-01, -4.0936e-01, -6.0619e-02,
         1.5030e-01, -3.3302e-01, -4.3095e-01,  8.6826e-01, -1.1081e-01,
        -4.2110e-01, -8.0454e-02,  2.7818e-01,  3.4073e-01,  3.4823e-01,
        -2.8601e-01, -1.7796e-01, -3.2285e-01, -6.4703e-02, -1.1305e+00,
        -2.6160e-01, -3.6006e-01, -1.6918e-02, -6.2379e-01, -4.1569e-01,
        -7.0940e-01, -1.4285e-01, -5.7041e-01,  4.5247e-02, -5.4173e-02,
         7.4185e-01,  1.2343e+00, -4.7232e-01,  4.0883e-01, -7.4010e-01,
         9.8438e-02, -3.3310e-01, -4.6620e-01, -1.0836e-01, -1.5261e-01,
        -7.2717e-02, -1.8388e-01, -1.3510e-01, -2.8912e-02, -9.0516e-02,
        -2.8700e-01, -1.3259e-01, -3.5016e-01,  6.0608e-01,  1.6283e-02,
        -3.5943e-01, -1.8570e-01, -2.8660e-02, -5.4105e-01,  1.2276e+00,
        -1.3146e-01,  1.5197e-01,  2.4645e-01,  5.1942e-01,  3.6498e-01,
         7.7149e-01, -2.5635e-01, -5.8935e-01, -1.0961e+00, -3.2594e-01,
        -5.0362e-01, -5.7207e-01, -3.5381e-01, -4.7684e-01, -2.0606e-01,
        -2.8598e-01, -2.6603e-01,  2.7403e-01,  4.4409e-15,  4.4409e-15,
        -4.5941e-01, -1.2118e+00, -5.5194e-01, -1.3260e+00,  1.9449e-01,
         8.2546e-01,  1.3026e-01, -8.1024e-01, -5.3729e-01, -2.0517e+00,
         1.3861e+00, -1.9084e-01, -2.1493e+00,  8.4621e-01, -8.3385e-01,
        -9.6826e-01, -1.2434e-14,  2.4163e-01,  3.1800e-02, -7.4281e-01,
        -6.8644e-01, -2.4757e-02, -3.4495e-01,  1.0226e-01, -5.6319e-01,
        -7.1877e-02,  7.7230e-02,  2.5494e+00,  6.9762e-01,  3.3971e-01,
        -3.9362e-01,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  1.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  1.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  1.0000e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00]), tensor([1862]), tensor(0.0675))
INFO:main.py:Create retrain_dataset
INFO:main.py:retrain_dataset first example: (tensor([-1.1453e-01,  9.6605e-01,  6.0483e-02, -1.7254e+00, -9.4831e-02,
        -8.3554e-01, -1.7113e-01, -3.6256e-01,  4.7529e-01, -1.6472e-01,
        -7.2655e-01,  1.1544e-01, -7.2241e-01, -5.5142e-01,  1.0819e-01,
         5.3767e-01, -1.1547e-01,  2.0161e-01, -9.2816e-02,  6.6055e-01,
        -4.1863e-01, -6.6290e-02, -1.8830e-01,  2.0065e-02, -9.8023e-02,
        -3.3974e-01, -5.9234e-01, -9.6869e-02,  1.5711e-01,  1.4332e+00,
         3.5273e-01, -1.1042e-01,  8.0112e-01,  3.4399e-01, -2.0907e-01,
        -2.2039e-01,  1.8287e-01,  9.2397e-01, -1.2868e-03, -1.0804e+00,
        -2.5790e-01,  3.4276e-01,  4.1862e-01,  3.3351e-02, -1.5204e-01,
        -7.1489e-01,  1.2819e-01, -6.2906e-02, -3.5456e-01, -1.3631e-01,
        -8.5687e-01,  2.1225e-01, -4.7196e-01,  9.8354e-02,  6.5096e-04,
         4.7590e-01, -5.2155e-01, -1.7529e-01, -2.4678e-01, -1.9665e-02,
         2.1402e-03, -3.0325e-01,  6.5474e-02,  2.1841e-01,  7.2421e-02,
        -1.9749e-01,  8.2269e-01, -2.4422e-01,  6.0652e-01, -5.7586e-01,
        -3.6360e-01, -1.8832e-01, -2.6445e-02, -8.6750e-01,  2.1051e-01,
         8.2159e-01,  9.5409e-01, -1.2040e+00,  2.4908e-01,  2.2840e-02,
        -1.1099e+00,  2.1722e-01,  4.3181e-01,  9.2356e-02, -5.7810e-01,
        -5.0280e-01, -5.7014e-01, -2.7272e-01,  1.1989e-01,  1.2474e-01,
        -6.4312e-01, -1.3286e+00,  2.7701e-01, -1.9984e-15, -1.9984e-15,
         3.5719e+00,  2.8199e-01,  2.5605e+00, -3.0271e+00,  6.8810e-01,
        -4.1754e-01,  2.4516e-01, -2.0170e-04, -5.0849e-02,  1.5389e-01,
         4.6042e-02, -1.6116e-01,  1.6135e-01,  8.5526e-01, -8.2879e-01,
         9.7391e-01,  2.3093e-14,  3.1729e-01,  3.6650e-02,  4.1952e-02,
         7.8312e-03,  4.3180e-01, -2.2524e-01,  1.0891e-01, -5.5078e-01,
         1.4716e-01, -1.9964e-01, -3.3120e-01,  3.7058e-01,  3.5405e-01,
        -4.1234e-01,  0.0000e+00,  0.0000e+00,  0.0000e+00,  1.0000e+00,
         1.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00]), tensor([12863]), tensor(0.2117))
INFO:main.py:Create prediction_dataset
INFO:main.py:prediction_dataset first example: (tensor([-3.9349e-01, -1.1664e-01, -3.4957e-01,  1.1106e+00, -1.4296e-01,
        -8.2460e-01, -1.0271e+00, -7.9148e-01, -6.5919e-01, -1.2087e+00,
         3.8524e-01,  1.6350e+00,  1.4476e+00, -9.1522e-03, -5.6722e-01,
        -9.7026e-02, -2.0492e-01,  6.2864e-02, -8.7834e-01, -9.0778e-02,
         3.0962e-02,  2.3396e+00, -1.7573e-01, -3.8204e-01, -7.9543e-02,
         4.9695e-01, -3.3477e-01, -4.8785e-01,  8.7132e-01, -1.6251e-01,
        -4.8216e-01, -9.9496e-02,  2.3139e-01,  3.4399e-01,  2.8800e-01,
        -4.6251e-01, -2.1797e-01, -2.9489e-01, -2.1386e-01, -1.1037e+00,
        -2.5965e-01,  1.5562e-01, -5.3063e-01, -6.2667e-01, -2.2670e-01,
        -8.6135e-01,  3.1282e-01, -6.8559e-02, -2.1199e-01,  3.0197e-01,
         7.4152e-01,  1.3301e+00, -4.7196e-01,  1.1697e-01, -7.4033e-01,
         8.2148e-02, -3.6034e-01, -1.6770e-01,  3.9023e-01, -2.1892e-01,
        -3.4024e-02,  4.8338e-01,  1.6157e-02, -5.5122e-02, -3.3011e-02,
        -2.1528e-01, -3.1860e-01, -2.9785e-01, -6.7083e-02,  3.7894e-01,
        -3.6121e-01, -1.8767e-01, -2.6445e-02, -9.7664e-01,  1.2358e+00,
        -7.6230e-02, -5.9460e-01,  2.6643e-01,  4.6854e-01,  3.7031e-01,
         7.6821e-01, -2.7297e-01, -6.1425e-01, -1.1155e+00, -2.3452e-01,
        -5.1119e-01, -5.7387e-01, -4.0304e-01,  6.1836e-02, -1.0063e-02,
        -8.2638e-02, -6.5849e-01,  2.7701e-01, -1.9984e-15, -1.9984e-15,
        -6.8725e-01, -5.9373e-01, -8.0888e-01, -1.3837e+00, -3.6370e-01,
        -4.1105e-01, -2.4010e-02, -2.0170e-04, -4.9901e-01,  1.5389e-01,
         1.6645e+00, -1.8019e-01,  2.9992e-01,  8.5526e-01, -1.0712e-01,
         2.5620e-01,  2.3093e-14,  2.4657e-01,  3.6650e-02, -6.6400e-01,
         1.7463e-01,  6.1301e-03, -2.8369e-01,  1.0891e-01, -5.6362e-01,
         1.1633e-01,  2.0681e-02,  2.5606e+00,  6.0114e-01,  2.7374e-01,
        -3.9262e-01,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  1.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         1.0000e+00,  1.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00]), tensor([1859]), tensor(-0.1000))
INFO:main.py:

Create dataloader

INFO:main.py:Create train and test dataloader
INFO:main.py:Create retrain and prediction dataloader
INFO:main.py:

Hyperparameters tuning with Ray Tune

INFO:main.py:Training data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018]
INFO:main.py:Testing data year: 2019
INFO:main.py:

            ray_results_path: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
            num_samples: 50
            max_num_epochs: 30
            num_cpus: 50
            cpus_per_trial: 1
            num_gpus: 4
            gpus_per_trial: 1
            continuous_dim: 151
            num_embeddings: 17157
            device: cuda
            
2024-07-17 18:58:11,536	INFO worker.py:1753 -- Started a local Ray instance.
2024-07-17 18:58:11,591	INFO packaging.py:530 -- Creating a file package for local directory '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src'.
2024-07-17 18:58:11,649	INFO packaging.py:358 -- Pushing file package 'gcs://_ray_pkg_8058b1631051356f.zip' (1.31MiB) to Ray cluster...
2024-07-17 18:58:11,659	INFO packaging.py:371 -- Successfully pushed file package 'gcs://_ray_pkg_8058b1631051356f.zip'.
2024-07-17 18:58:15,673	WARNING tune.py:902 -- AIR_VERBOSITY is set, ignoring passed-in ProgressReporter for now.
2024-07-17 19:56:28,441	INFO tune.py:1009 -- Wrote the latest version of all result files and experiment state to '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results/train_fnn_2024-07-17_18-58-15' in 0.1452s.
INFO:model_data_nn.py:Best trial config: {'continuous_dim': 151, 'hidden_dim': 135, 'num_layers': 5, 'num_embeddings': 17157, 'embedding_dim': 15, 'dropout_rate': 0.54, 'lr': 0.001, 'weight_decay': 0.00018292676411745708, 'num_epochs': 30, 'num_gpus': 4}
INFO:model_data_nn.py:Best trial training loss: 0.032936139287658844
INFO:model_data_nn.py:Best trial testing loss: 0.03191499790139743
INFO:main.py:Ray Tune results have been saved to: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
INFO:main.py:Best trial directory: /tmp/ray/session_2024-07-17_18-58-07_982026_2550128/artifacts/2024-07-17_18-58-15/train_fnn_2024-07-17_18-58-15/driver_artifacts/train_fnn_325a6_00040_40_dropout_rate=0.5400,embedding_dim=15,hidden_dim=135,lr=0.0010,num_layers=5,weight_decay=0.0002_2024-07-17_18-58-15
INFO:main.py:

Retrain a new model with data in years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019]

            Using the optimized hyperparameters: {'continuous_dim': 151, 'hidden_dim': 135, 'num_layers': 5, 'num_embeddings': 17387, 'embedding_dim': 15, 'dropout_rate': 0.54, 'lr': 0.001, 'weight_decay': 0.00018292676411745708, 'num_epochs': 30, 'num_gpus': 4}

INFO:model_data_nn.py:Epoch 1/30, metrics: {'avg_train_loss': 1.817814265181264, 'avg_test_loss': 0.0789236705441842}
INFO:model_data_nn.py:Epoch 2/30, metrics: {'avg_train_loss': 0.03648043554469028, 'avg_test_loss': 0.07889115565536631}
INFO:model_data_nn.py:Epoch 3/30, metrics: {'avg_train_loss': 0.0329947470284078, 'avg_test_loss': 0.07937477982374809}
INFO:model_data_nn.py:Epoch 4/30, metrics: {'avg_train_loss': 0.032930743504735766, 'avg_test_loss': 0.07960995249696914}
INFO:model_data_nn.py:Epoch 5/30, metrics: {'avg_train_loss': 0.03293643555075475, 'avg_test_loss': 0.07923375762727679}
INFO:model_data_nn.py:Early stopping at epoch 5
INFO:main.py:Making prediction for data in year: 2020
INFO:main.py:Prediction data shape: (38579,)
/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src/main.py:355: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  prediction_data['pred'] = predictions
INFO:main.py:Root Mean Squared Error for Prediction in 2020: 0.2816074466750494
INFO:main.py:Prediction Stats:                 ret          pred
count  38579.000000  38579.000000
mean       0.033419      0.013217
std        0.281326      0.005334
min       -0.889030      0.009165
25%       -0.081633      0.010982
50%        0.009837      0.011281
75%        0.111111      0.012568
max       14.458016      0.081479
╭──────────────────────────────────────────────────────────────────╮
│ Configuration for experiment     train_fnn_2024-07-17_13-50-38   │
├──────────────────────────────────────────────────────────────────┤
│ Search algorithm                 BasicVariantGenerator           │
│ Scheduler                        AsyncHyperBandScheduler         │
│ Number of trials                 50                              │
╰──────────────────────────────────────────────────────────────────╯

View detailed results here: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results/train_fnn_2024-07-17_13-50-38
To visualize your results with TensorBoard, run: `tensorboard --logdir /tmp/ray/session_2024-07-17_13-50-31_795908_2550128/artifacts/2024-07-17_13-50-38/train_fnn_2024-07-17_13-50-38/driver_artifacts`

╭──────────────────────────────────────────────────────────────────╮
│ Configuration for experiment     train_fnn_2024-07-17_18-58-15   │
├──────────────────────────────────────────────────────────────────┤
│ Search algorithm                 BasicVariantGenerator           │
│ Scheduler                        AsyncHyperBandScheduler         │
│ Number of trials                 50                              │
╰──────────────────────────────────────────────────────────────────╯

View detailed results here: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results/train_fnn_2024-07-17_18-58-15
To visualize your results with TensorBoard, run: `tensorboard --logdir /tmp/ray/session_2024-07-17_18-58-07_982026_2550128/artifacts/2024-07-17_18-58-15/train_fnn_2024-07-17_18-58-15/driver_artifacts`

INFO:postprocess_predictions.py:Post processing prediction files
INFO:postprocess_predictions.py:Postprocessing data from path: kevin/output/prediction/monthly_new_vars/monthly_prediction_1993.csv
INFO:postprocess_predictions.py:Postprocessing data from path: kevin/output/prediction/monthly_new_vars/monthly_prediction_1994.csv
INFO:postprocess_predictions.py:Postprocessing data from path: kevin/output/prediction/monthly_new_vars/monthly_prediction_2003.csv
INFO:postprocess_predictions.py:Postprocessing data from path: kevin/output/prediction/monthly_new_vars/monthly_prediction_2004.csv
INFO:postprocess_predictions.py:Postprocessing data from path: kevin/output/prediction/monthly_new_vars/monthly_prediction_2015.csv
INFO:postprocess_predictions.py:Postprocessing data from path: kevin/output/prediction/monthly_new_vars/monthly_prediction_2012.csv
INFO:postprocess_predictions.py:Postprocessing data from path: kevin/output/prediction/monthly_new_vars/monthly_prediction_1985.csv
INFO:postprocess_predictions.py:Postprocessing data from path: kevin/output/prediction/monthly_new_vars/monthly_prediction_2020.csv
INFO:postprocess_predictions.py:Postprocessing data from path: kevin/output/prediction/monthly_new_vars/monthly_prediction_2005.csv
INFO:postprocess_predictions.py:Postprocessing data from path: kevin/output/prediction/monthly_new_vars/monthly_prediction_2002.csv
INFO:postprocess_predictions.py:Postprocessing data from path: kevin/output/prediction/monthly_new_vars/monthly_prediction_1995.csv
INFO:postprocess_predictions.py:Postprocessing data from path: kevin/output/prediction/monthly_new_vars/monthly_prediction_1992.csv
INFO:postprocess_predictions.py:Postprocessing data from path: kevin/output/prediction/monthly_new_vars/monthly_prediction_2013.csv
INFO:postprocess_predictions.py:Postprocessing data from path: kevin/output/prediction/monthly_new_vars/monthly_prediction_2014.csv
INFO:postprocess_predictions.py:Postprocessing data from path: kevin/output/prediction/monthly_new_vars/monthly_prediction_1989.csv
INFO:postprocess_predictions.py:Postprocessing data from path: kevin/output/prediction/monthly_new_vars/monthly_prediction_1987.csv
INFO:postprocess_predictions.py:Postprocessing data from path: kevin/output/prediction/monthly_new_vars/monthly_prediction_2019.csv
INFO:postprocess_predictions.py:Postprocessing data from path: kevin/output/prediction/monthly_new_vars/monthly_prediction_2017.csv
INFO:postprocess_predictions.py:Postprocessing data from path: kevin/output/prediction/monthly_new_vars/monthly_prediction_2010.csv
INFO:postprocess_predictions.py:Postprocessing data from path: kevin/output/prediction/monthly_new_vars/monthly_prediction_2001.csv
INFO:postprocess_predictions.py:Postprocessing data from path: kevin/output/prediction/monthly_new_vars/monthly_prediction_2006.csv
INFO:postprocess_predictions.py:Postprocessing data from path: kevin/output/prediction/monthly_new_vars/monthly_prediction_2008.csv
INFO:postprocess_predictions.py:Postprocessing data from path: kevin/output/prediction/monthly_new_vars/monthly_prediction_1991.csv
INFO:postprocess_predictions.py:Postprocessing data from path: kevin/output/prediction/monthly_new_vars/monthly_prediction_1996.csv
INFO:postprocess_predictions.py:Postprocessing data from path: kevin/output/prediction/monthly_new_vars/monthly_prediction_1998.csv
INFO:postprocess_predictions.py:Postprocessing data from path: kevin/output/prediction/monthly_new_vars/monthly_prediction_2011.csv
INFO:postprocess_predictions.py:Postprocessing data from path: kevin/output/prediction/monthly_new_vars/monthly_prediction_2016.csv
INFO:postprocess_predictions.py:Postprocessing data from path: kevin/output/prediction/monthly_new_vars/monthly_prediction_2018.csv
INFO:postprocess_predictions.py:Postprocessing data from path: kevin/output/prediction/monthly_new_vars/monthly_prediction_1986.csv
INFO:postprocess_predictions.py:Postprocessing data from path: kevin/output/prediction/monthly_new_vars/monthly_prediction_1988.csv
INFO:postprocess_predictions.py:Postprocessing data from path: kevin/output/prediction/monthly_new_vars/monthly_prediction_1999.csv
INFO:postprocess_predictions.py:Postprocessing data from path: kevin/output/prediction/monthly_new_vars/monthly_prediction_1997.csv
INFO:postprocess_predictions.py:Postprocessing data from path: kevin/output/prediction/monthly_new_vars/monthly_prediction_1990.csv
INFO:postprocess_predictions.py:Postprocessing data from path: kevin/output/prediction/monthly_new_vars/monthly_prediction_2009.csv
INFO:postprocess_predictions.py:Postprocessing data from path: kevin/output/prediction/monthly_new_vars/monthly_prediction_2007.csv
INFO:postprocess_predictions.py:Postprocessing data from path: kevin/output/prediction/monthly_new_vars/monthly_prediction_2000.csv
INFO:postprocess_predictions.py:Sort the result by date and rank both ascendingly
INFO:postprocess_predictions.py:Saved the result file: result.csv
to the directory: kevin/output/prediction/monthly_new_vars
