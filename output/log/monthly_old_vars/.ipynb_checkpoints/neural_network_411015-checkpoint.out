Current working directory
/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin
source venv/bin/activate
which python3
/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/venv/bin/python3
Intel(R) Extension for Scikit-learn* enabled (https://github.com/intel/scikit-learn-intelex)
Intel(R) Extension for Scikit-learn* enabled (https://github.com/intel/scikit-learn-intelex)
INFO:preprocess_data_nn.py:

Loading and preprocessing data...

DEBUG:preprocess_data_nn.py:      date  permno
0  1980-01   10006
1  1980-01   10057
2  1980-01   10103
3  1980-01   10137
4  1980-01   10145
DEBUG:preprocess_data_nn.py:--------------------------------------------------
INFO:main.py:preprocessed df: (2216189, 158)
INFO:preprocess_data_nn.py:

Applying secondary data preprocessing..

INFO:main.py:secondary preprocessed df: (2165515, 158)
INFO:main.py:df sample:    permno  gvkey   adatadate  fyear  sic2     spi       mve_f  ...     zerotrade      beta    betasq      rsq1  pricedelay   idiovol  pyear
0   10006   1010  12/31/1978   1978    37  0.0000  269.308500  ...  1.115306e-07  1.060420  1.124491  0.343408    0.029859  0.025576   1980
1   10057   1098  09/30/1978   1978    36  0.0000   97.372000  ...  6.199128e-08  1.526013  2.328716  0.307905    0.092667  0.037473   1980
2   10103   1012  10/31/1978   1978    33     NaN    1.697500  ...           NaN  1.759493  3.095816  0.096753    0.221851  0.087020   1980
3   10137   1279  12/31/1978   1978    49     NaN  537.524500  ...  9.726790e-08  0.492885  0.242936  0.189693    0.125777  0.017540   1980
4   10145   1300  12/31/1978   1978    99 -0.0031  805.633282  ...  6.190654e-08  1.139163  1.297691  0.279437    0.024228  0.031201   1980

[5 rows x 158 columns]
INFO:main.py:

Transform data

INFO:transform_data_nn.py:Train data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986]
INFO:transform_data_nn.py:Train_data: (341783, 158)

INFO:transform_data_nn.py:Test data years: [1987]
INFO:transform_data_nn.py:Test_data: (53899, 158)

INFO:transform_data_nn.py:Retrain data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987]
INFO:transform_data_nn.py:Retrain_data: (395682, 158)

INFO:transform_data_nn.py:Prediction data years: [1988]
INFO:transform_data_nn.py:Prediction_data: (56005, 158)

DEBUG:main.py:Pipeline built: Pipeline(steps=[('Time_period_mean_imputation',
                 _TimePeriodMeanTransformer(date_column='date',
                                            numeric_columns=['absacc', 'acc',
                                                             'aeavol', 'age',
                                                             'agr', 'baspread',
                                                             'beta', 'betasq',
                                                             'bm', 'bm_ia',
                                                             'cash', 'cashdebt',
                                                             'cashpr', 'cfp',
                                                             'cfp_ia',
                                                             'chatoia',
                                                             'chcsho',
                                                             'chempia',
                                                             'chfeps', 'chinv',
                                                             'chmom',
                                                             'chnanalyst',
                                                             'chpmia', 'chtx',
                                                             'cinvest',
                                                             'currat', 'depr',
                                                             'disp', 'dolvo...
                                                   'chempia', 'chfeps', 'chinv',
                                                   'chmom', 'chnanalyst',
                                                   'chpmia', 'chtx', 'cinvest',
                                                   'currat', 'depr', 'disp',
                                                   'dolvol', 'dy', ...]),
                                                 ('cat',
                                                  Pipeline(steps=[('impute_cat',
                                                                   SimpleImputer(fill_value=0,
                                                                                 strategy='constant'))]),
                                                  ['convind', 'divi', 'divo',
                                                   'ipo', 'rd', 'securedind',
                                                   'sin']),
                                                 ('embed',
                                                  Pipeline(steps=[('impute_embed',
                                                                   SimpleImputer(fill_value=0,
                                                                                 strategy='constant'))]),
                                                  ['permno'])]))])
INFO:main.py:

Generate X and y with train_data and test_data

DEBUG:main.py:Save the reload the tensors for much faster debugging
INFO:main.py:Tensors directory already exists at: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/tensors
DEBUG:main.py:Load the tensors
INFO:main.py:
        x_train_tf: torch.Size([341783, 103])
        y_train_tf: torch.Size([341783])

        x_test_tf: torch.Size([53899, 103])
        y_test_tf: torch.Size([53899])

    
INFO:main.py:
        x_retrain_tf: torch.Size([395682, 103])
        y_retrain_tf: torch.Size([395682])

        x_prediction_tf: torch.Size([56005, 103])
        y_prediction_tf: torch.Size([56005])

    
INFO:main.py:Create train_dataset
INFO:main.py:train_dataset first example: (tensor([ 0.2614,  0.5034,  0.2386, -0.6303,  0.0469, -0.5241, -0.0284, -0.2584,
         0.3866,  0.1910, -0.8830,  0.0062, -0.5088, -0.1862, -0.0053,  0.0250,
        -0.4235,  0.1175,  0.0000,  0.6719, -0.3586,  0.0000,  0.0257,  0.0166,
         0.0370, -0.2229, -0.6756,  0.0000,  0.5764,  1.1873,  0.6227, -0.1414,
         0.5064,  0.0000, -0.5226, -0.2165,  0.1496,  0.1907,  0.1020, -1.1512,
        -0.3211,  0.0239,  0.3191, -0.0440, -0.0208, -0.6509, -0.0216, -0.0993,
        -0.6609, -0.2278, -0.1547,  0.9190, -0.1748,  0.0000,  0.0265, -0.3809,
        -0.9466, -0.0875, -0.6362, -0.1616,  0.1008, -0.6415, -0.3684, -0.1993,
        -0.2698, -0.5237,  0.0996, -0.1018, -0.1900, -0.4132, -0.7240, -0.3249,
         0.0346, -0.8136,  0.1052, -1.0783,  0.2870,  0.2369,  0.6056,  0.1760,
        -0.4392, -0.2020, -0.0110,  0.0000, -0.0826, -0.0538, -0.3134, -0.6841,
        -0.4092, -0.4207,  0.1949, -0.2766,  0.1496, -0.1756, -0.5206,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000]), tensor([1104]), tensor(0.2117))
INFO:main.py:Create test_dataset
INFO:main.py:test_dataset first example: (tensor([-6.9920e-03,  8.9557e-03, -3.4033e-01, -1.6683e+00,  4.0069e-03,
         1.0097e+00, -2.5891e-03, -1.0957e-02, -9.5448e-01,  1.8591e-01,
         3.8505e-01,  6.2086e-01,  1.9972e-01,  2.1500e-02, -2.2037e-05,
         6.4081e-03, -7.8682e-03,  1.2509e-02,  0.0000e+00,  2.2175e-02,
        -7.5173e-02,  0.0000e+00, -1.5533e-02,  1.2460e-02,  3.1036e-02,
         1.3005e-01, -2.3377e-01,  0.0000e+00, -4.6695e-01, -7.7328e-01,
        -6.6426e-01,  6.0568e-03, -1.6879e-02,  0.0000e+00,  1.5509e-02,
        -1.9876e-03,  9.2778e-03, -4.6920e-01,  6.8878e-04, -2.7767e-02,
        -1.1036e-01, -6.2118e-01,  1.3711e-02, -4.6129e-01, -4.5306e-03,
         2.2998e+00,  1.6293e-02, -1.3041e+00,  5.4224e-02, -1.1150e-03,
        -8.5550e-01, -1.1288e+00, -3.1813e-01,  0.0000e+00, -8.7597e-01,
         1.4499e-02,  3.0605e-02,  1.3658e-02, -8.7689e-03, -1.7061e-02,
         1.2506e-02, -1.1364e-02, -2.6022e-03,  1.5424e-03, -6.5274e-04,
        -7.4535e-03, -6.8802e-03, -2.2825e-02,  2.5533e-02,  1.5004e-01,
        -1.1726e-02, -2.4365e-02,  3.4575e-02,  1.6018e+00, -3.4779e+00,
        -7.2764e-02, -2.0625e+00,  4.1949e-01, -3.2436e-01, -4.6815e-01,
        -4.0800e-01, -3.1863e-01,  1.6746e+00,  0.0000e+00, -3.2632e-03,
        -6.4726e-01,  8.8510e-02,  5.2651e-01, -4.4860e-02, -4.4852e-02,
        -2.1688e-01,  1.4353e+00,  1.8772e-01,  3.0461e-01, -5.2065e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  1.0000e+00,  0.0000e+00,
         1.0000e+00,  0.0000e+00]), tensor([457]), tensor(-0.5200))
INFO:main.py:Create retrain_dataset
INFO:main.py:retrain_dataset first example: (tensor([ 2.4375e-01,  4.9617e-01,  2.3474e-01, -6.5108e-01,  3.9445e-02,
        -5.2971e-01, -3.2399e-02, -2.6454e-01,  4.4939e-01,  1.9404e-01,
        -8.7559e-01,  2.9982e-02, -5.1678e-01, -1.7870e-01,  2.8057e-02,
         2.6105e-02, -4.2786e-01,  1.3802e-01,  0.0000e+00,  6.8093e-01,
        -3.5624e-01,  0.0000e+00,  3.2302e-02, -4.2100e-03,  2.3124e-02,
        -2.2767e-01, -6.6230e-01,  0.0000e+00,  5.4395e-01,  1.2575e+00,
         6.0546e-01, -1.2386e-01,  5.1282e-01,  0.0000e+00, -5.0374e-01,
        -2.0934e-01,  1.6390e-01,  1.9552e-01,  8.7618e-02, -1.1469e+00,
        -3.1720e-01,  6.2132e-02,  3.3133e-01, -2.5122e-02, -3.4593e-02,
        -6.5851e-01,  4.2816e-04, -7.2423e-02, -6.5629e-01, -2.1883e-01,
        -1.4935e-01,  8.9773e-01, -1.5623e-01,  0.0000e+00,  2.4546e-02,
        -3.5709e-01, -9.4222e-01, -1.1718e-01, -6.1813e-01, -1.7652e-01,
         1.0460e-01, -6.2822e-01, -3.6749e-01, -1.8878e-01, -2.6630e-01,
        -5.2445e-01,  7.6502e-02, -1.0615e-01, -1.6425e-01, -4.0413e-01,
        -7.2657e-01, -3.3089e-01,  3.7161e-02, -8.1525e-01,  1.3346e-01,
        -9.9192e-01,  2.9311e-01,  2.4566e-01,  6.3414e-01,  1.7033e-01,
        -4.4184e-01, -2.0106e-01, -3.8979e-03,  0.0000e+00, -7.9384e-02,
        -1.3757e-02, -3.2263e-01, -6.8126e-01, -1.6517e-01, -1.5155e-01,
         1.8087e-01, -2.6300e-01,  1.4201e-01, -2.0741e-01, -5.1845e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([1187]), tensor(0.2117))
INFO:main.py:Create prediction_dataset
INFO:main.py:prediction_dataset first example: (tensor([-9.6036e-01, -4.9283e-01, -4.7202e-01, -1.2875e+00, -5.9088e-01,
        -3.4143e-01, -1.7353e+00, -1.0156e+00,  6.0711e-02,  1.9547e-01,
        -4.0377e-01, -9.2351e-03, -4.1386e-03, -3.5552e-02,  1.6291e-02,
         4.4557e-03, -4.1867e-01,  1.1388e-02,  0.0000e+00, -2.8223e-01,
        -1.5983e-01,  0.0000e+00,  8.3143e-02,  4.9025e-02, -1.0656e-02,
        -6.2313e-01, -8.2264e-01,  0.0000e+00, -5.7750e-01,  1.3797e+00,
        -1.6007e+00, -3.2115e-01,  1.1211e-01,  0.0000e+00, -1.0634e+00,
         3.8040e-03, -5.2228e-01, -8.2825e-01, -2.7243e-01, -8.6950e-01,
         5.3128e-01, -8.5044e-01, -3.8617e-01, -2.6063e-01, -4.5432e-01,
        -1.9406e-01,  1.0492e-02, -3.0692e-01,  5.1011e-03, -9.7349e-03,
        -8.4332e-01, -1.1018e+00, -1.1294e+00,  0.0000e+00, -8.6923e-01,
        -9.1403e-01,  2.6640e-02, -1.2260e-01, -3.3319e-01, -3.9018e-02,
        -1.9560e-01, -3.4380e-01, -1.7398e-01,  3.2079e-01, -1.7674e-03,
        -4.6619e-01, -2.1413e-01,  1.4636e+00, -8.8986e-01, -3.8259e-01,
        -9.5638e-03, -3.3089e-02,  3.7161e-02,  3.0098e-02, -4.4583e-01,
        -7.1099e-02, -3.4420e-01,  8.4362e-02, -6.3088e-01, -2.8029e-01,
         4.2441e+00,  3.3876e-01, -3.8979e-03,  0.0000e+00, -7.6692e-01,
        -6.3231e-02,  2.3258e+00,  5.0224e+00, -3.6348e-02, -4.6659e-02,
         2.0041e-01, -8.0320e-01, -4.0666e-01,  3.0623e-01,  1.1257e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([941]), tensor(0.0638))
INFO:main.py:train and test dataloader
INFO:main.py:train_loader first example: [tensor([[-1.0088, -0.5422, -0.4383,  ...,  0.0000,  0.0000,  0.0000],
        [-0.6924, -0.2817, -0.0022,  ...,  0.0000,  0.0000,  0.0000],
        [-0.2113,  0.1143, -0.3394,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0943, -1.8503,  0.0265,  ...,  0.0000,  1.0000,  0.0000],
        [-0.0033,  0.0097, -0.7979,  ...,  0.0000,  0.0000,  0.0000],
        [ 1.9046,  1.8560, -0.0022,  ...,  0.0000,  0.0000,  0.0000]]), tensor([[3855],
        [ 710],
        [1764],
        [1122],
        [2724],
        [5392],
        [1557],
        [3072],
        [1348],
        [4860],
        [2838],
        [2543],
        [1562],
        [ 271],
        [ 673],
        [ 402],
        [2840],
        [ 234],
        [5728],
        [3920],
        [  66],
        [6572],
        [6046],
        [1687],
        [2619],
        [4676],
        [5373],
        [2933],
        [3484],
        [1783],
        [2279],
        [6393],
        [5465],
        [1112],
        [5085],
        [3233],
        [3194],
        [5797],
        [1639],
        [6018],
        [4413],
        [ 430],
        [5627],
        [6252],
        [5142],
        [4982],
        [ 597],
        [5164],
        [4558],
        [5359],
        [3178],
        [4693],
        [ 793],
        [5286],
        [4538],
        [4480],
        [6122],
        [3644],
        [ 775],
        [1075],
        [3280],
        [3233],
        [1506],
        [2695],
        [2362],
        [1447],
        [4997],
        [6463],
        [4590],
        [5606],
        [3648],
        [4679],
        [ 228],
        [1677],
        [2446],
        [1482],
        [5135],
        [1625],
        [3152],
        [5453],
        [ 668],
        [1591],
        [6489],
        [3651],
        [2969],
        [4829],
        [3006],
        [2527],
        [4078],
        [5024],
        [4174],
        [2135],
        [2179],
        [5623],
        [4453],
        [4740],
        [3404],
        [4329],
        [4895],
        [4822],
        [5092],
        [4594],
        [2537],
        [1519],
        [3267],
        [6368],
        [1374],
        [2372],
        [4806],
        [6244],
        [5130],
        [5153],
        [6130],
        [ 564],
        [3161],
        [ 575],
        [1892],
        [6605],
        [6116],
        [1330],
        [4178],
        [ 185],
        [1004],
        [4684],
        [5983],
        [3404],
        [2877],
        [1022],
        [3872],
        [3210],
        [2727],
        [ 805],
        [5701],
        [4755],
        [1281],
        [5777],
        [3468],
        [5833],
        [3831],
        [ 812],
        [3555],
        [2968],
        [1726],
        [3398],
        [ 308],
        [4272],
        [4421],
        [3859],
        [3320],
        [4875],
        [6360],
        [5700],
        [4679],
        [5350],
        [1069],
        [5293],
        [1262],
        [3252],
        [4994],
        [6605],
        [4096],
        [4826],
        [4518],
        [3692],
        [4024],
        [5116],
        [2279],
        [3441],
        [5767],
        [3246],
        [ 774],
        [2029],
        [5884],
        [4391],
        [1372],
        [3286],
        [6490],
        [2095],
        [4620],
        [5016],
        [5842],
        [   8],
        [3789],
        [1521],
        [5853],
        [1987],
        [5363],
        [1170],
        [6457],
        [1053],
        [4571],
        [2366],
        [4414],
        [ 863],
        [4445],
        [6043],
        [3214],
        [ 250],
        [3938],
        [2312],
        [3431],
        [6390],
        [6158],
        [3365],
        [3984],
        [3834],
        [6615],
        [4748],
        [6487],
        [5797],
        [3806],
        [1043],
        [6283],
        [3378],
        [3555],
        [1290],
        [5481],
        [4665],
        [1980],
        [ 871],
        [1272],
        [1111],
        [2773],
        [4602],
        [4111],
        [5254],
        [2500],
        [  82],
        [5559],
        [4366],
        [1093],
        [4969],
        [ 923],
        [3343],
        [1101],
        [6088],
        [3935],
        [4247],
        [ 961],
        [3717],
        [4725],
        [1030],
        [ 550],
        [1135],
        [1889],
        [4771],
        [1581],
        [5081],
        [3630],
        [1116],
        [5405],
        [2962],
        [ 239],
        [2175],
        [ 542],
        [ 967]]), tensor([ 0.0655, -0.0700,  0.0394,  0.0787,  0.1803, -0.0815, -0.2308,  0.0750,
         0.0774,  0.0566,  0.1026,  0.0150, -0.0853, -0.0414,  0.0484,  0.0000,
         0.1579,  0.1905,  0.0409, -0.0023, -0.0377,  0.3750, -0.0077,  0.0000,
         0.0371,  0.0653,  0.2111,  0.0000, -0.1364,  0.0000, -0.0100,  0.1071,
        -0.0422,  0.1200,  0.0775, -0.0214,  0.0599,  0.0105,  0.1963,  0.0568,
        -0.0179,  0.0104, -0.2121,  0.1684, -0.0331, -0.0755,  0.3647, -0.0376,
        -0.1111,  0.0000, -0.0870,  0.1346, -0.0741, -0.0282, -0.0625,  0.0208,
        -0.0606, -0.0870, -0.0667,  0.0361,  0.2778,  0.0286, -0.1290,  0.0046,
         0.1923, -0.1509,  0.0727, -0.0930, -0.2000, -0.1724,  0.0000, -0.1905,
        -0.1667, -0.0833, -0.0410, -0.0536, -0.0685, -0.0769, -0.0084, -0.0441,
        -0.0078, -0.0414,  0.1233,  0.0784,  0.0000, -0.0500,  0.1120,  0.1207,
        -0.1147,  0.1688, -0.0363,  0.0529, -0.0124,  0.0375, -0.2442,  0.0444,
         0.0345,  0.1954, -0.0299, -0.1887, -0.0342,  0.0366, -0.0513, -0.1550,
        -0.0206,  0.0631,  0.0982, -0.0690,  0.0667, -0.0951, -0.1463,  0.0295,
        -0.0308,  0.0642,  0.2500,  0.0112,  0.1559, -0.0025,  0.0000,  0.2951,
         0.0000,  0.0000, -0.1385, -0.1327,  0.0943,  0.0567,  0.0759, -0.0012,
        -0.2222,  0.1702, -0.0524, -0.0472, -0.0735,  0.2222,  0.0312,  0.0243,
         0.2772,  0.1221,  0.0260,  0.0128,  0.0410,  0.0606,  0.0938,  0.2667,
         0.0435,  0.1731,  0.0000,  0.0046,  0.0114,  0.0833,  0.0147,  0.1053,
        -0.1429,  0.1488, -0.0254,  0.0896,  0.0952,  0.0895,  0.2610,  0.0051,
        -0.0659, -0.2568,  0.0732,  0.0000,  0.1045,  0.0741,  0.1185,  0.1509,
         0.2083, -0.2128,  0.1020,  0.5806,  0.1404, -0.0043, -0.1905, -0.0900,
        -0.0288, -0.0115,  0.0295, -0.1481,  0.6154, -0.1489,  0.0361, -0.0081,
         0.0365,  0.0847, -0.0588, -0.4000,  0.0290, -0.0093,  0.1121, -0.1000,
        -0.0063,  0.0435,  0.0521, -0.0362,  0.1325,  0.1429,  0.0217, -0.0893,
         0.0312,  0.1000,  0.1259, -0.0314,  0.0278, -0.0631, -0.0816, -0.3793,
         0.1818,  0.0284, -0.0408,  0.0000,  0.2179,  0.2568,  0.0303, -0.0250,
        -0.0615, -0.2073, -0.2000,  0.0203,  0.0952,  0.0463,  0.0341,  0.1829,
        -0.0196, -0.1326,  0.0672,  0.0400,  0.2037, -0.1228,  0.0491,  0.1636,
         0.1429, -0.0271, -0.1685, -0.1321,  0.2692,  0.2476,  0.0000, -0.0206,
        -0.0207,  0.2174, -0.0350,  0.0882,  0.1471,  0.0405, -0.0104,  0.0000,
        -0.1844,  0.3269, -0.3095,  0.1429,  0.0310, -0.0227,  0.1214, -0.2238])]

INFO:main.py:test_loader first example: [tensor([[-6.9920e-03,  8.9557e-03, -3.4033e-01,  ...,  0.0000e+00,
          1.0000e+00,  0.0000e+00],
        [-6.9920e-03,  8.9557e-03, -6.7673e-04,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00],
        [-6.9920e-03,  8.9557e-03,  1.0606e-01,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00],
        ...,
        [ 1.7339e-01,  4.3097e-01,  6.6809e-03,  ...,  0.0000e+00,
          1.0000e+00,  0.0000e+00],
        [ 2.1500e+00,  2.0581e+00, -4.4383e-01,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00],
        [ 2.2295e-02,  3.0659e-01, -6.7673e-04,  ...,  0.0000e+00,
          1.0000e+00,  0.0000e+00]]), tensor([[ 457],
        [2344],
        [4478],
        [ 605],
        [1593],
        [2152],
        [1904],
        [2479],
        [3118],
        [4029],
        [2192],
        [4736],
        [4992],
        [ 709],
        [ 212],
        [3705],
        [1292],
        [3203],
        [ 733],
        [ 902],
        [4522],
        [ 107],
        [4544],
        [4685],
        [4747],
        [1928],
        [2976],
        [4263],
        [1378],
        [ 573],
        [1401],
        [1446],
        [2614],
        [4225],
        [1353],
        [3283],
        [4855],
        [3979],
        [2084],
        [2806],
        [2658],
        [3093],
        [3534],
        [4788],
        [2477],
        [4155],
        [4472],
        [1760],
        [  79],
        [ 612],
        [4183],
        [1704],
        [ 977],
        [1439],
        [1972],
        [3971],
        [2404],
        [4703],
        [ 811],
        [3345],
        [3502],
        [2980],
        [ 233],
        [2378],
        [4235],
        [ 950],
        [2310],
        [1774],
        [2444],
        [3667],
        [1151],
        [1884],
        [2859],
        [4783],
        [4491],
        [1728],
        [3830],
        [4240],
        [2510],
        [  95],
        [ 803],
        [4293],
        [3029],
        [4775],
        [3182],
        [4211],
        [1810],
        [3729],
        [1159],
        [ 467],
        [3041],
        [1336],
        [4037],
        [3477],
        [4138],
        [ 967],
        [ 789],
        [ 521],
        [ 284],
        [1540],
        [1537],
        [ 419],
        [4645],
        [4286],
        [1804],
        [4445],
        [2046],
        [3071],
        [ 610],
        [4741],
        [4651],
        [1820],
        [1496],
        [ 240],
        [2057],
        [1281],
        [4121],
        [3605],
        [4513],
        [4924],
        [ 202],
        [3753],
        [ 407],
        [3452],
        [4595],
        [1935],
        [4870],
        [3632],
        [ 952],
        [1634],
        [2739],
        [4459],
        [3907],
        [4997],
        [4510],
        [1250],
        [ 647],
        [4912],
        [1523],
        [4508],
        [2516],
        [4494],
        [3017],
        [2295],
        [2758],
        [ 907],
        [2836],
        [ 819],
        [ 974],
        [2556],
        [ 770],
        [ 250],
        [2542],
        [2601],
        [4035],
        [1227],
        [2834],
        [3920],
        [3820],
        [3000],
        [4593],
        [1303],
        [1238],
        [2586],
        [3064],
        [1545],
        [3327],
        [3311],
        [1441],
        [2827],
        [4213],
        [1402],
        [3123],
        [4559],
        [3746],
        [2784],
        [3089],
        [1516],
        [1850],
        [2943],
        [1613],
        [1764],
        [2022],
        [2157],
        [  80],
        [ 881],
        [2606],
        [1425],
        [ 960],
        [ 649],
        [ 461],
        [ 254],
        [ 185],
        [1906],
        [ 248],
        [3709],
        [3755],
        [3389],
        [4952],
        [3699],
        [  93],
        [1009],
        [2512],
        [4605],
        [3456],
        [3474],
        [4081],
        [3711],
        [ 229],
        [4666],
        [1256],
        [4877],
        [2132],
        [ 906],
        [4389],
        [ 294],
        [4085],
        [2228],
        [3436],
        [1246],
        [1349],
        [ 981],
        [1956],
        [1578],
        [3697],
        [5016],
        [4055],
        [1919],
        [2162],
        [4042],
        [3734],
        [3098],
        [4632],
        [1199],
        [2741],
        [2274],
        [1215],
        [4023],
        [ 835],
        [4469],
        [1130],
        [3325],
        [1272],
        [3107],
        [2893],
        [1221],
        [1387],
        [2453],
        [2912],
        [ 817],
        [5019],
        [3766],
        [2171],
        [ 951],
        [1733],
        [4879]]), tensor([-0.5200,  0.0000, -0.0217,  0.0909,  0.0417, -0.2105,  0.1136,  0.3243,
         0.0667,  0.2500,  0.1060,  0.1562,  0.4306,  0.1304, -0.0133, -0.0222,
        -0.2667, -0.1571,  0.1707,  0.0667,  0.0847,  0.1776,  0.2695,  0.0476,
         0.1163,  0.2268, -0.1351,  0.0000,  0.3103,  0.1769,  0.1379,  0.2647,
         0.0769,  0.0870,  0.2017,  0.0029, -0.0100,  0.2143,  0.0766,  0.0256,
         0.1905, -0.0068, -0.0328,  0.0000,  0.1250, -0.0330,  0.0448,  0.2800,
         0.0000,  0.2364,  0.0519,  0.4583,  0.2632,  0.2600,  0.1803,  0.0000,
         0.1630,  0.1739,  0.0725,  0.2609,  0.1041,  0.0851,  0.1703,  0.0000,
         0.0526,  0.2114,  0.0000, -0.2449,  0.1600,  0.1259,  0.2162,  0.3333,
         0.2400,  0.0619,  0.1240,  0.0323,  0.0235,  0.1392,  0.0784,  0.0889,
         0.0440,  0.2905,  0.1935,  0.1291,  0.3625,  0.0949, -0.0682,  0.0000,
         0.1556,  0.0398, -0.2364,  0.0000,  0.0714,  0.0179,  0.2000,  0.2062,
         0.1061,  0.1000,  0.1652, -0.0370,  0.1311,  0.0847, -0.1290,  0.1299,
        -0.1818,  0.1399, -0.1429,  0.1800,  0.1032,  0.0319,  0.0698,  0.0180,
         0.0615,  0.0915, -0.0357,  0.0444,  0.2055,  0.1413,  0.1964,  0.1429,
         0.0959,  0.1585,  0.1657,  0.0896,  0.1402,  0.1750,  0.0876,  0.6364,
         0.0000,  0.0000,  0.1965, -0.1250,  0.2000, -0.2000,  0.7143,  0.1667,
         0.0808,  0.0408,  0.2308,  0.1212,  0.1154,  0.2982, -0.2667,  0.2252,
         0.8246,  0.0729,  0.4211,  0.1651,  0.0960, -0.1800, -0.1176,  0.2313,
         0.0899, -0.1429,  0.2826,  0.4286,  0.1396,  0.2143, -0.1000,  0.0208,
         0.3500, -0.1930,  0.0229, -0.1304,  0.0368,  0.1014, -0.0417,  0.0102,
         0.0286,  0.0000,  0.2007, -0.1538,  0.0503, -0.0345,  0.2766,  0.1071,
        -0.0345,  0.0330,  0.0952,  0.1750,  0.3636,  0.2786,  0.0000,  0.1765,
         0.0854,  0.3143,  0.0000,  0.0211,  0.2000,  0.1829,  0.0656,  0.1415,
         0.1082,  0.1875,  0.0866, -0.0625,  0.3637,  0.5135,  0.1446,  0.4000,
         0.1971, -0.1000,  0.2261,  0.0526,  0.0766,  0.1049,  0.4444,  0.0577,
         0.0399,  0.1509,  0.1808,  0.0526, -0.0455, -0.0053, -0.0137,  0.1538,
         0.0116,  0.2716,  0.0556,  0.0926, -0.0167,  0.0000,  0.0488,  0.1447,
         0.0462,  0.0541,  0.0000, -0.0189,  0.0000,  0.1111,  0.1471,  0.2632,
         0.1680,  0.1105,  0.3704,  0.1227,  0.2481,  0.1163,  0.1406, -0.0556,
         0.0278,  0.1552,  0.3947,  0.0488, -0.0465,  0.1304,  0.0909,  0.2197,
         0.0909,  0.1321,  0.4500, -0.0892,  0.2255,  0.1315,  0.1351,  0.0800])]

INFO:main.py:retrain and prediction dataloader
INFO:main.py:retrain_loader first example: [tensor([[-6.4251e-01, -2.3176e-01, -1.2428e-02,  ...,  0.0000e+00,
          1.0000e+00,  0.0000e+00],
        [ 6.6112e-03, -8.9386e-04,  1.0027e-01,  ...,  0.0000e+00,
          1.0000e+00,  0.0000e+00],
        [-1.1822e+00, -7.7625e-01,  4.7390e-02,  ...,  0.0000e+00,
          1.0000e+00,  0.0000e+00],
        ...,
        [-6.8226e-01, -2.6441e-01, -1.0151e+00,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00],
        [ 1.2939e+00,  1.3587e+00,  1.6439e+00,  ...,  0.0000e+00,
          1.0000e+00,  0.0000e+00],
        [-5.4293e-01, -1.4997e-01, -3.6392e-02,  ...,  0.0000e+00,
          1.0000e+00,  0.0000e+00]]), tensor([[6304],
        [6041],
        [2014],
        [4513],
        [6677],
        [4152],
        [ 541],
        [3516],
        [5869],
        [ 799],
        [3165],
        [5807],
        [5026],
        [2043],
        [6433],
        [2795],
        [6185],
        [6577],
        [6995],
        [5474],
        [5550],
        [3308],
        [ 624],
        [   4],
        [3692],
        [   5],
        [4496],
        [7270],
        [6918],
        [2984],
        [2205],
        [1013],
        [ 723],
        [1539],
        [5207],
        [1735],
        [5503],
        [1079],
        [  75],
        [4066],
        [3088],
        [3161],
        [7133],
        [4695],
        [4695],
        [5202],
        [4979],
        [5169],
        [1422],
        [6200],
        [5804],
        [2435],
        [ 596],
        [6335],
        [6132],
        [4698],
        [2277],
        [3347],
        [5082],
        [3347],
        [1851],
        [1446],
        [1848],
        [5434],
        [3288],
        [4786],
        [ 185],
        [2812],
        [2215],
        [2109],
        [ 440],
        [4341],
        [7075],
        [4075],
        [3896],
        [7138],
        [2824],
        [3294],
        [3207],
        [2251],
        [5764],
        [2911],
        [4331],
        [2324],
        [3746],
        [4527],
        [2285],
        [ 589],
        [3445],
        [2448],
        [1583],
        [3496],
        [2705],
        [5305],
        [1245],
        [3291],
        [4496],
        [3076],
        [7069],
        [7221],
        [3945],
        [4158],
        [7214],
        [2742],
        [2684],
        [6906],
        [7102],
        [1358],
        [4167],
        [6836],
        [3516],
        [6322],
        [4011],
        [2422],
        [4263],
        [1048],
        [6116],
        [4096],
        [1149],
        [4503],
        [4657],
        [1096],
        [6745],
        [5789],
        [3098],
        [3603],
        [6676],
        [5795],
        [1255],
        [5240],
        [2280],
        [1926],
        [7123],
        [7221],
        [4781],
        [6604],
        [2476],
        [4587],
        [ 207],
        [5217],
        [ 569],
        [3779],
        [5405],
        [1228],
        [5707],
        [4132],
        [2897],
        [6639],
        [6736],
        [3215],
        [3970],
        [1397],
        [ 186],
        [ 980],
        [7236],
        [4986],
        [5067],
        [2634],
        [1814],
        [ 326],
        [3310],
        [5425],
        [2431],
        [5737],
        [6926],
        [ 176],
        [2799],
        [1724],
        [2475],
        [4174],
        [5319],
        [2512],
        [5584],
        [5325],
        [6618],
        [2842],
        [4700],
        [ 268],
        [ 278],
        [1798],
        [4775],
        [ 805],
        [4154],
        [7115],
        [ 303],
        [7129],
        [6133],
        [3535],
        [ 298],
        [4333],
        [4191],
        [3706],
        [1749],
        [6395],
        [6568],
        [4994],
        [5121],
        [  26],
        [ 500],
        [1752],
        [ 300],
        [2449],
        [ 317],
        [4682],
        [4658],
        [7099],
        [2333],
        [1463],
        [1866],
        [5190],
        [4156],
        [5880],
        [1305],
        [3030],
        [5973],
        [6093],
        [7038],
        [3821],
        [  46],
        [5037],
        [1008],
        [2464],
        [6955],
        [ 716],
        [5509],
        [ 604],
        [2729],
        [2079],
        [6251],
        [3592],
        [5455],
        [5338],
        [5739],
        [4183],
        [5918],
        [4007],
        [1059],
        [5287],
        [7091],
        [1057],
        [4056],
        [3691],
        [1647],
        [ 458],
        [5015],
        [ 709],
        [5727],
        [3654],
        [2710],
        [5255],
        [5491],
        [4321],
        [3550],
        [ 424],
        [2046],
        [ 604]]), tensor([-3.8462e-02,  4.7619e-02, -1.1539e-01,  0.0000e+00,  3.1429e-01,
         3.3333e-01,  2.0000e-01,  1.1451e-01,  1.5668e-01,  1.3462e-01,
         6.1538e-02, -1.1765e-01,  1.2245e-01, -6.5361e-02,  1.6174e-01,
         0.0000e+00,  3.1250e-02,  3.4188e-02, -7.8882e-02,  3.5385e-01,
         1.2235e-01,  1.2448e-02,  1.6800e-01,  0.0000e+00,  1.7391e-01,
        -4.1322e-02, -6.7961e-02,  9.9185e-02,  6.3830e-02, -1.0417e-01,
         4.3478e-02,  4.2453e-02, -1.3953e-01, -1.0101e-02,  7.4286e-02,
         0.0000e+00,  4.8077e-02, -1.3559e-01,  1.4236e-01, -2.5743e-02,
        -1.1111e-01,  1.5385e-01, -3.6859e-02, -8.0882e-02,  8.3333e-02,
         5.8252e-02,  1.8519e-02,  7.5472e-02, -3.0864e-02,  2.8000e-02,
        -6.9930e-03,  0.0000e+00,  6.1905e-01,  0.0000e+00, -5.5556e-02,
         0.0000e+00, -6.9767e-02,  2.0000e-02,  7.6923e-02, -5.2795e-02,
         7.5385e-02,  9.7917e-02,  4.6296e-02, -1.4546e-01, -2.3256e-02,
        -2.5910e-02, -1.0606e-01,  4.8889e-02, -1.6667e-01,  1.0000e-01,
         1.5663e-01, -1.0227e-01, -2.6906e-02, -5.4545e-02, -5.8824e-02,
         2.0833e-02, -2.1304e-02, -2.4390e-02, -8.9744e-02,  6.0403e-02,
         0.0000e+00,  9.9605e-02, -5.7143e-02,  5.2326e-02, -1.6667e-01,
         4.3590e-01,  3.1250e-02, -2.6316e-02, -1.0159e-02, -1.0260e-01,
         4.1758e-02,  1.5625e-01,  2.1875e-02, -1.1111e-01,  3.7500e-01,
         1.8307e-02, -1.1929e-01,  3.6232e-02, -4.0000e-02, -1.8800e-03,
        -9.7403e-02,  4.3478e-01,  6.2500e-02,  1.5873e-02, -2.6271e-01,
         4.0426e-01,  3.7383e-02, -6.6667e-02,  7.1429e-02, -1.7094e-01,
         0.0000e+00,  2.0833e-01,  1.6447e-02,  6.4151e-01,  4.4118e-02,
         6.8702e-02,  8.1081e-02,  2.5000e-02, -1.1765e-01, -8.3333e-02,
         3.3333e-02,  0.0000e+00,  2.3077e-01,  3.7464e-02, -6.0773e-02,
        -5.8824e-02,  8.0247e-02, -5.8824e-02, -6.0240e-03,  5.7143e-02,
        -7.2727e-02, -3.2000e-02,  2.9310e-01,  1.9802e-02,  2.0000e-01,
         1.2195e-01, -9.4077e-02,  4.5455e-02, -1.5854e-01, -5.7313e-02,
         5.5838e-02,  1.6970e-01,  2.6374e-01,  2.7027e-02, -3.6364e-02,
         7.0175e-02,  6.4516e-02, -6.3401e-02, -4.1667e-02,  3.7880e-03,
         2.5714e-01,  1.1765e-02,  1.3869e-01,  1.6108e-01, -4.0000e-02,
         9.0909e-02,  2.1053e-01, -4.5082e-02,  0.0000e+00, -2.0707e-01,
        -2.2370e-03,  7.2500e-02,  0.0000e+00,  5.9520e-03, -4.4776e-02,
         3.4894e-02,  1.1765e-02, -5.9290e-02, -9.1890e-03,  7.6410e-02,
         1.2870e-01,  2.2321e-02, -3.0556e-02,  1.7609e-02, -3.1414e-02,
        -9.5240e-03, -8.4112e-02,  2.2619e-01,  1.9231e-01,  2.5234e-01,
        -6.9767e-02,  9.6774e-02,  1.1765e-01,  1.6667e-01,  0.0000e+00,
         1.9118e-01,  0.0000e+00,  0.0000e+00,  1.1111e-02,  1.1881e-01,
         8.6705e-02, -1.0929e-02, -4.4118e-02, -2.0000e-01,  6.6667e-02,
        -4.2553e-02,  7.2052e-02,  0.0000e+00, -1.2500e-01, -2.1519e-01,
        -1.9231e-02,  5.2080e-03,  3.3149e-02, -2.9412e-01, -7.4074e-02,
         0.0000e+00,  1.1539e-01, -1.4149e-01,  0.0000e+00, -2.0690e-02,
         0.0000e+00,  4.1096e-02,  0.0000e+00, -1.0000e-01, -1.8678e-01,
         6.5790e-03,  1.4286e-02,  3.4733e-02, -2.4194e-02,  1.2882e-01,
         6.0240e-03,  3.7037e-02, -1.0828e-01, -1.3953e-01, -1.9608e-02,
         4.2945e-02, -6.1500e-04, -5.4050e-03,  6.9027e-02,  2.7700e-01,
        -1.7391e-01, -6.0927e-02,  1.5556e-01,  0.0000e+00,  3.1148e-01,
        -2.4000e-02, -1.5152e-02,  5.1546e-02,  4.3670e-03, -8.0000e-02,
        -5.6604e-02, -7.1429e-02, -1.5000e-01,  2.9630e-01, -2.9630e-03,
         6.0000e-01, -2.1008e-02, -4.1322e-02, -1.1518e-01, -6.7416e-02,
        -1.9540e-01, -8.3409e-02, -7.1942e-02, -8.6957e-02, -2.8125e-01,
         1.6320e-01])]

INFO:main.py:prediction_loader first example: [tensor([[-0.9604, -0.4928, -0.4720,  ...,  0.0000,  0.0000,  0.0000],
        [-0.0053,  0.0067,  3.1135,  ...,  0.0000,  0.0000,  0.0000],
        [-0.0053,  0.0067, -0.1770,  ...,  0.0000,  1.0000,  0.0000],
        ...,
        [-1.0804, -0.5914, -0.7981,  ...,  0.0000,  0.0000,  0.0000],
        [-0.0053,  0.0067, -0.1204,  ...,  0.0000,  0.0000,  0.0000],
        [-0.0053,  0.0067, -0.0183,  ...,  0.0000,  0.0000,  0.0000]]), tensor([[ 941],
        [1672],
        [1582],
        [ 388],
        [ 475],
        [5069],
        [2669],
        [1308],
        [4308],
        [ 464],
        [1219],
        [4661],
        [2388],
        [ 191],
        [ 634],
        [1532],
        [4410],
        [1638],
        [4649],
        [2500],
        [3516],
        [4527],
        [5258],
        [2213],
        [4442],
        [1965],
        [2550],
        [ 950],
        [4364],
        [3211],
        [4835],
        [1876],
        [4184],
        [2255],
        [4488],
        [1340],
        [3208],
        [4942],
        [5206],
        [2652],
        [ 740],
        [ 223],
        [2399],
        [4642],
        [ 231],
        [1154],
        [1183],
        [ 583],
        [3839],
        [2738],
        [3474],
        [2210],
        [5255],
        [  53],
        [  35],
        [2440],
        [4802],
        [1794],
        [2799],
        [3063],
        [1333],
        [3295],
        [3304],
        [ 765],
        [ 940],
        [3107],
        [3625],
        [4287],
        [3225],
        [3375],
        [1733],
        [4298],
        [1757],
        [2247],
        [ 443],
        [2363],
        [3455],
        [4705],
        [2202],
        [2340],
        [  42],
        [ 911],
        [2164],
        [1594],
        [ 112],
        [4728],
        [ 956],
        [3001],
        [3842],
        [4039],
        [4883],
        [4952],
        [1087],
        [1766],
        [4444],
        [1989],
        [2184],
        [4545],
        [3792],
        [2024],
        [3037],
        [3062],
        [3058],
        [4536],
        [4526],
        [2884],
        [1065],
        [1919],
        [1644],
        [4425],
        [2455],
        [4002],
        [3794],
        [  33],
        [4020],
        [3282],
        [3110],
        [ 949],
        [4405],
        [ 542],
        [3400],
        [2695],
        [1531],
        [3700],
        [4368],
        [1426],
        [2232],
        [2339],
        [ 598],
        [ 105],
        [2049],
        [4445],
        [5103],
        [4015],
        [2352],
        [1994],
        [1447],
        [1428],
        [ 290],
        [1137],
        [3769],
        [4469],
        [1956],
        [4061],
        [4543],
        [4066],
        [1579],
        [2153],
        [3977],
        [3149],
        [4856],
        [1289],
        [2996],
        [ 351],
        [ 789],
        [1488],
        [3418],
        [4037],
        [1124],
        [ 928],
        [ 806],
        [1004],
        [3871],
        [4750],
        [ 625],
        [2442],
        [4230],
        [1189],
        [4615],
        [2547],
        [2685],
        [ 131],
        [4380],
        [1247],
        [3415],
        [4272],
        [4810],
        [3995],
        [3151],
        [3502],
        [4270],
        [1706],
        [2138],
        [5013],
        [ 250],
        [3312],
        [4797],
        [4756],
        [3895],
        [ 984],
        [4907],
        [4551],
        [2077],
        [2636],
        [4933],
        [1595],
        [ 114],
        [1398],
        [2620],
        [4697],
        [3393],
        [4559],
        [1894],
        [2494],
        [ 998],
        [5094],
        [1036],
        [4465],
        [1642],
        [5055],
        [5182],
        [ 604],
        [1920],
        [3129],
        [2747],
        [1921],
        [1852],
        [5061],
        [3213],
        [ 363],
        [3676],
        [3251],
        [ 294],
        [3317],
        [3475],
        [3061],
        [4537],
        [ 845],
        [ 534],
        [ 787],
        [2309],
        [2351],
        [5109],
        [2607],
        [4906],
        [1400],
        [ 882],
        [2599],
        [ 444],
        [2466],
        [5187],
        [4127],
        [2826],
        [3537],
        [5213],
        [4021],
        [1809],
        [1835],
        [2181],
        [3049],
        [1266],
        [4095],
        [  22],
        [2140],
        [1223],
        [1931]]), tensor([ 0.0638,  0.1111,  0.1190, -0.0606,  0.0769,  0.0467, -0.0147, -0.1111,
        -0.0345,  0.0000, -0.1304, -0.0476,  0.0682,  0.0517,  0.2500, -0.1176,
        -0.0357,  0.0000,  0.2500,  0.2075, -0.3333,  0.0000, -0.0909, -0.3077,
         0.1212, -0.0556,  0.2353, -0.1923, -0.0952, -0.0845,  0.6875,  0.0800,
         0.0000, -0.0309, -0.1159,  0.1000,  0.1304,  0.1429,  0.1538,  0.1667,
         0.0000, -0.1200,  0.0143,  0.0000,  0.1136,  0.0000,  0.3333,  0.0625,
        -0.0667,  0.2500,  0.0000,  0.0000,  0.0000,  0.0800, -0.1400,  0.0345,
         1.0000,  0.0250, -0.0423,  0.0156,  0.0000,  0.0741,  0.1273,  0.0152,
         0.0000, -0.0345,  0.0277,  0.1250,  0.0000,  0.1212,  0.0213, -0.1714,
         0.0000,  0.0769, -0.1818,  0.1429, -0.0588,  0.0909,  0.2250, -0.0980,
         0.2727,  0.2667, -0.0741, -0.1000,  0.1062,  0.1220, -0.1905, -0.0133,
         0.0000, -0.1667,  0.1111,  0.1000,  0.6364,  0.0000,  0.0156, -0.1937,
         0.1626,  0.0000,  0.0385, -0.1176,  0.0000,  0.3699,  0.1250,  0.0312,
         0.1667,  0.0000,  0.2245,  0.0000, -0.2857,  0.0000,  0.2609,  0.1905,
        -0.1818,  0.3448,  0.0024,  0.0000,  0.0256,  0.1562,  0.1628,  0.0909,
         0.3636,  0.2750, -0.0408,  0.0435,  0.2941,  0.2353,  0.0000, -0.0980,
         0.0629, -0.2000,  0.2045,  0.1596,  0.0000,  0.0370,  0.0000,  0.0204,
         0.1772, -0.1064,  0.0000, -0.0357,  0.0000,  0.1111,  0.1154,  0.0000,
         0.3000, -0.0926,  0.2083, -0.0208,  0.2857, -0.1538,  1.0000, -0.1250,
         0.0732,  0.1538,  0.1477, -0.0741, -0.0968,  0.4828,  0.1579, -0.0690,
        -0.0345,  1.3448, -0.1522,  0.2800,  0.2857, -0.0860, -0.0714,  0.1351,
        -0.1667, -0.1538,  0.1667,  0.3023,  0.0980,  0.0303,  0.8947,  0.0372,
        -0.1188,  0.0682,  0.6452,  0.0000, -0.0426,  0.6000,  0.4667,  0.0843,
         0.0137,  0.0476,  0.0769, -0.1707,  0.0526,  0.0714, -0.0962,  0.0625,
         0.0833,  0.3103,  0.0000, -0.5366,  0.0500, -0.2061, -0.0132,  0.2857,
         0.6096, -0.2778,  0.4182,  0.1528, -0.1944,  0.0455,  0.1293,  0.3077,
         0.2000, -0.5417,  0.0000, -0.0741,  0.1250,  0.2632,  0.1538, -0.0148,
        -0.1293,  0.1065,  0.2000,  0.1538,  0.1579, -0.0270,  0.0385,  0.0323,
         0.2308, -0.0114,  0.0893, -0.0278,  0.1111,  0.0857, -0.0714, -0.0789,
         0.2308,  0.0857,  0.0667,  0.6171, -0.2656,  0.9091, -0.1272,  0.2069,
        -0.2222,  0.2222, -0.0769,  0.0600, -0.1200,  0.1200,  0.0000, -0.3077,
         0.0000,  0.0000,  0.5625,  0.0204,  0.1061,  0.0531, -0.0500,  0.7000])]

INFO:main.py:

Hyperparameters tuning with Ray Tune

INFO:main.py:Training data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986]
INFO:main.py:Testing data year: 1987
