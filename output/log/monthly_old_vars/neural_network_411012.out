Current working directory
/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin
source venv/bin/activate
which python3
/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/venv/bin/python3
Intel(R) Extension for Scikit-learn* enabled (https://github.com/intel/scikit-learn-intelex)
Intel(R) Extension for Scikit-learn* enabled (https://github.com/intel/scikit-learn-intelex)
INFO:preprocess_data_nn.py:

Loading and preprocessing data...

DEBUG:preprocess_data_nn.py:      date  permno
0  1980-01   10006
1  1980-01   10057
2  1980-01   10103
3  1980-01   10137
4  1980-01   10145
DEBUG:preprocess_data_nn.py:--------------------------------------------------
INFO:main.py:preprocessed df: (2216189, 158)
INFO:preprocess_data_nn.py:

Applying secondary data preprocessing..

INFO:main.py:secondary preprocessed df: (2165515, 158)
INFO:main.py:df sample:    permno  gvkey   adatadate  fyear  sic2     spi       mve_f  ...     zerotrade      beta    betasq      rsq1  pricedelay   idiovol  pyear
0   10006   1010  12/31/1978   1978    37  0.0000  269.308500  ...  1.115306e-07  1.060420  1.124491  0.343408    0.029859  0.025576   1980
1   10057   1098  09/30/1978   1978    36  0.0000   97.372000  ...  6.199128e-08  1.526013  2.328716  0.307905    0.092667  0.037473   1980
2   10103   1012  10/31/1978   1978    33     NaN    1.697500  ...           NaN  1.759493  3.095816  0.096753    0.221851  0.087020   1980
3   10137   1279  12/31/1978   1978    49     NaN  537.524500  ...  9.726790e-08  0.492885  0.242936  0.189693    0.125777  0.017540   1980
4   10145   1300  12/31/1978   1978    99 -0.0031  805.633282  ...  6.190654e-08  1.139163  1.297691  0.279437    0.024228  0.031201   1980

[5 rows x 158 columns]
INFO:main.py:

Transform data

INFO:transform_data_nn.py:Train data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986]
INFO:transform_data_nn.py:Train_data: (341783, 158)

INFO:transform_data_nn.py:Test data years: [1987]
INFO:transform_data_nn.py:Test_data: (53899, 158)

INFO:transform_data_nn.py:Retrain data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987]
INFO:transform_data_nn.py:Retrain_data: (395682, 158)

INFO:transform_data_nn.py:Retrain data years: [1988]
INFO:transform_data_nn.py:Prediction_data: (56005, 158)

DEBUG:main.py:Pipeline built: Pipeline(steps=[('Time_period_mean_imputation',
                 _TimePeriodMeanTransformer(date_column='date',
                                            numeric_columns=['absacc', 'acc',
                                                             'aeavol', 'age',
                                                             'agr', 'baspread',
                                                             'beta', 'betasq',
                                                             'bm', 'bm_ia',
                                                             'cash', 'cashdebt',
                                                             'cashpr', 'cfp',
                                                             'cfp_ia',
                                                             'chatoia',
                                                             'chcsho',
                                                             'chempia',
                                                             'chfeps', 'chinv',
                                                             'chmom',
                                                             'chnanalyst',
                                                             'chpmia', 'chtx',
                                                             'cinvest',
                                                             'currat', 'depr',
                                                             'disp', 'dolvo...
                                                   'chempia', 'chfeps', 'chinv',
                                                   'chmom', 'chnanalyst',
                                                   'chpmia', 'chtx', 'cinvest',
                                                   'currat', 'depr', 'disp',
                                                   'dolvol', 'dy', ...]),
                                                 ('cat',
                                                  Pipeline(steps=[('impute_cat',
                                                                   SimpleImputer(fill_value=0,
                                                                                 strategy='constant'))]),
                                                  ['convind', 'divi', 'divo',
                                                   'ipo', 'rd', 'securedind',
                                                   'sin']),
                                                 ('embed',
                                                  Pipeline(steps=[('impute_embed',
                                                                   SimpleImputer(fill_value=0,
                                                                                 strategy='constant'))]),
                                                  ['permno'])]))])
INFO:main.py:

Generate X and y with train_data and test_data

DEBUG:main.py:Save the reload the tensors for much faster debugging
INFO:main.py:Tensors directory already exists at: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/tensors
DEBUG:main.py:Load the tensors
INFO:main.py:
        x_train_tf: torch.Size([341783, 103])
        y_train_tf: torch.Size([341783])

        x_test_tf: torch.Size([53899, 103])
        y_test_tf: torch.Size([53899])

    
INFO:main.py:
        x_retrain_tf: torch.Size([395682, 103])
        y_retrain_tf: torch.Size([395682])

        x_prediction_tf: torch.Size([56005, 103])
        y_prediction_tf: torch.Size([56005])

    
INFO:main.py:Create train_dataset
INFO:main.py:train_dataset first example: (tensor([ 0.2614,  0.5034,  0.2386, -0.6303,  0.0469, -0.5241, -0.0284, -0.2584,
         0.3866,  0.1910, -0.8830,  0.0062, -0.5088, -0.1862, -0.0053,  0.0250,
        -0.4235,  0.1175,  0.0000,  0.6719, -0.3586,  0.0000,  0.0257,  0.0166,
         0.0370, -0.2229, -0.6756,  0.0000,  0.5764,  1.1873,  0.6227, -0.1414,
         0.5064,  0.0000, -0.5226, -0.2165,  0.1496,  0.1907,  0.1020, -1.1512,
        -0.3211,  0.0239,  0.3191, -0.0440, -0.0208, -0.6509, -0.0216, -0.0993,
        -0.6609, -0.2278, -0.1547,  0.9190, -0.1748,  0.0000,  0.0265, -0.3809,
        -0.9466, -0.0875, -0.6362, -0.1616,  0.1008, -0.6415, -0.3684, -0.1993,
        -0.2698, -0.5237,  0.0996, -0.1018, -0.1900, -0.4132, -0.7240, -0.3249,
         0.0346, -0.8136,  0.1052, -1.0783,  0.2870,  0.2369,  0.6056,  0.1760,
        -0.4392, -0.2020, -0.0110,  0.0000, -0.0826, -0.0538, -0.3134, -0.6841,
        -0.4092, -0.4207,  0.1949, -0.2766,  0.1496, -0.1756, -0.5206,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000]), tensor([2764]), tensor(0.2117))
INFO:main.py:Create test_dataset
INFO:main.py:test_dataset first example: (tensor([-6.9920e-03,  8.9557e-03, -3.4033e-01, -1.6683e+00,  4.0069e-03,
         1.0097e+00, -2.5891e-03, -1.0957e-02, -9.5448e-01,  1.8591e-01,
         3.8505e-01,  6.2086e-01,  1.9972e-01,  2.1500e-02, -2.2037e-05,
         6.4081e-03, -7.8682e-03,  1.2509e-02,  0.0000e+00,  2.2175e-02,
        -7.5173e-02,  0.0000e+00, -1.5533e-02,  1.2460e-02,  3.1036e-02,
         1.3005e-01, -2.3377e-01,  0.0000e+00, -4.6695e-01, -7.7328e-01,
        -6.6426e-01,  6.0568e-03, -1.6879e-02,  0.0000e+00,  1.5509e-02,
        -1.9876e-03,  9.2778e-03, -4.6920e-01,  6.8878e-04, -2.7767e-02,
        -1.1036e-01, -6.2118e-01,  1.3711e-02, -4.6129e-01, -4.5306e-03,
         2.2998e+00,  1.6293e-02, -1.3041e+00,  5.4224e-02, -1.1150e-03,
        -8.5550e-01, -1.1288e+00, -3.1813e-01,  0.0000e+00, -8.7597e-01,
         1.4499e-02,  3.0605e-02,  1.3658e-02, -8.7689e-03, -1.7061e-02,
         1.2506e-02, -1.1364e-02, -2.6022e-03,  1.5424e-03, -6.5274e-04,
        -7.4535e-03, -6.8802e-03, -2.2825e-02,  2.5533e-02,  1.5004e-01,
        -1.1726e-02, -2.4365e-02,  3.4575e-02,  1.6018e+00, -3.4779e+00,
        -7.2764e-02, -2.0625e+00,  4.1949e-01, -3.2436e-01, -4.6815e-01,
        -4.0800e-01, -3.1863e-01,  1.6746e+00,  0.0000e+00, -3.2632e-03,
        -6.4726e-01,  8.8510e-02,  5.2651e-01, -4.4860e-02, -4.4852e-02,
        -2.1688e-01,  1.4353e+00,  1.8772e-01,  3.0461e-01, -5.2065e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  1.0000e+00,  0.0000e+00,
         1.0000e+00,  0.0000e+00]), tensor([1418]), tensor(-0.5200))
INFO:main.py:Create retrain_dataset
INFO:main.py:retrain_dataset first example: (tensor([ 2.4375e-01,  4.9617e-01,  2.3474e-01, -6.5108e-01,  3.9445e-02,
        -5.2971e-01, -3.2399e-02, -2.6454e-01,  4.4939e-01,  1.9404e-01,
        -8.7559e-01,  2.9982e-02, -5.1678e-01, -1.7870e-01,  2.8057e-02,
         2.6105e-02, -4.2786e-01,  1.3802e-01,  0.0000e+00,  6.8093e-01,
        -3.5624e-01,  0.0000e+00,  3.2302e-02, -4.2100e-03,  2.3124e-02,
        -2.2767e-01, -6.6230e-01,  0.0000e+00,  5.4395e-01,  1.2575e+00,
         6.0546e-01, -1.2386e-01,  5.1282e-01,  0.0000e+00, -5.0374e-01,
        -2.0934e-01,  1.6390e-01,  1.9552e-01,  8.7618e-02, -1.1469e+00,
        -3.1720e-01,  6.2132e-02,  3.3133e-01, -2.5122e-02, -3.4593e-02,
        -6.5851e-01,  4.2816e-04, -7.2423e-02, -6.5629e-01, -2.1883e-01,
        -1.4935e-01,  8.9773e-01, -1.5623e-01,  0.0000e+00,  2.4546e-02,
        -3.5709e-01, -9.4222e-01, -1.1718e-01, -6.1813e-01, -1.7652e-01,
         1.0460e-01, -6.2822e-01, -3.6749e-01, -1.8878e-01, -2.6630e-01,
        -5.2445e-01,  7.6502e-02, -1.0615e-01, -1.6425e-01, -4.0413e-01,
        -7.2657e-01, -3.3089e-01,  3.7161e-02, -8.1525e-01,  1.3346e-01,
        -9.9192e-01,  2.9311e-01,  2.4566e-01,  6.3414e-01,  1.7033e-01,
        -4.4184e-01, -2.0106e-01, -3.8979e-03,  0.0000e+00, -7.9384e-02,
        -1.3757e-02, -3.2263e-01, -6.8126e-01, -1.6517e-01, -1.5155e-01,
         1.8087e-01, -2.6300e-01,  1.4201e-01, -2.0741e-01, -5.1845e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([3029]), tensor(0.2117))
INFO:main.py:Create prediction_dataset
INFO:main.py:prediction_dataset first example: (tensor([-9.6036e-01, -4.9283e-01, -4.7202e-01, -1.2875e+00, -5.9088e-01,
        -3.4143e-01, -1.7353e+00, -1.0156e+00,  6.0711e-02,  1.9547e-01,
        -4.0377e-01, -9.2351e-03, -4.1386e-03, -3.5552e-02,  1.6291e-02,
         4.4557e-03, -4.1867e-01,  1.1388e-02,  0.0000e+00, -2.8223e-01,
        -1.5983e-01,  0.0000e+00,  8.3143e-02,  4.9025e-02, -1.0656e-02,
        -6.2313e-01, -8.2264e-01,  0.0000e+00, -5.7750e-01,  1.3797e+00,
        -1.6007e+00, -3.2115e-01,  1.1211e-01,  0.0000e+00, -1.0634e+00,
         3.8040e-03, -5.2228e-01, -8.2825e-01, -2.7243e-01, -8.6950e-01,
         5.3128e-01, -8.5044e-01, -3.8617e-01, -2.6063e-01, -4.5432e-01,
        -1.9406e-01,  1.0492e-02, -3.0692e-01,  5.1011e-03, -9.7349e-03,
        -8.4332e-01, -1.1018e+00, -1.1294e+00,  0.0000e+00, -8.6923e-01,
        -9.1403e-01,  2.6640e-02, -1.2260e-01, -3.3319e-01, -3.9018e-02,
        -1.9560e-01, -3.4380e-01, -1.7398e-01,  3.2079e-01, -1.7674e-03,
        -4.6619e-01, -2.1413e-01,  1.4636e+00, -8.8986e-01, -3.8259e-01,
        -9.5638e-03, -3.3089e-02,  3.7161e-02,  3.0098e-02, -4.4583e-01,
        -7.1099e-02, -3.4420e-01,  8.4362e-02, -6.3088e-01, -2.8029e-01,
         4.2441e+00,  3.3876e-01, -3.8979e-03,  0.0000e+00, -7.6692e-01,
        -6.3231e-02,  2.3258e+00,  5.0224e+00, -3.6348e-02, -4.6659e-02,
         2.0041e-01, -8.0320e-01, -4.0666e-01,  3.0623e-01,  1.1257e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([114]), tensor(0.0638))
INFO:main.py:train and test dataloader
INFO:main.py:train_loader first example: [tensor([[-1.0088e+00, -5.4216e-01, -4.3827e-01,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00],
        [-6.9240e-01, -2.8173e-01, -2.2381e-03,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00],
        [-2.1133e-01,  1.1428e-01, -3.3944e-01,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00],
        ...,
        [ 4.2181e+00,  3.3445e+00, -9.9015e-01,  ...,  1.0000e+00,
          1.0000e+00,  0.0000e+00],
        [-2.6579e-01,  6.9446e-02,  2.2379e-01,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00],
        [-5.0509e-01, -1.2754e-01, -3.0765e-01,  ...,  1.0000e+00,
          1.0000e+00,  0.0000e+00]]), tensor([[1753],
        [ 238],
        [ 460],
        [2450],
        [5703],
        [5298],
        [ 747],
        [3934],
        [5083],
        [6568],
        [2759],
        [  42],
        [4963],
        [ 858],
        [5203],
        [1266],
        [1758],
        [4201],
        [4472],
        [2232],
        [3016],
        [4725],
        [1586],
        [ 241],
        [4348],
        [2824],
        [ 838],
        [6326],
        [2957],
        [4148],
        [3396],
        [4375]]), tensor([ 0.0655, -0.0700,  0.0394,  0.0787,  0.1803, -0.0815, -0.2308,  0.0750,
         0.0774,  0.0566,  0.1026,  0.0150, -0.0853, -0.0414,  0.0484,  0.0000,
         0.1579,  0.1905,  0.0409, -0.0023, -0.0377,  0.3750, -0.0077,  0.0000,
         0.0371,  0.0653,  0.2111,  0.0000, -0.1364,  0.0000, -0.0100,  0.1071])]

INFO:main.py:test_loader first example: [tensor([[-6.9920e-03,  8.9557e-03, -3.4033e-01,  ...,  0.0000e+00,
          1.0000e+00,  0.0000e+00],
        [-6.9920e-03,  8.9557e-03, -6.7673e-04,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00],
        [-6.9920e-03,  8.9557e-03,  1.0606e-01,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00],
        ...,
        [-3.9113e-01, -3.3732e-02, -8.1276e-01,  ...,  0.0000e+00,
          1.0000e+00,  1.0000e+00],
        [-9.6154e-01, -5.0328e-01, -6.0189e-01,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00],
        [ 3.6633e+00,  3.3038e+00,  1.8561e+00,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00]]), tensor([[1418],
        [4484],
        [1824],
        [1541],
        [ 733],
        [2362],
        [2884],
        [4513],
        [2465],
        [ 898],
        [4942],
        [ 579],
        [ 285],
        [2510],
        [1299],
        [ 751],
        [4705],
        [4295],
        [3816],
        [ 400],
        [4402],
        [1477],
        [  23],
        [3815],
        [3672],
        [ 523],
        [1176],
        [4183],
        [4580],
        [3086],
        [ 489],
        [2922]]), tensor([-0.5200,  0.0000, -0.0217,  0.0909,  0.0417, -0.2105,  0.1136,  0.3243,
         0.0667,  0.2500,  0.1060,  0.1562,  0.4306,  0.1304, -0.0133, -0.0222,
        -0.2667, -0.1571,  0.1707,  0.0667,  0.0847,  0.1776,  0.2695,  0.0476,
         0.1163,  0.2268, -0.1351,  0.0000,  0.3103,  0.1769,  0.1379,  0.2647])]

INFO:main.py:retrain and prediction dataloader
INFO:main.py:retrain_loader first example: [tensor([[-6.4251e-01, -2.3176e-01, -1.2428e-02,  ...,  0.0000e+00,
          1.0000e+00,  0.0000e+00],
        [ 6.6112e-03, -8.9386e-04,  1.0027e-01,  ...,  0.0000e+00,
          1.0000e+00,  0.0000e+00],
        [-1.1822e+00, -7.7625e-01,  4.7390e-02,  ...,  0.0000e+00,
          1.0000e+00,  0.0000e+00],
        ...,
        [ 1.7761e+00,  1.7547e+00,  7.9389e-03,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00],
        [-4.8290e-01, -1.0067e-01,  1.6989e+00,  ...,  0.0000e+00,
          1.0000e+00,  0.0000e+00],
        [ 5.6217e-03, -3.3511e-03, -8.8565e-01,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00]]), tensor([[ 714],
        [6085],
        [5108],
        [3556],
        [5056],
        [6567],
        [2308],
        [1540],
        [2411],
        [1186],
        [4411],
        [7258],
        [ 785],
        [2492],
        [3300],
        [6722],
        [4377],
        [7099],
        [1923],
        [1468],
        [3449],
        [3409],
        [3206],
        [6625],
        [4962],
        [2681],
        [ 642],
        [6780],
        [6250],
        [  62],
        [2577],
        [ 505]]), tensor([-0.0385,  0.0476, -0.1154,  0.0000,  0.3143,  0.3333,  0.2000,  0.1145,
         0.1567,  0.1346,  0.0615, -0.1176,  0.1224, -0.0654,  0.1617,  0.0000,
         0.0312,  0.0342, -0.0789,  0.3538,  0.1223,  0.0124,  0.1680,  0.0000,
         0.1739, -0.0413, -0.0680,  0.0992,  0.0638, -0.1042,  0.0435,  0.0425])]

INFO:main.py:prediction_loader first example: [tensor([[-0.9604, -0.4928, -0.4720,  ...,  0.0000,  0.0000,  0.0000],
        [-0.0053,  0.0067,  3.1135,  ...,  0.0000,  0.0000,  0.0000],
        [-0.0053,  0.0067, -0.1770,  ...,  0.0000,  1.0000,  0.0000],
        ...,
        [ 0.0554,  0.3415, -0.3227,  ...,  0.0000,  1.0000,  0.0000],
        [-0.0053,  0.0067, -0.3629,  ...,  0.0000,  1.0000,  0.0000],
        [-0.0053,  0.0067,  1.4540,  ...,  0.0000,  1.0000,  0.0000]]), tensor([[ 114],
        [1656],
        [2577],
        [1392],
        [1511],
        [3759],
        [3921],
        [3887],
        [5183],
        [2488],
        [3076],
        [1947],
        [1144],
        [4361],
        [1652],
        [1901],
        [3993],
        [ 797],
        [2030],
        [2069],
        [1769],
        [ 794],
        [5181],
        [2495],
        [1789],
        [3045],
        [4720],
        [ 962],
        [2988],
        [2600],
        [5241],
        [2005]]), tensor([ 0.0638,  0.1111,  0.1190, -0.0606,  0.0769,  0.0467, -0.0147, -0.1111,
        -0.0345,  0.0000, -0.1304, -0.0476,  0.0682,  0.0517,  0.2500, -0.1176,
        -0.0357,  0.0000,  0.2500,  0.2075, -0.3333,  0.0000, -0.0909, -0.3077,
         0.1212, -0.0556,  0.2353, -0.1923, -0.0952, -0.0845,  0.6875,  0.0800])]

INFO:main.py:Hyperparameters tuning with Ray Tune
INFO:main.py:Training data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986]
INFO:main.py:Testing data year: 1987
2024-07-02 14:54:17,086	INFO worker.py:1753 -- Started a local Ray instance.
2024-07-02 14:54:17,158	INFO packaging.py:530 -- Creating a file package for local directory '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src'.
2024-07-02 14:54:17,183	INFO packaging.py:358 -- Pushing file package 'gcs://_ray_pkg_3cab238ac521f342.zip' (1.19MiB) to Ray cluster...
2024-07-02 14:54:17,188	INFO packaging.py:371 -- Successfully pushed file package 'gcs://_ray_pkg_3cab238ac521f342.zip'.
2024-07-02 14:54:23,245	WARNING tune.py:902 -- AIR_VERBOSITY is set, ignoring passed-in ProgressReporter for now.
2024-07-02 14:57:50,146	INFO tune.py:1009 -- Wrote the latest version of all result files and experiment state to '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results/train_fnn_2024-07-02_14-54-19' in 0.0562s.
INFO:model_data_nn.py:Best trial config: {'continuous_dim': 102, 'hidden_dim': 35, 'num_layers': 3, 'num_embeddings': 6642, 'embedding_dim': 26, 'dropout_rate': 0.048923989528699176, 'lr': 0.0007726718477963435, 'weight_decay': 0.0006541210527692739, 'num_epochs': 5, 'num_gpus': 0}
INFO:model_data_nn.py:Best trial training loss: 0.09985847253303226
INFO:model_data_nn.py:Best trial testing loss: 0.1247304543565395
INFO:main.py:Ray Tune results have been saved to: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
INFO:main.py:/n/nRetrain a new model with data in years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987]

        Using the optimized hyperparameters: {'continuous_dim': 102, 'hidden_dim': 35, 'num_layers': 3, 'num_embeddings': 7281, 'embedding_dim': 26, 'dropout_rate': 0.048923989528699176, 'lr': 0.0007726718477963435, 'weight_decay': 0.0006541210527692739, 'num_epochs': 5, 'num_gpus': 0}/n
/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/venv/lib/python3.10/site-packages/torch/cuda/__init__.py:619: UserWarning: Can't initialize NVML
  warnings.warn("Can't initialize NVML")
INFO:model_data_nn.py:Epoch 1/5, metrics: {'avg_train_loss': 0.7716252081007001, 'avg_test_loss': 0.10850119100365552}
INFO:model_data_nn.py:Epoch 2/5, metrics: {'avg_train_loss': 0.10350283775005635, 'avg_test_loss': 0.09919542587787203}
INFO:model_data_nn.py:Epoch 3/5, metrics: {'avg_train_loss': 0.10327856003070474, 'avg_test_loss': 0.0995234818921676}
INFO:model_data_nn.py:Epoch 4/5, metrics: {'avg_train_loss': 0.10327421162128642, 'avg_test_loss': 0.09907445820874994}
INFO:model_data_nn.py:Epoch 5/5, metrics: {'avg_train_loss': 0.10326162143576527, 'avg_test_loss': 0.0998555206311287}
INFO:main.py:Making prediction for data in year: 1987
INFO:main.py:Prediction data shape: (56005,)
/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src/main.py:342: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  prediction_data['pred'] = predictions
INFO:main.py:Root Mean Squared Error for Prediction in 1988: 0.1683934701308291
INFO:main.py:Prediction Stats:                 ret          pred
count  56005.000000  56005.000000
mean       0.016656     -0.009990
std        0.165388      0.020290
min       -0.909836     -0.159992
25%       -0.056338     -0.016117
50%        0.000000     -0.004188
75%        0.069444      0.003788
max        6.166667      0.022876
╭──────────────────────────────────────────────────────────────────╮
│ Configuration for experiment     train_fnn_2024-07-02_14-54-19   │
├──────────────────────────────────────────────────────────────────┤
│ Search algorithm                 BasicVariantGenerator           │
│ Scheduler                        AsyncHyperBandScheduler         │
│ Number of trials                 20                              │
╰──────────────────────────────────────────────────────────────────╯

View detailed results here: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results/train_fnn_2024-07-02_14-54-19
To visualize your results with TensorBoard, run: `tensorboard --logdir /tmp/ray/session_2024-07-02_14-54-12_041673_2792638/artifacts/2024-07-02_14-54-19/train_fnn_2024-07-02_14-54-19/driver_artifacts`

