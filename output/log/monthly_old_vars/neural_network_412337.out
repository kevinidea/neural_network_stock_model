Current working directory
/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin
source venv/bin/activate
which python3
/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/venv/bin/python3
2024-07-08 21:01:37,002	PANIC scripts.py:900 -- `--address` is a required flag unless starting a head node with `--head`.
Error: `{}` is a required flag unless starting a head node with `{}`.
Intel(R) Extension for Scikit-learn* enabled (https://github.com/intel/scikit-learn-intelex)
Intel(R) Extension for Scikit-learn* enabled (https://github.com/intel/scikit-learn-intelex)
INFO:preprocess_data_nn.py:

Loading and preprocessing data...

DEBUG:preprocess_data_nn.py:      date  permno
0  1980-01   10006
1  1980-01   10057
2  1980-01   10103
3  1980-01   10137
4  1980-01   10145
DEBUG:preprocess_data_nn.py:--------------------------------------------------
INFO:main.py:preprocessed df: (2216189, 158)
INFO:preprocess_data_nn.py:

Applying secondary data preprocessing..

INFO:main.py:secondary preprocessed df: (2165515, 158)
INFO:main.py:df sample:    permno  gvkey   adatadate  fyear  sic2     spi       mve_f  ...     zerotrade      beta    betasq      rsq1  pricedelay   idiovol  pyear
0   10006   1010  12/31/1978   1978    37  0.0000  269.308500  ...  1.115306e-07  1.060420  1.124491  0.343408    0.029859  0.025576   1980
1   10057   1098  09/30/1978   1978    36  0.0000   97.372000  ...  6.199128e-08  1.526013  2.328716  0.307905    0.092667  0.037473   1980
2   10103   1012  10/31/1978   1978    33     NaN    1.697500  ...           NaN  1.759493  3.095816  0.096753    0.221851  0.087020   1980
3   10137   1279  12/31/1978   1978    49     NaN  537.524500  ...  9.726790e-08  0.492885  0.242936  0.189693    0.125777  0.017540   1980
4   10145   1300  12/31/1978   1978    99 -0.0031  805.633282  ...  6.190654e-08  1.139163  1.297691  0.279437    0.024228  0.031201   1980

[5 rows x 158 columns]
INFO:main.py:Train year start: 1980
INFO:main.py:Prediction data years: [1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020]
INFO:main.py:

Loop through all the prediction years and build optimized model for each year

INFO:main.py:

Transform data

INFO:transform_data_nn.py:Train data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013]
INFO:transform_data_nn.py:Train_data: (1882679, 158)

INFO:transform_data_nn.py:Test data years: [2014]
INFO:transform_data_nn.py:Test_data: (40537, 158)

INFO:transform_data_nn.py:Retrain data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014]
INFO:transform_data_nn.py:Retrain_data: (1923216, 158)

INFO:transform_data_nn.py:Prediction data years: [2015]
INFO:transform_data_nn.py:Prediction_data: (41197, 158)

INFO:main.py:

Generate X and y with train_data and test_data

INFO:main.py:
            x_train_tf: torch.Size([1882679, 103])
            y_train_tf: torch.Size([1882679])

            x_test_tf: torch.Size([40537, 103])
            y_test_tf: torch.Size([40537])

        
INFO:main.py:

Generate X and y with retrain_data and prediction_data

INFO:main.py:
            x_retrain_tf: torch.Size([1923216, 103])
            y_retrain_tf: torch.Size([1923216])

            x_prediction_tf: torch.Size([41197, 103])
            y_prediction_tf: torch.Size([41197])

        
INFO:main.py:

Create dataset

INFO:main.py:Create train_dataset
INFO:main.py:train_dataset first example: (tensor([ 1.9805e-01,  1.1929e+00,  7.9028e-02, -9.4097e-01,  2.1510e-02,
        -6.0508e-01, -2.8910e-02, -2.6827e-01,  7.2547e-01, -3.2288e-01,
        -7.7108e-01,  2.1590e-02, -7.2063e-01, -5.7781e-01, -4.0247e-01,
         1.4122e-02, -3.7462e-01,  1.3879e-01, -9.8145e-02,  9.2092e-01,
        -4.9027e-01, -1.7344e-01, -2.8397e-01,  5.1624e-03, -7.1720e-02,
        -3.0092e-01, -5.3585e-01, -1.0321e-01,  6.3611e-01,  1.8472e+00,
         3.6142e-01, -1.4889e-01,  9.2551e-01,  2.5621e-01, -3.1644e-01,
        -2.2718e-01,  1.8191e-01,  5.3173e-01, -9.4360e-03, -1.1175e+00,
        -2.0046e-01,  2.2394e-01,  5.3814e-01,  1.4488e-01, -4.4704e-02,
        -7.0271e-01,  7.7202e-02, -6.5904e-02, -4.3374e-01, -1.5220e-01,
        -4.7231e-01,  5.3970e-01, -4.6963e-01,  2.3198e-01, -9.4925e-03,
        -2.4283e-01, -6.3228e-01, -4.8792e-01, -5.5122e-01, -1.7649e-01,
        -2.4337e-02, -5.5908e-01, -6.2127e-01, -4.3915e-01, -3.6707e-01,
        -4.3795e-01,  1.1808e+00, -2.8103e-01, -7.3692e-01, -5.8831e-01,
        -6.1301e-01, -4.5760e-01, -1.2279e-03, -8.5698e-01,  2.9652e-01,
        -6.4073e-01,  3.1369e-01,  3.7569e-01,  9.2014e-01,  9.0140e-01,
        -1.3074e+00,  2.1678e-01,  2.8689e-03, -7.7299e-01, -8.2242e-02,
         4.6031e-01, -4.4363e-02, -8.7040e-01, -7.8820e-01, -8.7306e-01,
         9.9373e-02,  3.2455e-02,  3.3200e-02, -5.4273e-01, -4.6573e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([11159]), tensor(0.2117))
INFO:main.py:Create test_dataset
INFO:main.py:test_dataset first example: (tensor([-6.6620e-01, -7.6716e-03, -7.8029e-01,  9.7950e-01, -1.1126e-01,
        -3.9356e-01, -1.1918e+00, -8.3599e-01,  4.0991e-01, -1.7166e-01,
        -7.3205e-01, -1.0336e-01, -7.2063e-01,  8.5609e-02, -3.5721e-01,
        -3.5301e-01, -3.0068e-01,  2.0732e-03,  1.8431e-01, -4.2583e-01,
        -8.0421e-01, -1.9666e-01, -3.1832e-01, -1.7572e-01,  5.1240e-02,
        -8.3500e-01, -6.1269e-01, -1.0321e-01,  6.3611e-01,  1.4738e+00,
        -1.6230e-01, -2.4390e-01,  2.9936e-01,  2.5621e-01, -8.1808e-01,
         1.5731e-01,  6.5317e-01, -5.2823e-01, -2.2302e-01, -1.2105e+00,
        -2.0073e-01,  2.4320e-01,  4.4868e-01, -2.1374e-01, -7.8380e-02,
        -6.5890e-01, -3.0483e-01, -4.3363e-01, -4.4071e-01, -5.5395e-01,
        -1.1038e+00,  5.3970e-01, -4.6963e-01, -8.5560e-01, -7.7203e-01,
        -6.9342e-01,  1.7239e-02, -6.2188e-01, -4.1743e-01, -2.7738e-01,
         1.0637e-01, -3.6400e-01,  4.2358e-01, -7.8803e-01, -1.8633e-02,
         6.4148e-02, -4.5177e-01, -5.7258e-01,  4.5704e-01, -6.8276e-01,
        -6.5233e-03,  7.7626e-02, -1.2279e-03, -6.7796e-01, -4.8214e-02,
        -2.1020e-01, -1.1471e-01,  1.6934e-01,  1.6584e-01,  9.0140e-01,
         8.0760e-01, -1.7762e-01,  2.8689e-03,  8.2813e-01, -4.3626e-01,
        -3.0642e-01, -1.2573e+00,  5.2368e-02, -6.9311e-01, -8.1795e-01,
         1.3700e-01, -4.1840e-01, -6.9120e-01,  5.6514e-01, -4.6573e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([2856]), tensor(0.1476))
INFO:main.py:Create retrain_dataset
INFO:main.py:retrain_dataset first example: (tensor([ 2.0261e-01,  1.2030e+00,  7.7160e-02, -9.5301e-01,  2.4184e-02,
        -6.0299e-01, -3.1998e-02, -2.7031e-01,  7.3161e-01, -3.2260e-01,
        -7.7211e-01,  2.3038e-02, -7.2163e-01, -5.8269e-01, -3.9860e-01,
         1.2343e-02, -3.7150e-01,  1.3976e-01, -9.7562e-02,  9.3111e-01,
        -4.8866e-01, -1.7234e-01, -2.9001e-01,  5.9865e-03, -7.3111e-02,
        -3.0129e-01, -5.3486e-01, -1.0612e-01,  6.3604e-01,  1.8485e+00,
         3.6312e-01, -1.4798e-01,  9.2853e-01,  2.5977e-01, -3.1201e-01,
        -2.2697e-01,  1.8420e-01,  5.3606e-01, -7.5655e-03, -1.1097e+00,
        -1.9868e-01,  2.1932e-01,  5.4677e-01,  1.4390e-01, -4.2154e-02,
        -6.9834e-01,  7.4425e-02, -6.5330e-02, -4.3494e-01, -1.5329e-01,
        -4.7699e-01,  5.4194e-01, -4.7066e-01,  2.3565e-01, -6.6083e-03,
        -2.4030e-01, -6.2391e-01, -4.8694e-01, -5.5280e-01, -1.7489e-01,
        -2.5411e-02, -5.6088e-01, -6.2457e-01, -4.3938e-01, -3.6671e-01,
        -4.3851e-01,  1.1935e+00, -2.7868e-01, -7.4402e-01, -5.8887e-01,
        -6.1319e-01, -4.6424e-01, -1.0755e-03, -8.5199e-01,  2.9782e-01,
        -6.3685e-01,  3.1135e-01,  3.7504e-01,  9.3055e-01,  9.0855e-01,
        -1.3097e+00,  2.1281e-01,  2.9228e-03, -8.0592e-01, -7.8568e-02,
         4.6733e-01, -2.8072e-02, -8.7221e-01, -7.9038e-01, -8.6859e-01,
         9.9307e-02,  3.7247e-02,  3.5178e-02, -5.4804e-01, -4.6007e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([11299]), tensor(0.2117))
INFO:main.py:Create prediction_dataset
INFO:main.py:prediction_dataset first example: (tensor([-4.6477e-01, -1.6329e-01, -5.7385e-01,  9.7166e-01,  1.0560e-02,
        -4.4649e-01, -9.3859e-01, -7.7028e-01,  7.0123e-01, -8.5424e-02,
        -7.3104e-01, -2.8118e-02, -7.2163e-01,  2.6148e-01, -3.2232e-01,
         2.4876e-01,  4.0908e-01,  5.4068e-01, -3.3353e-02, -1.1343e-01,
        -6.8954e-01, -8.5314e-01, -5.2115e-01, -3.1027e-01,  1.6108e-01,
        -7.7487e-01, -6.0807e-01, -1.0612e-01,  6.3604e-01,  1.6133e+00,
        -7.7281e-01,  1.6118e-01,  5.1671e-01,  2.5977e-01, -7.8137e-01,
        -4.0242e-01,  1.9530e-01, -5.4869e-01,  2.7720e-01, -9.7963e-01,
        -1.9840e-01,  1.1506e-02,  2.3899e-01, -2.1021e-01, -2.2510e-01,
        -7.7474e-01,  6.0927e-01, -3.0303e-01, -6.7744e-01,  1.4414e-01,
         1.5348e-01,  5.4194e-01, -4.7066e-01, -8.6122e-01, -7.7126e-01,
        -6.5111e-01,  1.7151e-02, -4.8938e-01,  2.0673e-01, -1.9556e-01,
        -1.2346e-01,  2.1711e-01,  3.1240e-01,  1.5820e-02, -1.8926e-02,
        -7.9046e-02, -4.4862e-01,  3.8029e-02,  1.6433e+00, -6.2008e-01,
        -3.3311e-03,  8.0683e-02, -1.0755e-03, -8.6619e-01, -8.6403e-02,
        -3.8545e-01, -1.4906e-01,  1.9993e-01,  1.6000e-01,  4.2635e-01,
         8.0761e-01, -1.4727e-01,  2.9228e-03,  8.0778e-01,  1.0628e-01,
        -2.1268e-01, -1.0824e+00, -5.9950e-01, -6.9591e-01, -8.1839e-01,
        -2.9373e-02, -1.7664e-01, -2.4082e-01, -2.4063e-01, -4.6007e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([2968]), tensor(-0.1152))
INFO:main.py:

Create dataloader

INFO:main.py:Create train and test dataloader
INFO:main.py:Create retrain and prediction dataloader
INFO:main.py:

Hyperparameters tuning with Ray Tune

INFO:main.py:Training data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013]
INFO:main.py:Testing data year: 2014
INFO:main.py:

            ray_results_path: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
            num_samples: 20
            max_num_epochs: 11
            num_cpus: 40
            cpus_per_trial: 2
            num_gpus: 2
            gpus_per_trial: 1
            continuous_dim: 102
            num_embeddings: 17893
            device: cuda
            
2024-07-08 23:28:45,223	INFO worker.py:1753 -- Started a local Ray instance.
2024-07-08 23:28:45,271	INFO packaging.py:530 -- Creating a file package for local directory '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src'.
2024-07-08 23:28:45,295	INFO packaging.py:358 -- Pushing file package 'gcs://_ray_pkg_0449f6f0a2bbc234.zip' (1.20MiB) to Ray cluster...
2024-07-08 23:28:45,301	INFO packaging.py:371 -- Successfully pushed file package 'gcs://_ray_pkg_0449f6f0a2bbc234.zip'.
2024-07-08 23:28:48,538	WARNING tune.py:902 -- AIR_VERBOSITY is set, ignoring passed-in ProgressReporter for now.
2024-07-08 23:56:11,012	INFO tune.py:1009 -- Wrote the latest version of all result files and experiment state to '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results/train_fnn_2024-07-08_23-28-48' in 0.0493s.
INFO:model_data_nn.py:Best trial config: {'continuous_dim': 102, 'hidden_dim': 35, 'num_layers': 5, 'num_embeddings': 17893, 'embedding_dim': 10, 'dropout_rate': 0.42857172461500187, 'lr': 0.0006584106160121609, 'weight_decay': 0.0004835952776465948, 'num_epochs': 11, 'num_gpus': 2}
INFO:model_data_nn.py:Best trial training loss: 0.03625584310344861
INFO:model_data_nn.py:Best trial testing loss: 0.01833451603416283
INFO:main.py:Ray Tune results have been saved to: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
INFO:main.py:Best trial directory: /tmp/ray/session_2024-07-08_23-28-42_518706_4024147/artifacts/2024-07-08_23-28-48/train_fnn_2024-07-08_23-28-48/driver_artifacts/train_fnn_d3c8b_00008_8_dropout_rate=0.4286,embedding_dim=10,hidden_dim=35,lr=0.0007,num_layers=5,weight_decay=0.0005_2024-07-08_23-28-48
INFO:main.py:

Retrain a new model with data in years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014]

            Using the optimized hyperparameters: {'continuous_dim': 102, 'hidden_dim': 35, 'num_layers': 5, 'num_embeddings': 18111, 'embedding_dim': 10, 'dropout_rate': 0.42857172461500187, 'lr': 0.0006584106160121609, 'weight_decay': 0.0004835952776465948, 'num_epochs': 11, 'num_gpus': 2}

INFO:model_data_nn.py:Epoch 1/11, metrics: {'avg_train_loss': 3.3218529985434926, 'avg_test_loss': 0.03144954602806742}
INFO:model_data_nn.py:Epoch 2/11, metrics: {'avg_train_loss': 0.03637593856402922, 'avg_test_loss': 0.03138440385206331}
INFO:model_data_nn.py:Epoch 3/11, metrics: {'avg_train_loss': 0.03593137757596073, 'avg_test_loss': 0.031172083363931926}
INFO:model_data_nn.py:Epoch 4/11, metrics: {'avg_train_loss': 0.035860591224431554, 'avg_test_loss': 0.031082501941539855}
INFO:model_data_nn.py:Epoch 5/11, metrics: {'avg_train_loss': 0.03587234669592954, 'avg_test_loss': 0.03110531832363387}
INFO:model_data_nn.py:Epoch 6/11, metrics: {'avg_train_loss': 0.03587777876791863, 'avg_test_loss': 0.031188834389174205}
INFO:model_data_nn.py:Epoch 7/11, metrics: {'avg_train_loss': 0.0358755208978807, 'avg_test_loss': 0.031102474229352445}
INFO:model_data_nn.py:Epoch 8/11, metrics: {'avg_train_loss': 0.03588951918008058, 'avg_test_loss': 0.03117522293910014}
INFO:model_data_nn.py:Epoch 9/11, metrics: {'avg_train_loss': 0.03587168190243018, 'avg_test_loss': 0.031175986371980692}
INFO:model_data_nn.py:Epoch 10/11, metrics: {'avg_train_loss': 0.03587519813789622, 'avg_test_loss': 0.031259707990825544}
INFO:model_data_nn.py:Epoch 11/11, metrics: {'avg_train_loss': 0.03587742450746349, 'avg_test_loss': 0.031197644197468802}
INFO:main.py:Making prediction for data in year: 2014
INFO:main.py:Prediction data shape: (41197,)
/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src/main.py:372: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  prediction_data['pred'] = predictions
INFO:main.py:Root Mean Squared Error for Prediction in 2015: 0.17660380969386286
INFO:main.py:Prediction Stats:                 ret          pred
count  41197.000000  41197.000000
mean      -0.005004      0.012204
std        0.175785      0.001804
min       -0.928773      0.011592
25%       -0.067315      0.011845
50%       -0.006061      0.011891
75%        0.050373      0.011952
max       15.984456      0.052541
INFO:main.py:

Transform data

INFO:transform_data_nn.py:Train data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014]
INFO:transform_data_nn.py:Train_data: (1923216, 158)

INFO:transform_data_nn.py:Test data years: [2015]
INFO:transform_data_nn.py:Test_data: (41197, 158)

INFO:transform_data_nn.py:Retrain data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015]
INFO:transform_data_nn.py:Retrain_data: (1964413, 158)

INFO:transform_data_nn.py:Prediction data years: [2016]
INFO:transform_data_nn.py:Prediction_data: (41179, 158)

INFO:main.py:

Generate X and y with train_data and test_data

INFO:main.py:
            x_train_tf: torch.Size([1923216, 103])
            y_train_tf: torch.Size([1923216])

            x_test_tf: torch.Size([41197, 103])
            y_test_tf: torch.Size([41197])

        
INFO:main.py:

Generate X and y with retrain_data and prediction_data

INFO:main.py:
            x_retrain_tf: torch.Size([1964413, 103])
            y_retrain_tf: torch.Size([1964413])

            x_prediction_tf: torch.Size([41179, 103])
            y_prediction_tf: torch.Size([41179])

        
INFO:main.py:

Create dataset

INFO:main.py:Create train_dataset
INFO:main.py:train_dataset first example: (tensor([ 2.0261e-01,  1.2030e+00,  7.7160e-02, -9.5301e-01,  2.4184e-02,
        -6.0299e-01, -3.1998e-02, -2.7031e-01,  7.3161e-01, -3.2260e-01,
        -7.7211e-01,  2.3038e-02, -7.2163e-01, -5.8269e-01, -3.9860e-01,
         1.2343e-02, -3.7150e-01,  1.3976e-01, -9.7562e-02,  9.3111e-01,
        -4.8866e-01, -1.7234e-01, -2.9001e-01,  5.9865e-03, -7.3111e-02,
        -3.0129e-01, -5.3486e-01, -1.0612e-01,  6.3604e-01,  1.8485e+00,
         3.6312e-01, -1.4798e-01,  9.2853e-01,  2.5977e-01, -3.1201e-01,
        -2.2697e-01,  1.8420e-01,  5.3606e-01, -7.5655e-03, -1.1097e+00,
        -1.9868e-01,  2.1932e-01,  5.4677e-01,  1.4390e-01, -4.2154e-02,
        -6.9834e-01,  7.4425e-02, -6.5330e-02, -4.3494e-01, -1.5329e-01,
        -4.7699e-01,  5.4194e-01, -4.7066e-01,  2.3565e-01, -6.6083e-03,
        -2.4030e-01, -6.2391e-01, -4.8694e-01, -5.5280e-01, -1.7489e-01,
        -2.5411e-02, -5.6088e-01, -6.2457e-01, -4.3938e-01, -3.6671e-01,
        -4.3851e-01,  1.1935e+00, -2.7868e-01, -7.4402e-01, -5.8887e-01,
        -6.1319e-01, -4.6424e-01, -1.0755e-03, -8.5199e-01,  2.9782e-01,
        -6.3685e-01,  3.1135e-01,  3.7504e-01,  9.3055e-01,  9.0855e-01,
        -1.3097e+00,  2.1281e-01,  2.9228e-03, -8.0592e-01, -7.8568e-02,
         4.6733e-01, -2.8072e-02, -8.7221e-01, -7.9038e-01, -8.6859e-01,
         9.9307e-02,  3.7247e-02,  3.5178e-02, -5.4804e-01, -4.6007e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([11299]), tensor(0.2117))
INFO:main.py:Create test_dataset
INFO:main.py:test_dataset first example: (tensor([-4.6477e-01, -1.6329e-01, -5.7385e-01,  9.7166e-01,  1.0560e-02,
        -4.4649e-01, -9.3859e-01, -7.7028e-01,  7.0123e-01, -8.5424e-02,
        -7.3104e-01, -2.8118e-02, -7.2163e-01,  2.6148e-01, -3.2232e-01,
         2.4876e-01,  4.0908e-01,  5.4068e-01, -3.3353e-02, -1.1343e-01,
        -6.8954e-01, -8.5314e-01, -5.2115e-01, -3.1027e-01,  1.6108e-01,
        -7.7487e-01, -6.0807e-01, -1.0612e-01,  6.3604e-01,  1.6133e+00,
        -7.7281e-01,  1.6118e-01,  5.1671e-01,  2.5977e-01, -7.8137e-01,
        -4.0242e-01,  1.9530e-01, -5.4869e-01,  2.7720e-01, -9.7963e-01,
        -1.9840e-01,  1.1506e-02,  2.3899e-01, -2.1021e-01, -2.2510e-01,
        -7.7474e-01,  6.0927e-01, -3.0303e-01, -6.7744e-01,  1.4414e-01,
         1.5348e-01,  5.4194e-01, -4.7066e-01, -8.6122e-01, -7.7126e-01,
        -6.5111e-01,  1.7151e-02, -4.8938e-01,  2.0673e-01, -1.9556e-01,
        -1.2346e-01,  2.1711e-01,  3.1240e-01,  1.5820e-02, -1.8926e-02,
        -7.9046e-02, -4.4862e-01,  3.8029e-02,  1.6433e+00, -6.2008e-01,
        -3.3311e-03,  8.0683e-02, -1.0755e-03, -8.6619e-01, -8.6403e-02,
        -3.8545e-01, -1.4906e-01,  1.9993e-01,  1.6000e-01,  4.2635e-01,
         8.0761e-01, -1.4727e-01,  2.9228e-03,  8.0778e-01,  1.0628e-01,
        -2.1268e-01, -1.0824e+00, -5.9950e-01, -6.9591e-01, -8.1839e-01,
        -2.9373e-02, -1.7664e-01, -2.4082e-01, -2.4063e-01, -4.6007e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([2968]), tensor(-0.1152))
INFO:main.py:Create retrain_dataset
INFO:main.py:retrain_dataset first example: (tensor([ 2.0700e-01,  1.2127e+00,  7.5940e-02, -9.6289e-01,  2.5407e-02,
        -6.0233e-01, -3.5765e-02, -2.7285e-01,  7.4095e-01, -3.2353e-01,
        -7.7239e-01,  2.5700e-02, -7.2436e-01, -5.8689e-01, -3.9493e-01,
         1.1304e-02, -3.6909e-01,  1.4293e-01, -9.6423e-02,  9.4098e-01,
        -4.8914e-01, -1.7553e-01, -2.9380e-01,  7.1599e-03, -7.3935e-02,
        -3.0241e-01, -5.3137e-01, -1.0689e-01,  6.3577e-01,  1.8594e+00,
         3.6384e-01, -1.4737e-01,  9.3254e-01,  2.6310e-01, -3.0734e-01,
        -2.2564e-01,  1.8555e-01,  5.4117e-01, -6.5382e-03, -1.1014e+00,
        -1.9728e-01,  2.2954e-01,  5.5520e-01,  1.4477e-01, -4.0868e-02,
        -6.9565e-01,  7.9366e-02, -6.3912e-02, -4.4149e-01, -1.5055e-01,
        -4.8161e-01,  5.4348e-01, -4.7172e-01,  2.3912e-01, -3.7807e-03,
        -2.3782e-01, -6.1578e-01, -4.8402e-01, -5.5385e-01, -1.7354e-01,
        -2.6234e-02, -5.6220e-01, -6.2786e-01, -4.3895e-01, -3.6720e-01,
        -4.3925e-01,  1.2062e+00, -2.7691e-01, -7.5094e-01, -5.8968e-01,
        -6.1237e-01, -4.7337e-01, -1.2411e-03, -8.4937e-01,  2.9982e-01,
        -6.3326e-01,  3.0976e-01,  3.7567e-01,  9.4004e-01,  9.1564e-01,
        -1.3130e+00,  2.0912e-01,  2.9487e-03, -7.8838e-01, -7.6045e-02,
         4.7681e-01, -1.2910e-02, -8.7410e-01, -7.9276e-01, -8.6467e-01,
         9.9076e-02,  4.1661e-02,  3.6790e-02, -5.5361e-01, -4.5448e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([11493]), tensor(0.2117))
INFO:main.py:Create prediction_dataset
INFO:main.py:prediction_dataset first example: (tensor([-0.4536, -0.1647, -0.4611,  0.9643, -0.2572, -0.2294, -0.9751, -0.7829,
         0.1973, -0.3844, -0.7689, -0.1484, -0.7244,  0.0930, -0.3482, -0.0374,
        -0.3680, -1.1561, -0.0342, -0.2285, -0.4998, -0.1985, -0.5201, -0.1497,
         0.0742, -0.8262, -0.6042, -0.1069,  0.1122,  1.0537, -0.9318, -0.2948,
         0.1589,  0.2631, -0.8967, -0.3353, -0.1179, -0.6172, -0.8784, -0.9965,
        -0.1947, -0.6257, -0.0548, -0.2975, -0.1935,  0.9235, -0.5480, -0.8979,
        -0.0530, -0.5003, -1.1113,  0.5435, -0.4717, -0.8663, -0.7707, -0.7428,
         0.0171, -0.6193, -0.4095, -0.2532, -0.9823, -0.3757,  0.3721,  0.4356,
        -0.0199, -0.0226, -0.4458,  0.1487,  0.4426, -0.6636, -0.0041,  0.0847,
        -0.0012,  0.3384, -0.1019, -0.3898, -0.1687,  0.0664, -0.4121,  0.9156,
         0.8069,  0.1538,  0.0029,  0.7792, -0.1461, -0.3173, -0.5859, -0.2866,
        -0.6939, -0.8113,  0.0696, -0.5944, -0.2424, -0.4564, -0.4545,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000]), tensor([2919]), tensor(0.1168))
INFO:main.py:

Create dataloader

INFO:main.py:Create train and test dataloader
INFO:main.py:Create retrain and prediction dataloader
INFO:main.py:

Hyperparameters tuning with Ray Tune

INFO:main.py:Training data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014]
INFO:main.py:Testing data year: 2015
INFO:main.py:

            ray_results_path: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
            num_samples: 20
            max_num_epochs: 11
            num_cpus: 40
            cpus_per_trial: 2
            num_gpus: 2
            gpus_per_trial: 1
            continuous_dim: 102
            num_embeddings: 18111
            device: cuda
            
2024-07-09 02:54:00,013	INFO worker.py:1753 -- Started a local Ray instance.
2024-07-09 02:54:00,066	INFO packaging.py:530 -- Creating a file package for local directory '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src'.
2024-07-09 02:54:00,093	INFO packaging.py:358 -- Pushing file package 'gcs://_ray_pkg_c2018fb8a75b70e7.zip' (1.22MiB) to Ray cluster...
2024-07-09 02:54:00,100	INFO packaging.py:371 -- Successfully pushed file package 'gcs://_ray_pkg_c2018fb8a75b70e7.zip'.
2024-07-09 02:54:03,284	WARNING tune.py:902 -- AIR_VERBOSITY is set, ignoring passed-in ProgressReporter for now.
2024-07-09 03:18:40,831	INFO tune.py:1009 -- Wrote the latest version of all result files and experiment state to '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results/train_fnn_2024-07-09_02-54-03' in 0.0542s.
INFO:model_data_nn.py:Best trial config: {'continuous_dim': 102, 'hidden_dim': 105, 'num_layers': 3, 'num_embeddings': 18111, 'embedding_dim': 25, 'dropout_rate': 0.3346021063413328, 'lr': 0.00013311216080736887, 'weight_decay': 1.152798712823241e-06, 'num_epochs': 11, 'num_gpus': 2}
INFO:model_data_nn.py:Best trial training loss: 0.035644924277299636
INFO:model_data_nn.py:Best trial testing loss: 0.030972826988754434
INFO:main.py:Ray Tune results have been saved to: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
INFO:main.py:Best trial directory: /tmp/ray/session_2024-07-09_02-53-55_753286_4024147/artifacts/2024-07-09_02-54-03/train_fnn_2024-07-09_02-54-03/driver_artifacts/train_fnn_7ff79_00001_1_dropout_rate=0.3346,embedding_dim=25,hidden_dim=105,lr=0.0001,num_layers=3,weight_decay=0.0000_2024-07-09_02-54-03
INFO:main.py:

Retrain a new model with data in years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015]

            Using the optimized hyperparameters: {'continuous_dim': 102, 'hidden_dim': 105, 'num_layers': 3, 'num_embeddings': 18403, 'embedding_dim': 25, 'dropout_rate': 0.3346021063413328, 'lr': 0.00013311216080736887, 'weight_decay': 1.152798712823241e-06, 'num_epochs': 11, 'num_gpus': 2}

INFO:model_data_nn.py:Epoch 1/11, metrics: {'avg_train_loss': 7.19906452977275, 'avg_test_loss': 0.030423664042483204}
INFO:model_data_nn.py:Epoch 2/11, metrics: {'avg_train_loss': 0.03613330838266845, 'avg_test_loss': 0.02995194199130587}
INFO:model_data_nn.py:Epoch 3/11, metrics: {'avg_train_loss': 0.03607591717575082, 'avg_test_loss': 0.02987328105785462}
INFO:model_data_nn.py:Epoch 4/11, metrics: {'avg_train_loss': 0.03589499307478879, 'avg_test_loss': 0.030086155801502444}
INFO:model_data_nn.py:Epoch 5/11, metrics: {'avg_train_loss': 0.03581406942641293, 'avg_test_loss': 0.02987150419272066}
INFO:model_data_nn.py:Epoch 6/11, metrics: {'avg_train_loss': 0.0357526073576715, 'avg_test_loss': 0.029947565778835405}
INFO:model_data_nn.py:Epoch 7/11, metrics: {'avg_train_loss': 0.035691972167694985, 'avg_test_loss': 0.029892405497939874}
INFO:model_data_nn.py:Epoch 8/11, metrics: {'avg_train_loss': 0.03565209535838187, 'avg_test_loss': 0.029969584272005915}
INFO:model_data_nn.py:Epoch 9/11, metrics: {'avg_train_loss': 0.03560196842895352, 'avg_test_loss': 0.02991680653117921}
INFO:model_data_nn.py:Epoch 10/11, metrics: {'avg_train_loss': 0.03557219165980482, 'avg_test_loss': 0.02988296945909073}
INFO:model_data_nn.py:Epoch 11/11, metrics: {'avg_train_loss': 0.03554357536397301, 'avg_test_loss': 0.029881168506831302}
INFO:main.py:Making prediction for data in year: 2015
INFO:main.py:Prediction data shape: (41179,)
/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src/main.py:372: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  prediction_data['pred'] = predictions
INFO:main.py:Root Mean Squared Error for Prediction in 2016: 0.17288672334948135
INFO:main.py:Prediction Stats:                 ret          pred
count  41179.000000  41179.000000
mean       0.016006      0.006966
std        0.172942      0.011903
min       -0.961852     -0.086917
25%       -0.051442      0.003739
50%        0.009606      0.006357
75%        0.073725      0.009478
max        7.634921      0.187434
INFO:main.py:

Transform data

INFO:transform_data_nn.py:Train data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015]
INFO:transform_data_nn.py:Train_data: (1964413, 158)

INFO:transform_data_nn.py:Test data years: [2016]
INFO:transform_data_nn.py:Test_data: (41179, 158)

INFO:transform_data_nn.py:Retrain data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016]
INFO:transform_data_nn.py:Retrain_data: (2005592, 158)

INFO:transform_data_nn.py:Prediction data years: [2017]
INFO:transform_data_nn.py:Prediction_data: (40386, 158)

INFO:main.py:

Generate X and y with train_data and test_data

INFO:main.py:
            x_train_tf: torch.Size([1964413, 103])
            y_train_tf: torch.Size([1964413])

            x_test_tf: torch.Size([41179, 103])
            y_test_tf: torch.Size([41179])

        
INFO:main.py:

Generate X and y with retrain_data and prediction_data

INFO:main.py:
            x_retrain_tf: torch.Size([2005592, 103])
            y_retrain_tf: torch.Size([2005592])

            x_prediction_tf: torch.Size([40386, 103])
            y_prediction_tf: torch.Size([40386])

        
INFO:main.py:

Create dataset

INFO:main.py:Create train_dataset
INFO:main.py:train_dataset first example: (tensor([ 2.0700e-01,  1.2127e+00,  7.5940e-02, -9.6289e-01,  2.5407e-02,
        -6.0233e-01, -3.5765e-02, -2.7285e-01,  7.4095e-01, -3.2353e-01,
        -7.7239e-01,  2.5700e-02, -7.2436e-01, -5.8689e-01, -3.9493e-01,
         1.1304e-02, -3.6909e-01,  1.4293e-01, -9.6423e-02,  9.4098e-01,
        -4.8914e-01, -1.7553e-01, -2.9380e-01,  7.1599e-03, -7.3935e-02,
        -3.0241e-01, -5.3137e-01, -1.0689e-01,  6.3577e-01,  1.8594e+00,
         3.6384e-01, -1.4737e-01,  9.3254e-01,  2.6310e-01, -3.0734e-01,
        -2.2564e-01,  1.8555e-01,  5.4117e-01, -6.5382e-03, -1.1014e+00,
        -1.9728e-01,  2.2954e-01,  5.5520e-01,  1.4477e-01, -4.0868e-02,
        -6.9565e-01,  7.9366e-02, -6.3912e-02, -4.4149e-01, -1.5055e-01,
        -4.8161e-01,  5.4348e-01, -4.7172e-01,  2.3912e-01, -3.7807e-03,
        -2.3782e-01, -6.1578e-01, -4.8402e-01, -5.5385e-01, -1.7354e-01,
        -2.6234e-02, -5.6220e-01, -6.2786e-01, -4.3895e-01, -3.6720e-01,
        -4.3925e-01,  1.2062e+00, -2.7691e-01, -7.5094e-01, -5.8968e-01,
        -6.1237e-01, -4.7337e-01, -1.2411e-03, -8.4937e-01,  2.9982e-01,
        -6.3326e-01,  3.0976e-01,  3.7567e-01,  9.4004e-01,  9.1564e-01,
        -1.3130e+00,  2.0912e-01,  2.9487e-03, -7.8838e-01, -7.6045e-02,
         4.7681e-01, -1.2910e-02, -8.7410e-01, -7.9276e-01, -8.6467e-01,
         9.9076e-02,  4.1661e-02,  3.6790e-02, -5.5361e-01, -4.5448e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([11493]), tensor(0.2117))
INFO:main.py:Create test_dataset
INFO:main.py:test_dataset first example: (tensor([-0.4536, -0.1647, -0.4611,  0.9643, -0.2572, -0.2294, -0.9751, -0.7829,
         0.1973, -0.3844, -0.7689, -0.1484, -0.7244,  0.0930, -0.3482, -0.0374,
        -0.3680, -1.1561, -0.0342, -0.2285, -0.4998, -0.1985, -0.5201, -0.1497,
         0.0742, -0.8262, -0.6042, -0.1069,  0.1122,  1.0537, -0.9318, -0.2948,
         0.1589,  0.2631, -0.8967, -0.3353, -0.1179, -0.6172, -0.8784, -0.9965,
        -0.1947, -0.6257, -0.0548, -0.2975, -0.1935,  0.9235, -0.5480, -0.8979,
        -0.0530, -0.5003, -1.1113,  0.5435, -0.4717, -0.8663, -0.7707, -0.7428,
         0.0171, -0.6193, -0.4095, -0.2532, -0.9823, -0.3757,  0.3721,  0.4356,
        -0.0199, -0.0226, -0.4458,  0.1487,  0.4426, -0.6636, -0.0041,  0.0847,
        -0.0012,  0.3384, -0.1019, -0.3898, -0.1687,  0.0664, -0.4121,  0.9156,
         0.8069,  0.1538,  0.0029,  0.7792, -0.1461, -0.3173, -0.5859, -0.2866,
        -0.6939, -0.8113,  0.0696, -0.5944, -0.2424, -0.4564, -0.4545,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000]), tensor([2919]), tensor(0.1168))
INFO:main.py:Create retrain_dataset
INFO:main.py:retrain_dataset first example: (tensor([ 2.0896e-01,  1.2208e+00,  7.5185e-02, -9.7090e-01,  2.7344e-02,
        -6.0268e-01, -3.8307e-02, -2.7430e-01,  7.4847e-01, -3.2608e-01,
        -7.7207e-01,  3.0045e-02, -7.2619e-01, -5.9043e-01, -3.9260e-01,
         1.2398e-02, -3.6673e-01,  1.4556e-01, -9.7483e-02,  9.5066e-01,
        -4.9283e-01, -1.7272e-01, -2.9424e-01,  1.0005e-02, -7.4706e-02,
        -3.0387e-01, -5.2724e-01, -1.0933e-01,  6.3631e-01,  1.8674e+00,
         3.6362e-01, -1.4540e-01,  9.3554e-01,  2.6686e-01, -3.0177e-01,
        -2.2510e-01,  1.8736e-01,  5.4659e-01, -6.2609e-03, -1.0946e+00,
        -1.9610e-01,  2.4379e-01,  5.6424e-01,  1.4495e-01, -3.9816e-02,
        -6.9389e-01,  8.6593e-02, -6.3849e-02, -4.4193e-01, -1.4837e-01,
        -4.8634e-01,  5.4611e-01, -4.7235e-01,  2.4249e-01, -3.2660e-04,
        -2.3487e-01, -6.0798e-01, -4.8316e-01, -5.5383e-01, -1.7309e-01,
        -2.5827e-02, -5.6239e-01, -6.2912e-01, -4.3896e-01, -3.6764e-01,
        -4.3953e-01,  1.2179e+00, -2.7563e-01, -7.5645e-01, -5.9028e-01,
        -6.1251e-01, -4.9139e-01, -1.6736e-03, -8.4802e-01,  3.0314e-01,
        -6.2690e-01,  3.0688e-01,  3.7715e-01,  9.4889e-01,  9.2248e-01,
        -1.3164e+00,  2.0452e-01,  2.7851e-03, -6.9786e-01, -7.3677e-02,
         4.8499e-01,  1.5891e-03, -8.7604e-01, -7.9826e-01, -8.6121e-01,
         9.7362e-02,  4.5924e-02,  3.9129e-02, -5.5838e-01, -4.4896e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([11613]), tensor(0.2117))
INFO:main.py:Create prediction_dataset
INFO:main.py:prediction_dataset first example: (tensor([-5.0557e-01, -1.1343e-01, -5.9790e-01,  9.5813e-01, -5.4624e-01,
        -6.9852e-01, -1.2906e+00, -8.5771e-01,  8.0989e-01, -5.5036e-01,
        -6.0437e-01, -1.6293e-01, -7.2619e-01,  1.3328e-01, -5.0373e-01,
        -5.3665e-02, -3.7146e-01, -1.3662e+00, -3.6431e-02, -3.1726e-01,
         1.8327e+00, -1.9892e-01, -2.3631e-01, -4.0652e-02, -5.3689e-02,
        -8.5893e-01, -5.8810e-01, -1.0933e-01,  6.3631e-01,  2.0511e+00,
         1.4206e-01, -2.8776e-01,  1.0975e-01,  2.6686e-01, -9.2039e-01,
        -6.8891e-01, -4.0855e-01, -6.3042e-01, -5.5881e-01, -9.6792e-02,
        -1.9673e-01,  3.2946e-01, -6.7740e-01, -1.9422e-01, -4.9474e-01,
        -8.6594e-01,  1.0189e+00, -5.6773e-04, -3.8271e-01,  2.0773e+00,
        -1.1154e+00,  5.4611e-01, -4.7235e-01, -8.7102e-01, -7.6976e-01,
        -7.6020e-01,  1.6889e-02, -6.1840e-01, -3.4903e-01, -6.5392e-02,
         6.8821e-02, -4.0772e-01, -1.0887e-02, -1.7448e-01, -1.8669e-02,
        -2.1116e-01, -4.4329e-01,  7.7981e-01,  1.0342e+00, -7.0614e-01,
        -6.2910e-03,  8.7914e-02, -1.6736e-03, -1.0751e+00, -1.0712e-01,
        -3.7666e-01, -1.6302e-01,  1.6141e-02, -2.8265e-02,  9.2248e-01,
         8.0607e-01,  5.5783e-02,  2.7851e-03,  7.0262e-01, -5.9970e-01,
        -1.9155e-01, -5.4051e-01, -1.3589e-01, -6.7482e-01, -8.0240e-01,
         1.8251e-01, -3.7323e-01, -2.4140e-01,  6.6568e-01, -4.4896e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([2847]), tensor(0.0080))
INFO:main.py:

Create dataloader

INFO:main.py:Create train and test dataloader
INFO:main.py:Create retrain and prediction dataloader
INFO:main.py:

Hyperparameters tuning with Ray Tune

INFO:main.py:Training data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015]
INFO:main.py:Testing data year: 2016
INFO:main.py:

            ray_results_path: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
            num_samples: 20
            max_num_epochs: 11
            num_cpus: 40
            cpus_per_trial: 2
            num_gpus: 2
            gpus_per_trial: 1
            continuous_dim: 102
            num_embeddings: 18403
            device: cuda
            
2024-07-09 06:12:56,999	INFO worker.py:1753 -- Started a local Ray instance.
2024-07-09 06:12:57,130	INFO packaging.py:530 -- Creating a file package for local directory '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src'.
2024-07-09 06:12:57,150	INFO packaging.py:358 -- Pushing file package 'gcs://_ray_pkg_c2018fb8a75b70e7.zip' (1.22MiB) to Ray cluster...
2024-07-09 06:12:57,155	INFO packaging.py:371 -- Successfully pushed file package 'gcs://_ray_pkg_c2018fb8a75b70e7.zip'.
2024-07-09 06:13:04,138	WARNING tune.py:902 -- AIR_VERBOSITY is set, ignoring passed-in ProgressReporter for now.
2024-07-09 06:34:48,034	INFO tune.py:1009 -- Wrote the latest version of all result files and experiment state to '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results/train_fnn_2024-07-09_06-13-04' in 0.0540s.
INFO:model_data_nn.py:Best trial config: {'continuous_dim': 102, 'hidden_dim': 35, 'num_layers': 5, 'num_embeddings': 18403, 'embedding_dim': 10, 'dropout_rate': 0.42857172461500187, 'lr': 0.0006584106160121609, 'weight_decay': 0.0004835952776465948, 'num_epochs': 11, 'num_gpus': 2}
INFO:model_data_nn.py:Best trial training loss: 0.03575876866864632
INFO:model_data_nn.py:Best trial testing loss: 0.029877770220664162
INFO:main.py:Ray Tune results have been saved to: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
INFO:main.py:Best trial directory: /tmp/ray/session_2024-07-09_06-12-48_410038_4024147/artifacts/2024-07-09_06-13-04/train_fnn_2024-07-09_06-13-04/driver_artifacts/train_fnn_4d454_00008_8_dropout_rate=0.4286,embedding_dim=10,hidden_dim=35,lr=0.0007,num_layers=5,weight_decay=0.0005_2024-07-09_06-13-04
INFO:main.py:

Retrain a new model with data in years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016]

            Using the optimized hyperparameters: {'continuous_dim': 102, 'hidden_dim': 35, 'num_layers': 5, 'num_embeddings': 18587, 'embedding_dim': 10, 'dropout_rate': 0.42857172461500187, 'lr': 0.0006584106160121609, 'weight_decay': 0.0004835952776465948, 'num_epochs': 11, 'num_gpus': 2}

INFO:model_data_nn.py:Epoch 1/11, metrics: {'avg_train_loss': 7.977683060619108, 'avg_test_loss': 0.02279735248700916}
INFO:model_data_nn.py:Epoch 2/11, metrics: {'avg_train_loss': 0.03611010579533765, 'avg_test_loss': 0.02279031976963146}
INFO:model_data_nn.py:Epoch 3/11, metrics: {'avg_train_loss': 0.03574655104283512, 'avg_test_loss': 0.02274085374702287}
INFO:model_data_nn.py:Epoch 4/11, metrics: {'avg_train_loss': 0.03565059532509462, 'avg_test_loss': 0.022741775261238217}
INFO:model_data_nn.py:Epoch 5/11, metrics: {'avg_train_loss': 0.03565812483144628, 'avg_test_loss': 0.022729407185452837}
INFO:model_data_nn.py:Epoch 6/11, metrics: {'avg_train_loss': 0.035661645706721604, 'avg_test_loss': 0.02275469162666439}
INFO:model_data_nn.py:Epoch 7/11, metrics: {'avg_train_loss': 0.03565767560589252, 'avg_test_loss': 0.022723488211985443}
INFO:model_data_nn.py:Epoch 8/11, metrics: {'avg_train_loss': 0.035656158319402824, 'avg_test_loss': 0.02273611844918113}
INFO:model_data_nn.py:Epoch 9/11, metrics: {'avg_train_loss': 0.035655058290982936, 'avg_test_loss': 0.02273282959255614}
INFO:model_data_nn.py:Epoch 10/11, metrics: {'avg_train_loss': 0.03565242366821297, 'avg_test_loss': 0.02275455896624753}
INFO:model_data_nn.py:Epoch 11/11, metrics: {'avg_train_loss': 0.035660240389929695, 'avg_test_loss': 0.022733803325674578}
INFO:main.py:Making prediction for data in year: 2016
INFO:main.py:Prediction data shape: (40386,)
/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src/main.py:372: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  prediction_data['pred'] = predictions
INFO:main.py:Root Mean Squared Error for Prediction in 2017: 0.1507026420151027
INFO:main.py:Prediction Stats:                 ret          pred
count  40386.000000  40386.000000
mean       0.013678      0.012246
std        0.150700      0.002972
min       -0.871053      0.011194
25%       -0.044228      0.011501
50%        0.007246      0.011572
75%        0.060879      0.011885
max        8.336493      0.072870
INFO:main.py:

Transform data

INFO:transform_data_nn.py:Train data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016]
INFO:transform_data_nn.py:Train_data: (2005592, 158)

INFO:transform_data_nn.py:Test data years: [2017]
INFO:transform_data_nn.py:Test_data: (40386, 158)

INFO:transform_data_nn.py:Retrain data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017]
INFO:transform_data_nn.py:Retrain_data: (2045978, 158)

INFO:transform_data_nn.py:Prediction data years: [2018]
INFO:transform_data_nn.py:Prediction_data: (39853, 158)

INFO:main.py:

Generate X and y with train_data and test_data

INFO:main.py:
            x_train_tf: torch.Size([2005592, 103])
            y_train_tf: torch.Size([2005592])

            x_test_tf: torch.Size([40386, 103])
            y_test_tf: torch.Size([40386])

        
INFO:main.py:

Generate X and y with retrain_data and prediction_data

INFO:main.py:
            x_retrain_tf: torch.Size([2045978, 103])
            y_retrain_tf: torch.Size([2045978])

            x_prediction_tf: torch.Size([39853, 103])
            y_prediction_tf: torch.Size([39853])

        
INFO:main.py:

Create dataset

INFO:main.py:Create train_dataset
INFO:main.py:train_dataset first example: (tensor([ 2.0896e-01,  1.2208e+00,  7.5185e-02, -9.7090e-01,  2.7344e-02,
        -6.0268e-01, -3.8307e-02, -2.7430e-01,  7.4847e-01, -3.2608e-01,
        -7.7207e-01,  3.0045e-02, -7.2619e-01, -5.9043e-01, -3.9260e-01,
         1.2398e-02, -3.6673e-01,  1.4556e-01, -9.7483e-02,  9.5066e-01,
        -4.9283e-01, -1.7272e-01, -2.9424e-01,  1.0005e-02, -7.4706e-02,
        -3.0387e-01, -5.2724e-01, -1.0933e-01,  6.3631e-01,  1.8674e+00,
         3.6362e-01, -1.4540e-01,  9.3554e-01,  2.6686e-01, -3.0177e-01,
        -2.2510e-01,  1.8736e-01,  5.4659e-01, -6.2609e-03, -1.0946e+00,
        -1.9610e-01,  2.4379e-01,  5.6424e-01,  1.4495e-01, -3.9816e-02,
        -6.9389e-01,  8.6593e-02, -6.3849e-02, -4.4193e-01, -1.4837e-01,
        -4.8634e-01,  5.4611e-01, -4.7235e-01,  2.4249e-01, -3.2660e-04,
        -2.3487e-01, -6.0798e-01, -4.8316e-01, -5.5383e-01, -1.7309e-01,
        -2.5827e-02, -5.6239e-01, -6.2912e-01, -4.3896e-01, -3.6764e-01,
        -4.3953e-01,  1.2179e+00, -2.7563e-01, -7.5645e-01, -5.9028e-01,
        -6.1251e-01, -4.9139e-01, -1.6736e-03, -8.4802e-01,  3.0314e-01,
        -6.2690e-01,  3.0688e-01,  3.7715e-01,  9.4889e-01,  9.2248e-01,
        -1.3164e+00,  2.0452e-01,  2.7851e-03, -6.9786e-01, -7.3677e-02,
         4.8499e-01,  1.5891e-03, -8.7604e-01, -7.9826e-01, -8.6121e-01,
         9.7362e-02,  4.5924e-02,  3.9129e-02, -5.5838e-01, -4.4896e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([11613]), tensor(0.2117))
INFO:main.py:Create test_dataset
INFO:main.py:test_dataset first example: (tensor([-5.0557e-01, -1.1343e-01, -5.9790e-01,  9.5813e-01, -5.4624e-01,
        -6.9852e-01, -1.2906e+00, -8.5771e-01,  8.0989e-01, -5.5036e-01,
        -6.0437e-01, -1.6293e-01, -7.2619e-01,  1.3328e-01, -5.0373e-01,
        -5.3665e-02, -3.7146e-01, -1.3662e+00, -3.6431e-02, -3.1726e-01,
         1.8327e+00, -1.9892e-01, -2.3631e-01, -4.0652e-02, -5.3689e-02,
        -8.5893e-01, -5.8810e-01, -1.0933e-01,  6.3631e-01,  2.0511e+00,
         1.4206e-01, -2.8776e-01,  1.0975e-01,  2.6686e-01, -9.2039e-01,
        -6.8891e-01, -4.0855e-01, -6.3042e-01, -5.5881e-01, -9.6792e-02,
        -1.9673e-01,  3.2946e-01, -6.7740e-01, -1.9422e-01, -4.9474e-01,
        -8.6594e-01,  1.0189e+00, -5.6773e-04, -3.8271e-01,  2.0773e+00,
        -1.1154e+00,  5.4611e-01, -4.7235e-01, -8.7102e-01, -7.6976e-01,
        -7.6020e-01,  1.6889e-02, -6.1840e-01, -3.4903e-01, -6.5392e-02,
         6.8821e-02, -4.0772e-01, -1.0887e-02, -1.7448e-01, -1.8669e-02,
        -2.1116e-01, -4.4329e-01,  7.7981e-01,  1.0342e+00, -7.0614e-01,
        -6.2910e-03,  8.7914e-02, -1.6736e-03, -1.0751e+00, -1.0712e-01,
        -3.7666e-01, -1.6302e-01,  1.6141e-02, -2.8265e-02,  9.2248e-01,
         8.0607e-01,  5.5783e-02,  2.7851e-03,  7.0262e-01, -5.9970e-01,
        -1.9155e-01, -5.4051e-01, -1.3589e-01, -6.7482e-01, -8.0240e-01,
         1.8251e-01, -3.7323e-01, -2.4140e-01,  6.6568e-01, -4.4896e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([2847]), tensor(0.0080))
INFO:main.py:Create retrain_dataset
INFO:main.py:retrain_dataset first example: (tensor([ 2.0861e-01,  1.2284e+00,  7.2787e-02, -9.7865e-01,  3.0867e-02,
        -6.0157e-01, -4.1206e-02, -2.7601e-01,  7.5535e-01, -3.2751e-01,
        -7.7174e-01,  3.5450e-02, -7.2762e-01, -5.9349e-01, -3.9065e-01,
         1.2154e-02, -3.6372e-01,  1.4703e-01, -9.6787e-02,  9.6078e-01,
        -4.9272e-01, -1.7466e-01, -2.9873e-01,  1.0849e-02, -7.5543e-02,
        -3.0467e-01, -5.2468e-01, -1.0963e-01,  6.3623e-01,  1.8711e+00,
         3.6376e-01, -1.4272e-01,  9.3806e-01,  2.7052e-01, -2.9540e-01,
        -2.2351e-01,  1.9092e-01,  5.5159e-01, -4.8220e-03, -1.0889e+00,
        -1.9434e-01,  2.4165e-01,  5.7407e-01,  1.4525e-01, -3.8229e-02,
        -6.9065e-01,  8.5021e-02, -6.4426e-02, -4.3636e-01, -1.4968e-01,
        -4.9085e-01,  5.4887e-01, -4.7284e-01,  2.4433e-01,  1.3429e-03,
        -2.3131e-01, -6.0053e-01, -4.8296e-01, -5.5340e-01, -1.7301e-01,
        -2.5238e-02, -5.6223e-01, -6.3053e-01, -4.3893e-01, -3.6752e-01,
        -4.4010e-01,  1.2306e+00, -2.7411e-01, -7.6093e-01, -5.9045e-01,
        -6.1057e-01, -5.1970e-01, -2.4208e-03, -8.4433e-01,  3.0546e-01,
        -6.1459e-01,  3.0211e-01,  3.7980e-01,  9.5752e-01,  9.2922e-01,
        -1.3199e+00,  1.9996e-01,  2.4370e-03, -9.4416e-01, -7.0457e-02,
         4.9213e-01,  1.5967e-02, -8.7804e-01, -8.0479e-01, -8.5693e-01,
         9.4470e-02,  5.0090e-02,  4.1904e-02, -5.6214e-01, -4.4340e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([11709]), tensor(0.2117))
INFO:main.py:Create prediction_dataset
INFO:main.py:prediction_dataset first example: (tensor([-0.3505, -0.2312,  0.4450,  0.9526, -0.2216, -0.4403, -0.6644, -0.6609,
        -0.6503, -0.3320,  0.0304,  1.6942,  1.5206, -0.0300, -0.3373, -0.3382,
        -0.3751, -1.3722, -0.0408, -0.0045,  0.2581, -0.1993, -0.5185, -0.1591,
        -0.0170,  0.2624, -0.1730, -0.4084,  0.6362, -0.0852, -0.6449, -0.1710,
         0.2289,  0.2705,  0.3058, -0.2916, -0.2222, -0.4241, -0.1013, -1.1029,
        -0.1953, -0.0457, -0.1333, -0.6346, -0.2438, -0.8270,  0.0050, -0.0152,
        -0.1067,  0.2497,  1.3941,  0.5489, -0.4728, -0.3252,  0.7725, -0.2719,
        -0.4959, -0.5505, -0.0813, -0.2516, -0.0669, -0.1185, -0.2869,  0.1102,
        -0.0598, -0.3381, -0.4406, -0.3071,  1.0300,  0.1512, -0.8333, -0.5246,
        -0.0024, -0.9664,  0.6533, -0.4985,  0.3153,  0.6976, -0.0703, -0.1141,
         0.8053,  1.1246,  1.0400,  0.7864, -0.3095, -0.5982, -0.9790, -0.5474,
        -0.8092, -0.8590,  0.0152, -0.4381, -0.1283, -0.3227, -0.4434,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  1.0000,  0.0000]), tensor([1725]), tensor(-0.0882))
INFO:main.py:

Create dataloader

INFO:main.py:Create train and test dataloader
INFO:main.py:Create retrain and prediction dataloader
INFO:main.py:

Hyperparameters tuning with Ray Tune

INFO:main.py:Training data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016]
INFO:main.py:Testing data year: 2017
INFO:main.py:

            ray_results_path: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
            num_samples: 20
            max_num_epochs: 11
            num_cpus: 40
            cpus_per_trial: 2
            num_gpus: 2
            gpus_per_trial: 1
            continuous_dim: 102
            num_embeddings: 18587
            device: cuda
            
2024-07-09 09:37:31,427	INFO worker.py:1753 -- Started a local Ray instance.
2024-07-09 09:37:31,451	INFO packaging.py:530 -- Creating a file package for local directory '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src'.
2024-07-09 09:37:31,470	INFO packaging.py:358 -- Pushing file package 'gcs://_ray_pkg_c2018fb8a75b70e7.zip' (1.22MiB) to Ray cluster...
2024-07-09 09:37:31,474	INFO packaging.py:371 -- Successfully pushed file package 'gcs://_ray_pkg_c2018fb8a75b70e7.zip'.
2024-07-09 09:37:34,787	WARNING tune.py:902 -- AIR_VERBOSITY is set, ignoring passed-in ProgressReporter for now.
2024-07-09 10:05:06,011	INFO tune.py:1009 -- Wrote the latest version of all result files and experiment state to '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results/train_fnn_2024-07-09_09-37-34' in 0.0631s.
INFO:model_data_nn.py:Best trial config: {'continuous_dim': 102, 'hidden_dim': 155, 'num_layers': 4, 'num_embeddings': 18587, 'embedding_dim': 5, 'dropout_rate': 0.5290328931486485, 'lr': 0.00034166582909960413, 'weight_decay': 0.00017456626922659324, 'num_epochs': 11, 'num_gpus': 2}
INFO:model_data_nn.py:Best trial training loss: 0.035513193043687004
INFO:model_data_nn.py:Best trial testing loss: 0.022719301389459566
INFO:main.py:Ray Tune results have been saved to: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
INFO:main.py:Best trial directory: /tmp/ray/session_2024-07-09_09-37-28_595603_4024147/artifacts/2024-07-09_09-37-34/train_fnn_2024-07-09_09-37-34/driver_artifacts/train_fnn_df25c_00009_9_dropout_rate=0.5290,embedding_dim=5,hidden_dim=155,lr=0.0003,num_layers=4,weight_decay=0.0002_2024-07-09_09-37-34
INFO:main.py:

Retrain a new model with data in years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017]

            Using the optimized hyperparameters: {'continuous_dim': 102, 'hidden_dim': 155, 'num_layers': 4, 'num_embeddings': 18744, 'embedding_dim': 5, 'dropout_rate': 0.5290328931486485, 'lr': 0.00034166582909960413, 'weight_decay': 0.00017456626922659324, 'num_epochs': 11, 'num_gpus': 2}

INFO:model_data_nn.py:Epoch 1/11, metrics: {'avg_train_loss': 5.4354029467750475, 'avg_test_loss': 0.02680884548821128}
INFO:model_data_nn.py:Epoch 2/11, metrics: {'avg_train_loss': 0.03699292940978158, 'avg_test_loss': 0.026494454485006057}
INFO:model_data_nn.py:Epoch 3/11, metrics: {'avg_train_loss': 0.03566027689495855, 'avg_test_loss': 0.0253982305383453}
INFO:model_data_nn.py:Epoch 4/11, metrics: {'avg_train_loss': 0.03530635239294734, 'avg_test_loss': 0.025544253058540516}
INFO:model_data_nn.py:Epoch 5/11, metrics: {'avg_train_loss': 0.03529144097438827, 'avg_test_loss': 0.025381968052198108}
INFO:model_data_nn.py:Epoch 6/11, metrics: {'avg_train_loss': 0.03528618015268281, 'avg_test_loss': 0.025263806163237836}
INFO:model_data_nn.py:Epoch 7/11, metrics: {'avg_train_loss': 0.03527425905640893, 'avg_test_loss': 0.02526444267744246}
INFO:model_data_nn.py:Epoch 8/11, metrics: {'avg_train_loss': 0.035281836763178136, 'avg_test_loss': 0.025202152874464027}
INFO:model_data_nn.py:Epoch 9/11, metrics: {'avg_train_loss': 0.03528180925799381, 'avg_test_loss': 0.025302523269485205}
INFO:model_data_nn.py:Epoch 10/11, metrics: {'avg_train_loss': 0.035273460776637275, 'avg_test_loss': 0.02521456133884688}
INFO:model_data_nn.py:Epoch 11/11, metrics: {'avg_train_loss': 0.03527644149929725, 'avg_test_loss': 0.025107931503906656}
INFO:main.py:Making prediction for data in year: 2017
INFO:main.py:Prediction data shape: (39853,)
/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src/main.py:372: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  prediction_data['pred'] = predictions
INFO:main.py:Root Mean Squared Error for Prediction in 2018: 0.15833559782642645
INFO:main.py:Prediction Stats:                 ret          pred
count  39853.000000  39853.000000
mean      -0.012066      0.008208
std        0.157384      0.009749
min       -0.993600     -0.121151
25%       -0.078873      0.006443
50%       -0.009161      0.009951
75%        0.048276      0.012594
max        6.428011      0.125029
INFO:main.py:

Transform data

INFO:transform_data_nn.py:Train data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017]
INFO:transform_data_nn.py:Train_data: (2045978, 158)

INFO:transform_data_nn.py:Test data years: [2018]
INFO:transform_data_nn.py:Test_data: (39853, 158)

INFO:transform_data_nn.py:Retrain data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018]
INFO:transform_data_nn.py:Retrain_data: (2085831, 158)

INFO:transform_data_nn.py:Prediction data years: [2019]
INFO:transform_data_nn.py:Prediction_data: (39835, 158)

INFO:main.py:

Generate X and y with train_data and test_data

INFO:main.py:
            x_train_tf: torch.Size([2045978, 103])
            y_train_tf: torch.Size([2045978])

            x_test_tf: torch.Size([39853, 103])
            y_test_tf: torch.Size([39853])

        
INFO:main.py:

Generate X and y with retrain_data and prediction_data

INFO:main.py:
            x_retrain_tf: torch.Size([2085831, 103])
            y_retrain_tf: torch.Size([2085831])

            x_prediction_tf: torch.Size([39835, 103])
            y_prediction_tf: torch.Size([39835])

        
INFO:main.py:

Create dataset

INFO:main.py:Create train_dataset
INFO:main.py:train_dataset first example: (tensor([ 2.0861e-01,  1.2284e+00,  7.2787e-02, -9.7865e-01,  3.0867e-02,
        -6.0157e-01, -4.1206e-02, -2.7601e-01,  7.5535e-01, -3.2751e-01,
        -7.7174e-01,  3.5450e-02, -7.2762e-01, -5.9349e-01, -3.9065e-01,
         1.2154e-02, -3.6372e-01,  1.4703e-01, -9.6787e-02,  9.6078e-01,
        -4.9272e-01, -1.7466e-01, -2.9873e-01,  1.0849e-02, -7.5543e-02,
        -3.0467e-01, -5.2468e-01, -1.0963e-01,  6.3623e-01,  1.8711e+00,
         3.6376e-01, -1.4272e-01,  9.3806e-01,  2.7052e-01, -2.9540e-01,
        -2.2351e-01,  1.9092e-01,  5.5159e-01, -4.8220e-03, -1.0889e+00,
        -1.9434e-01,  2.4165e-01,  5.7407e-01,  1.4525e-01, -3.8229e-02,
        -6.9065e-01,  8.5021e-02, -6.4426e-02, -4.3636e-01, -1.4968e-01,
        -4.9085e-01,  5.4887e-01, -4.7284e-01,  2.4433e-01,  1.3429e-03,
        -2.3131e-01, -6.0053e-01, -4.8296e-01, -5.5340e-01, -1.7301e-01,
        -2.5238e-02, -5.6223e-01, -6.3053e-01, -4.3893e-01, -3.6752e-01,
        -4.4010e-01,  1.2306e+00, -2.7411e-01, -7.6093e-01, -5.9045e-01,
        -6.1057e-01, -5.1970e-01, -2.4208e-03, -8.4433e-01,  3.0546e-01,
        -6.1459e-01,  3.0211e-01,  3.7980e-01,  9.5752e-01,  9.2922e-01,
        -1.3199e+00,  1.9996e-01,  2.4370e-03, -9.4416e-01, -7.0457e-02,
         4.9213e-01,  1.5967e-02, -8.7804e-01, -8.0479e-01, -8.5693e-01,
         9.4470e-02,  5.0090e-02,  4.1904e-02, -5.6214e-01, -4.4340e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([11709]), tensor(0.2117))
INFO:main.py:Create test_dataset
INFO:main.py:test_dataset first example: (tensor([-0.3505, -0.2312,  0.4450,  0.9526, -0.2216, -0.4403, -0.6644, -0.6609,
        -0.6503, -0.3320,  0.0304,  1.6942,  1.5206, -0.0300, -0.3373, -0.3382,
        -0.3751, -1.3722, -0.0408, -0.0045,  0.2581, -0.1993, -0.5185, -0.1591,
        -0.0170,  0.2624, -0.1730, -0.4084,  0.6362, -0.0852, -0.6449, -0.1710,
         0.2289,  0.2705,  0.3058, -0.2916, -0.2222, -0.4241, -0.1013, -1.1029,
        -0.1953, -0.0457, -0.1333, -0.6346, -0.2438, -0.8270,  0.0050, -0.0152,
        -0.1067,  0.2497,  1.3941,  0.5489, -0.4728, -0.3252,  0.7725, -0.2719,
        -0.4959, -0.5505, -0.0813, -0.2516, -0.0669, -0.1185, -0.2869,  0.1102,
        -0.0598, -0.3381, -0.4406, -0.3071,  1.0300,  0.1512, -0.8333, -0.5246,
        -0.0024, -0.9664,  0.6533, -0.4985,  0.3153,  0.6976, -0.0703, -0.1141,
         0.8053,  1.1246,  1.0400,  0.7864, -0.3095, -0.5982, -0.9790, -0.5474,
        -0.8092, -0.8590,  0.0152, -0.4381, -0.1283, -0.3227, -0.4434,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  1.0000,  0.0000]), tensor([1725]), tensor(-0.0882))
INFO:main.py:Create retrain_dataset
INFO:main.py:retrain_dataset first example: (tensor([ 0.2090,  1.2357,  0.0698, -0.9872,  0.0333, -0.6015, -0.0443, -0.2777,
         0.7643, -0.3274, -0.7711,  0.0404, -0.7279, -0.5933, -0.3879,  0.0123,
        -0.3615,  0.1477, -0.1001,  0.9703, -0.4933, -0.1764, -0.3039,  0.0128,
        -0.0768, -0.3051, -0.5197, -0.1109,  0.6572,  1.8758,  0.3639, -0.1417,
         0.9413,  0.2788, -0.2895, -0.2208,  0.1939,  0.5558, -0.0033, -1.0833,
        -0.1926,  0.2431,  0.5827,  0.1435, -0.0366, -0.6881,  0.0852, -0.0631,
        -0.4346, -0.1503, -0.4944,  0.5804, -0.4733,  0.2383,  0.0032, -0.2279,
        -0.5936, -0.4841, -0.5532, -0.1725, -0.0255, -0.5623, -0.6328, -0.4376,
        -0.3693, -0.4403,  1.2355, -0.2726, -0.7658, -0.5879, -0.6088, -0.5394,
        -0.0027, -0.8423,  0.3072, -0.6019,  0.2954,  0.3822,  0.9650,  0.9408,
        -1.3217,  0.1851,  0.0023, -0.9851, -0.0689,  0.4950,  0.0305, -0.8762,
        -0.8075, -0.8533,  0.0924,  0.0539,  0.0424, -0.5655, -0.4370,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000]), tensor([11828]), tensor(0.2117))
INFO:main.py:Create prediction_dataset
INFO:main.py:prediction_dataset first example: (tensor([-0.3825, -0.1968, -0.4653,  0.9584, -0.1436, -0.3195, -0.6945, -0.6733,
        -0.6592, -0.4086, -0.1195,  1.5328,  1.7709, -0.0360, -0.3418,  0.2707,
        -0.3724,  0.5984, -0.0462,  0.1312, -0.2128,  0.9585, -0.2304, -0.4268,
        -0.0656,  0.1494, -0.2505, -0.4336,  0.6572, -0.0926, -0.8753, -0.1601,
         0.2216,  0.2788,  0.3318, -0.1968,  0.4120, -0.4304,  0.2117, -1.1283,
        -0.1935, -0.3945,  0.0297, -0.6285, -0.0575, -0.6810, -0.1717, -0.5421,
        -0.0115, -0.0680,  1.3889,  0.5804, -0.4733, -0.0635,  0.0032, -0.2599,
        -0.5174, -0.6146, -0.2835, -0.5136, -0.0971, -0.3229, -0.2581, -0.5307,
        -0.1532, -0.3201, -0.4366, -0.3534, -0.1688,  0.0346, -0.8287, -0.5440,
        -0.0027, -0.5288,  0.6263, -0.4795,  0.2885,  0.6265, -0.0929,  0.0533,
         0.6212,  0.7071,  1.0434,  0.7787, -0.1797, -0.5926, -1.1333, -0.3706,
        -0.8136, -0.8555,  0.0224, -0.3585,  0.1280, -0.2745, -0.4370,  0.0000,
         0.0000,  0.0000,  0.0000,  1.0000,  1.0000,  0.0000]), tensor([1737]), tensor(0.0675))
INFO:main.py:

Create dataloader

INFO:main.py:Create train and test dataloader
INFO:main.py:Create retrain and prediction dataloader
INFO:main.py:

Hyperparameters tuning with Ray Tune

INFO:main.py:Training data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017]
INFO:main.py:Testing data year: 2018
INFO:main.py:

            ray_results_path: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
            num_samples: 20
            max_num_epochs: 11
            num_cpus: 40
            cpus_per_trial: 2
            num_gpus: 2
            gpus_per_trial: 1
            continuous_dim: 102
            num_embeddings: 18744
            device: cuda
            
2024-07-09 13:09:40,126	INFO worker.py:1753 -- Started a local Ray instance.
2024-07-09 13:09:40,152	INFO packaging.py:530 -- Creating a file package for local directory '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src'.
2024-07-09 13:09:40,181	INFO packaging.py:358 -- Pushing file package 'gcs://_ray_pkg_c2018fb8a75b70e7.zip' (1.22MiB) to Ray cluster...
2024-07-09 13:09:40,188	INFO packaging.py:371 -- Successfully pushed file package 'gcs://_ray_pkg_c2018fb8a75b70e7.zip'.
2024-07-09 13:09:44,072	WARNING tune.py:902 -- AIR_VERBOSITY is set, ignoring passed-in ProgressReporter for now.
2024-07-09 13:36:42,267	INFO tune.py:1009 -- Wrote the latest version of all result files and experiment state to '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results/train_fnn_2024-07-09_13-09-44' in 0.2186s.
INFO:model_data_nn.py:Best trial config: {'continuous_dim': 102, 'hidden_dim': 105, 'num_layers': 3, 'num_embeddings': 18744, 'embedding_dim': 25, 'dropout_rate': 0.3346021063413328, 'lr': 0.00013311216080736887, 'weight_decay': 1.152798712823241e-06, 'num_epochs': 11, 'num_gpus': 2}
INFO:model_data_nn.py:Best trial training loss: 0.03516048435287229
INFO:model_data_nn.py:Best trial testing loss: 0.025299209847640343
INFO:main.py:Ray Tune results have been saved to: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
INFO:main.py:Best trial directory: /tmp/ray/session_2024-07-09_13-09-36_191749_4024147/artifacts/2024-07-09_13-09-44/train_fnn_2024-07-09_13-09-44/driver_artifacts/train_fnn_82646_00001_1_dropout_rate=0.3346,embedding_dim=25,hidden_dim=105,lr=0.0001,num_layers=3,weight_decay=0.0000_2024-07-09_13-09-44
INFO:main.py:

Retrain a new model with data in years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018]

            Using the optimized hyperparameters: {'continuous_dim': 102, 'hidden_dim': 105, 'num_layers': 3, 'num_embeddings': 18944, 'embedding_dim': 25, 'dropout_rate': 0.3346021063413328, 'lr': 0.00013311216080736887, 'weight_decay': 1.152798712823241e-06, 'num_epochs': 11, 'num_gpus': 2}

INFO:model_data_nn.py:Epoch 1/11, metrics: {'avg_train_loss': 10.346203922662585, 'avg_test_loss': 0.034404227313084096}
INFO:model_data_nn.py:Epoch 2/11, metrics: {'avg_train_loss': 0.03571710933071173, 'avg_test_loss': 0.0327639396314342}
INFO:model_data_nn.py:Epoch 3/11, metrics: {'avg_train_loss': 0.03548947218213474, 'avg_test_loss': 0.03270684734273415}
INFO:model_data_nn.py:Epoch 4/11, metrics: {'avg_train_loss': 0.0353463368401641, 'avg_test_loss': 0.03280372699149526}
INFO:model_data_nn.py:Epoch 5/11, metrics: {'avg_train_loss': 0.035268138565816204, 'avg_test_loss': 0.0327197526796506}
INFO:model_data_nn.py:Epoch 6/11, metrics: {'avg_train_loss': 0.03520517728246189, 'avg_test_loss': 0.03267254449952489}
INFO:model_data_nn.py:Epoch 7/11, metrics: {'avg_train_loss': 0.03515791887701816, 'avg_test_loss': 0.03316645951081927}
INFO:model_data_nn.py:Epoch 8/11, metrics: {'avg_train_loss': 0.035100538173057666, 'avg_test_loss': 0.03282115052048212}
INFO:model_data_nn.py:Epoch 9/11, metrics: {'avg_train_loss': 0.035039494922028, 'avg_test_loss': 0.032731304333234824}
INFO:model_data_nn.py:Epoch 10/11, metrics: {'avg_train_loss': 0.03501125134776402, 'avg_test_loss': 0.03270572669302615}
INFO:model_data_nn.py:Epoch 11/11, metrics: {'avg_train_loss': 0.03496988646198699, 'avg_test_loss': 0.03269153230417615}
INFO:main.py:Making prediction for data in year: 2018
INFO:main.py:Prediction data shape: (39835,)
/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src/main.py:372: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  prediction_data['pred'] = predictions
INFO:main.py:Root Mean Squared Error for Prediction in 2019: 0.18085209430900642
INFO:main.py:Prediction Stats:                 ret          pred
count  39835.000000  39835.000000
mean       0.019498      0.014647
std        0.180758      0.014078
min       -0.867110     -0.107823
25%       -0.053819      0.008997
50%        0.014925      0.011040
75%        0.079725      0.015319
max        6.842308      0.186695
INFO:main.py:

Transform data

INFO:transform_data_nn.py:Train data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018]
INFO:transform_data_nn.py:Train_data: (2085831, 158)

INFO:transform_data_nn.py:Test data years: [2019]
INFO:transform_data_nn.py:Test_data: (39835, 158)

INFO:transform_data_nn.py:Retrain data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019]
INFO:transform_data_nn.py:Retrain_data: (2125666, 158)

INFO:transform_data_nn.py:Prediction data years: [2020]
INFO:transform_data_nn.py:Prediction_data: (39849, 158)

INFO:main.py:

Generate X and y with train_data and test_data

INFO:main.py:
            x_train_tf: torch.Size([2085831, 103])
            y_train_tf: torch.Size([2085831])

            x_test_tf: torch.Size([39835, 103])
            y_test_tf: torch.Size([39835])

        
INFO:main.py:

Generate X and y with retrain_data and prediction_data

INFO:main.py:
            x_retrain_tf: torch.Size([2125666, 103])
            y_retrain_tf: torch.Size([2125666])

            x_prediction_tf: torch.Size([39849, 103])
            y_prediction_tf: torch.Size([39849])

        
INFO:main.py:

Create dataset

INFO:main.py:Create train_dataset
INFO:main.py:train_dataset first example: (tensor([ 0.2090,  1.2357,  0.0698, -0.9872,  0.0333, -0.6015, -0.0443, -0.2777,
         0.7643, -0.3274, -0.7711,  0.0404, -0.7279, -0.5933, -0.3879,  0.0123,
        -0.3615,  0.1477, -0.1001,  0.9703, -0.4933, -0.1764, -0.3039,  0.0128,
        -0.0768, -0.3051, -0.5197, -0.1109,  0.6572,  1.8758,  0.3639, -0.1417,
         0.9413,  0.2788, -0.2895, -0.2208,  0.1939,  0.5558, -0.0033, -1.0833,
        -0.1926,  0.2431,  0.5827,  0.1435, -0.0366, -0.6881,  0.0852, -0.0631,
        -0.4346, -0.1503, -0.4944,  0.5804, -0.4733,  0.2383,  0.0032, -0.2279,
        -0.5936, -0.4841, -0.5532, -0.1725, -0.0255, -0.5623, -0.6328, -0.4376,
        -0.3693, -0.4403,  1.2355, -0.2726, -0.7658, -0.5879, -0.6088, -0.5394,
        -0.0027, -0.8423,  0.3072, -0.6019,  0.2954,  0.3822,  0.9650,  0.9408,
        -1.3217,  0.1851,  0.0023, -0.9851, -0.0689,  0.4950,  0.0305, -0.8762,
        -0.8075, -0.8533,  0.0924,  0.0539,  0.0424, -0.5655, -0.4370,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000]), tensor([11828]), tensor(0.2117))
INFO:main.py:Create test_dataset
INFO:main.py:test_dataset first example: (tensor([-0.3825, -0.1968, -0.4653,  0.9584, -0.1436, -0.3195, -0.6945, -0.6733,
        -0.6592, -0.4086, -0.1195,  1.5328,  1.7709, -0.0360, -0.3418,  0.2707,
        -0.3724,  0.5984, -0.0462,  0.1312, -0.2128,  0.9585, -0.2304, -0.4268,
        -0.0656,  0.1494, -0.2505, -0.4336,  0.6572, -0.0926, -0.8753, -0.1601,
         0.2216,  0.2788,  0.3318, -0.1968,  0.4120, -0.4304,  0.2117, -1.1283,
        -0.1935, -0.3945,  0.0297, -0.6285, -0.0575, -0.6810, -0.1717, -0.5421,
        -0.0115, -0.0680,  1.3889,  0.5804, -0.4733, -0.0635,  0.0032, -0.2599,
        -0.5174, -0.6146, -0.2835, -0.5136, -0.0971, -0.3229, -0.2581, -0.5307,
        -0.1532, -0.3201, -0.4366, -0.3534, -0.1688,  0.0346, -0.8287, -0.5440,
        -0.0027, -0.5288,  0.6263, -0.4795,  0.2885,  0.6265, -0.0929,  0.0533,
         0.6212,  0.7071,  1.0434,  0.7787, -0.1797, -0.5926, -1.1333, -0.3706,
        -0.8136, -0.8555,  0.0224, -0.3585,  0.1280, -0.2745, -0.4370,  0.0000,
         0.0000,  0.0000,  0.0000,  1.0000,  1.0000,  0.0000]), tensor([1737]), tensor(0.0675))
INFO:main.py:Create retrain_dataset
INFO:main.py:retrain_dataset first example: (tensor([ 0.2096,  1.2419,  0.0664, -0.9952,  0.0342, -0.6022, -0.0492, -0.2808,
         0.7705, -0.3275, -0.7700,  0.0450, -0.7249, -0.5895, -0.3839,  0.0123,
        -0.3599,  0.1483, -0.1012,  0.9784, -0.4935, -0.1743, -0.3026,  0.0153,
        -0.0889, -0.3056, -0.5122, -0.1134,  0.5038,  1.8726,  0.3639, -0.1417,
         0.9426,  0.2943, -0.2838, -0.2190,  0.1962,  0.5589, -0.0028, -1.0781,
        -0.1910,  0.2565,  0.5899,  0.1369, -0.0353, -0.6869,  0.0921, -0.0622,
        -0.4368, -0.1459, -0.4976,  0.6519, -0.4734,  0.2234,  0.0060, -0.2248,
        -0.5868, -0.4837, -0.5530, -0.1721, -0.0248, -0.5622, -0.6352, -0.4367,
        -0.3721, -0.4393,  1.2312, -0.2702, -0.7711, -0.5821, -0.6046, -0.5415,
        -0.0032, -0.8417,  0.3092, -0.5957,  0.2936,  0.3845,  0.9718,  0.9582,
        -1.3208,  0.1583,  0.0021, -0.9994, -0.0687,  0.4908,  0.0441, -0.8686,
        -0.8081, -0.8504,  0.0912,  0.0571,  0.0438, -0.5673, -0.4295,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000]), tensor([11951]), tensor(0.2117))
INFO:main.py:Create prediction_dataset
INFO:main.py:prediction_dataset first example: (tensor([-0.7259,  0.0948,  0.2878,  0.9780, -0.1946, -0.5960, -1.0026, -0.7882,
        -0.6721, -0.4658,  0.1818,  1.8523,  1.9194, -0.0511, -0.3261,  0.0592,
        -0.3541,  0.1820, -0.7343,  0.0029, -0.0208,  2.0983, -0.3070,  0.1049,
        -0.0809,  0.1529, -0.2353, -0.4902,  0.7090, -0.1251,  1.7843, -0.0929,
         0.2502,  0.2943,  0.2522, -0.2963, -0.1719, -0.4215, -0.0635, -1.0913,
        -0.1920,  0.1133, -0.0764, -0.6272, -0.4093, -0.8245,  0.2719, -0.0676,
        -0.2852,  0.2689,  1.3845,  0.6519, -0.4734, -0.3451,  0.7811, -0.2771,
        -0.5397, -0.6004, -0.1174, -0.1650, -0.1110, -0.1959, -0.1776, -0.0847,
        -0.1225, -0.2892, -0.2285, -0.3368,  1.0199,  0.0048, -0.8211, -0.5460,
        -0.0032, -0.9461,  0.6783, -0.4877,  0.3124,  0.5110, -0.0709,  0.3170,
         0.4100,  0.6361,  1.0466,  0.7721, -0.2515, -0.5998, -1.1517, -0.1913,
        -0.8150, -0.8530,  0.0354, -0.5560, -0.1580, -0.1156, -0.4295,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  1.0000,  0.0000]), tensor([1723]), tensor(-0.1000))
INFO:main.py:

Create dataloader

INFO:main.py:Create train and test dataloader
INFO:main.py:Create retrain and prediction dataloader
INFO:main.py:

Hyperparameters tuning with Ray Tune

INFO:main.py:Training data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018]
INFO:main.py:Testing data year: 2019
INFO:main.py:

            ray_results_path: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
            num_samples: 20
            max_num_epochs: 11
            num_cpus: 40
            cpus_per_trial: 2
            num_gpus: 2
            gpus_per_trial: 1
            continuous_dim: 102
            num_embeddings: 18944
            device: cuda
            
2024-07-09 16:41:45,123	INFO worker.py:1753 -- Started a local Ray instance.
2024-07-09 16:41:45,148	INFO packaging.py:530 -- Creating a file package for local directory '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src'.
2024-07-09 16:41:45,169	INFO packaging.py:358 -- Pushing file package 'gcs://_ray_pkg_c2018fb8a75b70e7.zip' (1.22MiB) to Ray cluster...
2024-07-09 16:41:45,174	INFO packaging.py:371 -- Successfully pushed file package 'gcs://_ray_pkg_c2018fb8a75b70e7.zip'.
2024-07-09 16:41:48,532	WARNING tune.py:902 -- AIR_VERBOSITY is set, ignoring passed-in ProgressReporter for now.
2024-07-09 17:11:05,678	INFO tune.py:1009 -- Wrote the latest version of all result files and experiment state to '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results/train_fnn_2024-07-09_16-41-48' in 0.0432s.
INFO:model_data_nn.py:Best trial config: {'continuous_dim': 102, 'hidden_dim': 155, 'num_layers': 4, 'num_embeddings': 18944, 'embedding_dim': 5, 'dropout_rate': 0.5290328931486485, 'lr': 0.00034166582909960413, 'weight_decay': 0.00017456626922659324, 'num_epochs': 11, 'num_gpus': 2}
INFO:model_data_nn.py:Best trial training loss: 0.03507623785572235
INFO:model_data_nn.py:Best trial testing loss: 0.03262181441562298
INFO:main.py:Ray Tune results have been saved to: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
INFO:main.py:Best trial directory: /tmp/ray/session_2024-07-09_16-41-42_423235_4024147/artifacts/2024-07-09_16-41-48/train_fnn_2024-07-09_16-41-48/driver_artifacts/train_fnn_22c30_00009_9_dropout_rate=0.5290,embedding_dim=5,hidden_dim=155,lr=0.0003,num_layers=4,weight_decay=0.0002_2024-07-09_16-41-48
INFO:main.py:

Retrain a new model with data in years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019]

            Using the optimized hyperparameters: {'continuous_dim': 102, 'hidden_dim': 155, 'num_layers': 4, 'num_embeddings': 19159, 'embedding_dim': 5, 'dropout_rate': 0.5290328931486485, 'lr': 0.00034166582909960413, 'weight_decay': 0.00017456626922659324, 'num_epochs': 11, 'num_gpus': 2}

INFO:model_data_nn.py:Epoch 1/11, metrics: {'avg_train_loss': 5.093949380942539, 'avg_test_loss': 0.07882092119409488}
INFO:model_data_nn.py:Epoch 2/11, metrics: {'avg_train_loss': 0.036806665022896964, 'avg_test_loss': 0.07916798248576622}
INFO:model_data_nn.py:Epoch 3/11, metrics: {'avg_train_loss': 0.03535658725089194, 'avg_test_loss': 0.07916514415484972}
INFO:model_data_nn.py:Epoch 4/11, metrics: {'avg_train_loss': 0.03507402581007979, 'avg_test_loss': 0.07888431357554136}
INFO:model_data_nn.py:Epoch 5/11, metrics: {'avg_train_loss': 0.0350660378944895, 'avg_test_loss': 0.07956009825022939}
INFO:model_data_nn.py:Epoch 6/11, metrics: {'avg_train_loss': 0.035058978014030746, 'avg_test_loss': 0.07936533541084291}
INFO:model_data_nn.py:Epoch 7/11, metrics: {'avg_train_loss': 0.035057555807409865, 'avg_test_loss': 0.07908143919223967}
INFO:model_data_nn.py:Epoch 8/11, metrics: {'avg_train_loss': 0.03506665412766809, 'avg_test_loss': 0.07882935692293522}
INFO:model_data_nn.py:Epoch 9/11, metrics: {'avg_train_loss': 0.03506820266476432, 'avg_test_loss': 0.07932281937712851}
INFO:model_data_nn.py:Epoch 10/11, metrics: {'avg_train_loss': 0.035056605312420566, 'avg_test_loss': 0.07857973124378194}
INFO:model_data_nn.py:Epoch 11/11, metrics: {'avg_train_loss': 0.03505190663436259, 'avg_test_loss': 0.07920379671626367}
INFO:main.py:Making prediction for data in year: 2019
INFO:main.py:Prediction data shape: (39849,)
/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src/main.py:372: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  prediction_data['pred'] = predictions
INFO:main.py:Root Mean Squared Error for Prediction in 2020: 0.2815460194072926
INFO:main.py:Prediction Stats:                 ret          pred
count  39849.000000  39849.000000
mean       0.033059      0.008996
std        0.281359      0.010225
min       -0.889030     -0.041899
25%       -0.082251      0.005439
50%        0.009434      0.007660
75%        0.110778      0.010047
max       14.458016      0.221602
╭──────────────────────────────────────────────────────────────────╮
│ Configuration for experiment     train_fnn_2024-07-08_23-28-48   │
├──────────────────────────────────────────────────────────────────┤
│ Search algorithm                 BasicVariantGenerator           │
│ Scheduler                        AsyncHyperBandScheduler         │
│ Number of trials                 20                              │
╰──────────────────────────────────────────────────────────────────╯

View detailed results here: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results/train_fnn_2024-07-08_23-28-48
To visualize your results with TensorBoard, run: `tensorboard --logdir /tmp/ray/session_2024-07-08_23-28-42_518706_4024147/artifacts/2024-07-08_23-28-48/train_fnn_2024-07-08_23-28-48/driver_artifacts`

╭──────────────────────────────────────────────────────────────────╮
│ Configuration for experiment     train_fnn_2024-07-09_02-54-03   │
├──────────────────────────────────────────────────────────────────┤
│ Search algorithm                 BasicVariantGenerator           │
│ Scheduler                        AsyncHyperBandScheduler         │
│ Number of trials                 20                              │
╰──────────────────────────────────────────────────────────────────╯

View detailed results here: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results/train_fnn_2024-07-09_02-54-03
To visualize your results with TensorBoard, run: `tensorboard --logdir /tmp/ray/session_2024-07-09_02-53-55_753286_4024147/artifacts/2024-07-09_02-54-03/train_fnn_2024-07-09_02-54-03/driver_artifacts`

╭──────────────────────────────────────────────────────────────────╮
│ Configuration for experiment     train_fnn_2024-07-09_06-13-04   │
├──────────────────────────────────────────────────────────────────┤
│ Search algorithm                 BasicVariantGenerator           │
│ Scheduler                        AsyncHyperBandScheduler         │
│ Number of trials                 20                              │
╰──────────────────────────────────────────────────────────────────╯

View detailed results here: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results/train_fnn_2024-07-09_06-13-04
To visualize your results with TensorBoard, run: `tensorboard --logdir /tmp/ray/session_2024-07-09_06-12-48_410038_4024147/artifacts/2024-07-09_06-13-04/train_fnn_2024-07-09_06-13-04/driver_artifacts`

╭──────────────────────────────────────────────────────────────────╮
│ Configuration for experiment     train_fnn_2024-07-09_09-37-34   │
├──────────────────────────────────────────────────────────────────┤
│ Search algorithm                 BasicVariantGenerator           │
│ Scheduler                        AsyncHyperBandScheduler         │
│ Number of trials                 20                              │
╰──────────────────────────────────────────────────────────────────╯

View detailed results here: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results/train_fnn_2024-07-09_09-37-34
To visualize your results with TensorBoard, run: `tensorboard --logdir /tmp/ray/session_2024-07-09_09-37-28_595603_4024147/artifacts/2024-07-09_09-37-34/train_fnn_2024-07-09_09-37-34/driver_artifacts`

╭──────────────────────────────────────────────────────────────────╮
│ Configuration for experiment     train_fnn_2024-07-09_13-09-44   │
├──────────────────────────────────────────────────────────────────┤
│ Search algorithm                 BasicVariantGenerator           │
│ Scheduler                        AsyncHyperBandScheduler         │
│ Number of trials                 20                              │
╰──────────────────────────────────────────────────────────────────╯

View detailed results here: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results/train_fnn_2024-07-09_13-09-44
To visualize your results with TensorBoard, run: `tensorboard --logdir /tmp/ray/session_2024-07-09_13-09-36_191749_4024147/artifacts/2024-07-09_13-09-44/train_fnn_2024-07-09_13-09-44/driver_artifacts`

╭──────────────────────────────────────────────────────────────────╮
│ Configuration for experiment     train_fnn_2024-07-09_16-41-48   │
├──────────────────────────────────────────────────────────────────┤
│ Search algorithm                 BasicVariantGenerator           │
│ Scheduler                        AsyncHyperBandScheduler         │
│ Number of trials                 20                              │
╰──────────────────────────────────────────────────────────────────╯

View detailed results here: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results/train_fnn_2024-07-09_16-41-48
To visualize your results with TensorBoard, run: `tensorboard --logdir /tmp/ray/session_2024-07-09_16-41-42_423235_4024147/artifacts/2024-07-09_16-41-48/train_fnn_2024-07-09_16-41-48/driver_artifacts`

