Current working directory
/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin
source venv/bin/activate
which python3
/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/venv/bin/python3
Intel(R) Extension for Scikit-learn* enabled (https://github.com/intel/scikit-learn-intelex)
Intel(R) Extension for Scikit-learn* enabled (https://github.com/intel/scikit-learn-intelex)
INFO:preprocess_data_nn.py:

Loading and preprocessing data...

DEBUG:preprocess_data_nn.py:      date  permno
0  1980-01   10006
1  1980-01   10057
2  1980-01   10103
3  1980-01   10137
4  1980-01   10145
DEBUG:preprocess_data_nn.py:--------------------------------------------------
INFO:main.py:preprocessed df: (2216189, 158)
INFO:preprocess_data_nn.py:

Applying secondary data preprocessing..

INFO:main.py:secondary preprocessed df: (2165515, 158)
INFO:main.py:df sample:    permno  gvkey   adatadate  fyear  sic2     spi       mve_f  ...     zerotrade      beta    betasq      rsq1  pricedelay   idiovol  pyear
0   10006   1010  12/31/1978   1978    37  0.0000  269.308500  ...  1.115306e-07  1.060420  1.124491  0.343408    0.029859  0.025576   1980
1   10057   1098  09/30/1978   1978    36  0.0000   97.372000  ...  6.199128e-08  1.526013  2.328716  0.307905    0.092667  0.037473   1980
2   10103   1012  10/31/1978   1978    33     NaN    1.697500  ...           NaN  1.759493  3.095816  0.096753    0.221851  0.087020   1980
3   10137   1279  12/31/1978   1978    49     NaN  537.524500  ...  9.726790e-08  0.492885  0.242936  0.189693    0.125777  0.017540   1980
4   10145   1300  12/31/1978   1978    99 -0.0031  805.633282  ...  6.190654e-08  1.139163  1.297691  0.279437    0.024228  0.031201   1980

[5 rows x 158 columns]
INFO:main.py:Train year start: 1980
INFO:main.py:Prediction data years: [1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020]
INFO:main.py:

Loop through all the prediction years and build optimized model for each year

INFO:main.py:

Transform data

INFO:transform_data_nn.py:Train data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992]
INFO:transform_data_nn.py:Train_data: (671457, 158)

INFO:transform_data_nn.py:Test data years: [1993]
INFO:transform_data_nn.py:Test_data: (56408, 158)

INFO:transform_data_nn.py:Retrain data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993]
INFO:transform_data_nn.py:Retrain_data: (727865, 158)

INFO:transform_data_nn.py:Prediction data years: [1994]
INFO:transform_data_nn.py:Prediction_data: (62902, 158)

INFO:main.py:

Generate X and y with train_data and test_data

INFO:main.py:
            x_train_tf: torch.Size([671457, 103])
            y_train_tf: torch.Size([671457])

            x_test_tf: torch.Size([56408, 103])
            y_test_tf: torch.Size([56408])

        
INFO:main.py:

Generate X and y with retrain_data and prediction_data

INFO:main.py:
            x_retrain_tf: torch.Size([727865, 103])
            y_retrain_tf: torch.Size([727865])

            x_prediction_tf: torch.Size([62902, 103])
            y_prediction_tf: torch.Size([62902])

        
INFO:main.py:

Create dataset

INFO:main.py:Create train_dataset
INFO:main.py:train_dataset first example: (tensor([ 0.2078,  0.7333,  0.1573, -0.7337,  0.0577, -0.5400, -0.0377, -0.2726,
         0.4854, -0.1865, -0.8303, -0.0736, -0.6418, -0.3871, -0.2554, -0.0227,
        -0.3972,  0.0728, -0.2341,  0.7049, -0.5322, -0.1822, -0.1778,  0.0134,
        -0.0452, -0.2705, -0.6090, -0.0213,  0.6128,  1.3675,  0.4996, -0.1370,
         0.7980,  0.1452, -0.4583, -0.2330,  0.1987,  0.2166,  0.0357, -1.1217,
        -0.2206,  0.2220,  0.3813,  0.1725, -0.0467, -0.6501,  0.0715, -0.0717,
        -0.5253, -0.1680, -0.2810,  0.4985, -0.4854,  0.1706,  0.0213, -0.3318,
        -0.9114, -0.5725, -0.5662, -0.2007, -0.0128, -0.5653, -0.6919, -0.4561,
        -0.3344, -0.5311,  0.5711, -0.2821, -0.3793, -0.5567, -0.6736, -0.3316,
         0.0108, -0.7880,  0.1939, -0.8824,  0.3043,  0.3412,  0.7506,  0.6789,
        -1.1236,  0.2439, -0.0022, -0.1117, -0.0902,  0.1913, -0.4094, -0.7722,
        -0.6475, -0.7395,  0.1509, -0.1786,  0.0153, -0.3679, -0.6335,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000]), tensor([2018]), tensor(0.2117))
INFO:main.py:Create test_dataset
INFO:main.py:test_dataset first example: (tensor([-2.7144e-01, -9.2483e-01,  5.6547e+00,  2.5692e-01, -4.3142e-02,
        -5.1112e-01, -2.0646e+00, -1.0188e+00, -2.8036e-01, -6.2462e-01,
        -5.1290e-01, -1.0026e-01, -6.4180e-01,  1.6266e-01, -4.1062e-01,
        -7.0843e-01, -4.0105e-01,  7.3343e-01,  2.3100e-01,  4.7488e-01,
         8.1031e-01, -1.2827e-01, -2.3397e-01, -1.9036e-01,  4.9697e-01,
        -8.6960e-01, -7.0497e-01, -7.7275e-01, -1.1698e+00,  8.9525e-01,
        -4.1271e-02, -2.5388e-01,  2.6517e-01,  1.4524e-01, -8.1531e-01,
        -4.0476e-01,  5.5147e-01, -8.3431e-01,  4.1462e-01, -1.0027e+00,
        -9.1566e-02, -1.8816e-01,  5.8454e-01, -2.7571e-01, -6.4535e-02,
        -5.0350e-01, -2.3349e-01, -1.7237e-01,  3.3159e-01,  5.2000e-01,
        -2.8096e-01,  4.0967e-01, -4.8540e-01, -8.9542e-01, -8.3853e-01,
        -7.0856e-01,  2.2886e-02, -6.3633e-01, -1.0632e+00, -2.3650e-03,
        -1.6542e-01, -9.1405e-01, -1.4759e+00,  2.6516e-01, -2.6962e-02,
        -1.1788e+00, -7.6745e-01,  1.1609e+00,  2.5361e-01, -6.6775e-01,
        -1.1665e-02, -1.3998e-02,  1.0789e-02, -4.4624e-01, -4.0712e-01,
         2.6581e-01, -3.5837e-01,  2.4606e-01, -5.9469e-01,  6.7894e-01,
         8.8072e-01,  1.2181e+00, -2.1632e-03, -2.1594e-01, -4.1166e-01,
        -2.8467e-01, -2.5763e-01, -7.0113e-01, -5.5708e-01, -6.3792e-01,
        -2.5600e-02, -2.1565e-01, -6.0568e-02, -6.9211e-01,  1.8173e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([2705]), tensor(0.))
INFO:main.py:Create retrain_dataset
INFO:main.py:retrain_dataset first example: (tensor([ 2.0946e-01,  7.8521e-01,  1.3368e-01, -7.5090e-01,  5.7200e-02,
        -5.4335e-01, -4.0595e-02, -2.7607e-01,  5.0272e-01, -1.9426e-01,
        -8.2161e-01, -6.9950e-02, -6.5038e-01, -4.0323e-01, -2.4948e-01,
        -2.1829e-02, -3.9665e-01,  7.3386e-02, -1.9962e-01,  7.2082e-01,
        -5.3842e-01, -1.4689e-01, -1.8716e-01,  8.6186e-03, -4.8425e-02,
        -2.7564e-01, -6.0669e-01, -1.8244e-02,  6.1847e-01,  1.4066e+00,
         4.7914e-01, -1.4131e-01,  8.1592e-01,  1.5764e-01, -4.5354e-01,
        -2.2535e-01,  2.0464e-01,  2.2237e-01,  3.4247e-02, -1.1172e+00,
        -2.2417e-01,  2.0245e-01,  3.9467e-01,  1.7378e-01, -4.0732e-02,
        -6.5819e-01,  6.0290e-02, -7.5285e-02, -5.2240e-01, -1.8040e-01,
        -3.0286e-01,  5.0708e-01, -4.8354e-01,  1.9025e-01,  1.3736e-02,
        -3.2677e-01, -9.0577e-01, -5.8501e-01, -5.5478e-01, -1.9905e-01,
        -1.4960e-02, -5.5125e-01, -6.9279e-01, -4.5711e-01, -3.3632e-01,
        -5.3222e-01,  6.2952e-01, -2.8707e-01, -4.2254e-01, -5.5768e-01,
        -6.7665e-01, -3.2336e-01,  7.8541e-03, -7.9246e-01,  2.0260e-01,
        -8.6929e-01,  3.0447e-01,  3.4345e-01,  7.6309e-01,  6.8605e-01,
        -1.1366e+00,  2.3470e-01, -1.2408e-03, -1.0388e-01, -8.4946e-02,
         2.0421e-01, -4.0514e-01, -7.7921e-01, -6.3440e-01, -7.4012e-01,
         1.4384e-01, -1.6469e-01,  1.6398e-02, -3.8184e-01, -6.2260e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([2135]), tensor(0.2117))
INFO:main.py:Create prediction_dataset
INFO:main.py:prediction_dataset first example: (tensor([-1.0455e+00, -2.7298e-01,  5.5237e+00,  5.4998e-01,  2.1153e-01,
        -4.4073e-01, -2.1541e+00, -9.8516e-01, -4.9634e-01, -2.5323e-01,
        -4.7828e-01, -5.0779e-02, -2.5329e-01,  1.2606e-02, -1.8934e-01,
         3.2061e-02, -3.6268e-01,  8.2152e-02, -1.9962e-01,  4.2952e-03,
        -2.6589e-01, -1.6748e-01, -9.2002e-02, -1.0599e+00, -5.7838e-01,
        -6.1173e-01, -6.4213e-01, -6.0629e-01, -8.0627e-01,  5.3371e-01,
         1.1316e-01, -1.6460e-01,  3.1472e-01,  1.5764e-01, -7.0932e-01,
         1.3750e-01,  5.6141e-01, -8.3940e-01, -1.2913e-01, -9.4993e-01,
        -1.2877e-01, -1.3852e-01,  4.2372e-01, -3.0154e-01,  8.3751e-02,
        -1.7456e-01,  1.8190e-01,  5.3215e-01,  3.4722e-01, -6.6146e-02,
        -3.0286e-01,  5.0708e-01, -4.8354e-01, -8.2693e-01, -8.3152e-01,
        -5.7766e-01,  2.3084e-02, -3.9221e-01,  9.4254e-01,  1.1163e-01,
         3.9848e-01,  8.7524e-01, -4.0531e-01, -1.3693e+00, -2.6467e-02,
        -3.9310e-01, -5.6171e-01, -1.0159e+00,  1.4449e+00, -4.3931e-01,
        -6.4183e-03, -2.3388e-02,  7.8541e-03, -1.2484e-01, -5.5878e-01,
         3.1352e-01, -5.8590e-01,  3.3227e-01, -8.8433e-02,  6.8605e-01,
         8.7788e-01,  1.2300e+00, -1.2408e-03, -2.6793e-01, -6.8790e-03,
        -3.7939e-01,  1.3581e+00,  8.4850e-01, -4.9512e-01, -5.8061e-01,
        -8.2514e-02, -3.2878e-01, -1.4678e-01, -4.6850e-01,  9.0492e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([3204]), tensor(-0.0476))
INFO:main.py:

Create dataloader

INFO:main.py:Create train and test dataloader
INFO:main.py:Create retrain and prediction dataloader
INFO:main.py:

Hyperparameters tuning with Ray Tune

INFO:main.py:Training data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992]
INFO:main.py:Testing data year: 1993
INFO:main.py:

            ray_results_path: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
            num_samples: 60
            max_num_epochs: 20
            num_cpus: 60
            cpus_per_trial: 1
            num_gpus: 2
            gpus_per_trial: 0
            continuous_dim: 102
            num_embeddings: 9315
            device: cuda
            
2024-07-04 20:12:55,411	INFO worker.py:1753 -- Started a local Ray instance.
2024-07-04 20:12:55,482	INFO packaging.py:530 -- Creating a file package for local directory '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src'.
2024-07-04 20:12:55,503	INFO packaging.py:358 -- Pushing file package 'gcs://_ray_pkg_3935e91dc5487a1d.zip' (1.20MiB) to Ray cluster...
2024-07-04 20:12:55,508	INFO packaging.py:371 -- Successfully pushed file package 'gcs://_ray_pkg_3935e91dc5487a1d.zip'.
2024-07-04 20:12:58,586	WARNING tune.py:902 -- AIR_VERBOSITY is set, ignoring passed-in ProgressReporter for now.
2024-07-04 20:28:47,225	INFO tune.py:1009 -- Wrote the latest version of all result files and experiment state to '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results/train_fnn_2024-07-04_20-12-58' in 0.1418s.
INFO:model_data_nn.py:Best trial config: {'continuous_dim': 102, 'hidden_dim': 65, 'num_layers': 3, 'num_embeddings': 9315, 'embedding_dim': 5, 'dropout_rate': 0.27180818453385097, 'lr': 0.00011948354480999256, 'weight_decay': 6.430385379260095e-06, 'num_epochs': 20, 'num_gpus': 2}
INFO:model_data_nn.py:Best trial training loss: 0.03238894646753689
INFO:model_data_nn.py:Best trial testing loss: 0.03818266163421732
INFO:main.py:Ray Tune results have been saved to: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
INFO:main.py:Best trial directory: /tmp/ray/session_2024-07-04_20-12-51_825324_736015/artifacts/2024-07-04_20-12-58/train_fnn_2024-07-04_20-12-58/driver_artifacts/train_fnn_7afa3_00020_20_dropout_rate=0.2718,embedding_dim=5,hidden_dim=65,lr=0.0001,num_layers=3,weight_decay=0.0000_2024-07-04_20-12-58
INFO:main.py:

Retrain a new model with data in years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993]

            Using the optimized hyperparameters: {'continuous_dim': 102, 'hidden_dim': 65, 'num_layers': 3, 'num_embeddings': 9882, 'embedding_dim': 5, 'dropout_rate': 0.27180818453385097, 'lr': 0.00011948354480999256, 'weight_decay': 6.430385379260095e-06, 'num_epochs': 20, 'num_gpus': 2}

INFO:model_data_nn.py:Epoch 1/20, metrics: {'avg_train_loss': 16.332664746642426, 'avg_test_loss': 0.43040842026835535}
INFO:model_data_nn.py:Epoch 2/20, metrics: {'avg_train_loss': 0.2098563267013046, 'avg_test_loss': 0.026885980036965292}
INFO:model_data_nn.py:Epoch 3/20, metrics: {'avg_train_loss': 0.03355844148863923, 'avg_test_loss': 0.025959837056385975}
INFO:model_data_nn.py:Epoch 4/20, metrics: {'avg_train_loss': 0.033445790166034314, 'avg_test_loss': 0.025970151469989763}
INFO:model_data_nn.py:Epoch 5/20, metrics: {'avg_train_loss': 0.03335595549385079, 'avg_test_loss': 0.025652784407441693}
INFO:model_data_nn.py:Epoch 6/20, metrics: {'avg_train_loss': 0.033264282307713174, 'avg_test_loss': 0.0256437255444414}
INFO:model_data_nn.py:Epoch 7/20, metrics: {'avg_train_loss': 0.03319233455908923, 'avg_test_loss': 0.02562461789542188}
INFO:model_data_nn.py:Epoch 8/20, metrics: {'avg_train_loss': 0.03314253537851288, 'avg_test_loss': 0.02555379937156823}
INFO:model_data_nn.py:Epoch 9/20, metrics: {'avg_train_loss': 0.033091202044523156, 'avg_test_loss': 0.02541318280069627}
INFO:model_data_nn.py:Epoch 10/20, metrics: {'avg_train_loss': 0.033081951491201946, 'avg_test_loss': 0.025786042838107523}
INFO:model_data_nn.py:Epoch 11/20, metrics: {'avg_train_loss': 0.033027332479008756, 'avg_test_loss': 0.02550473991815546}
INFO:model_data_nn.py:Epoch 12/20, metrics: {'avg_train_loss': 0.03300676054313205, 'avg_test_loss': 0.025558356527897824}
INFO:model_data_nn.py:Epoch 13/20, metrics: {'avg_train_loss': 0.032978528370667747, 'avg_test_loss': 0.025654248915029675}
INFO:model_data_nn.py:Epoch 14/20, metrics: {'avg_train_loss': 0.03295030855873892, 'avg_test_loss': 0.025584180826109235}
INFO:model_data_nn.py:Epoch 15/20, metrics: {'avg_train_loss': 0.03292934625803067, 'avg_test_loss': 0.025534011655471978}
INFO:model_data_nn.py:Epoch 16/20, metrics: {'avg_train_loss': 0.03292642718979197, 'avg_test_loss': 0.02536462587342272}
INFO:model_data_nn.py:Epoch 17/20, metrics: {'avg_train_loss': 0.03292040831516005, 'avg_test_loss': 0.025494356827083522}
INFO:model_data_nn.py:Epoch 18/20, metrics: {'avg_train_loss': 0.0328887580241009, 'avg_test_loss': 0.025288996134309204}
INFO:model_data_nn.py:Epoch 19/20, metrics: {'avg_train_loss': 0.032874201846929504, 'avg_test_loss': 0.025229358204216432}
INFO:model_data_nn.py:Epoch 20/20, metrics: {'avg_train_loss': 0.03285168297768965, 'avg_test_loss': 0.02534748594715767}
INFO:main.py:Making prediction for data in year: 1993
INFO:main.py:Prediction data shape: (62902,)
/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src/main.py:372: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  prediction_data['pred'] = predictions
INFO:main.py:Root Mean Squared Error for Prediction in 1994: 0.15908450062041143
INFO:main.py:Prediction Stats:                 ret          pred
count  62902.000000  62902.000000
mean      -0.003275      0.009573
std        0.159756      0.014832
min       -0.937500     -0.135269
25%       -0.072000      0.004403
50%       -0.006231      0.009308
75%        0.053333      0.015053
max       12.500000      0.196275
INFO:main.py:

Transform data

INFO:transform_data_nn.py:Train data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993]
INFO:transform_data_nn.py:Train_data: (727865, 158)

INFO:transform_data_nn.py:Test data years: [1994]
INFO:transform_data_nn.py:Test_data: (62902, 158)

INFO:transform_data_nn.py:Retrain data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994]
INFO:transform_data_nn.py:Retrain_data: (790767, 158)

INFO:transform_data_nn.py:Prediction data years: [1995]
INFO:transform_data_nn.py:Prediction_data: (70120, 158)

INFO:main.py:

Generate X and y with train_data and test_data

INFO:main.py:
            x_train_tf: torch.Size([727865, 103])
            y_train_tf: torch.Size([727865])

            x_test_tf: torch.Size([62902, 103])
            y_test_tf: torch.Size([62902])

        
INFO:main.py:

Generate X and y with retrain_data and prediction_data

INFO:main.py:
            x_retrain_tf: torch.Size([790767, 103])
            y_retrain_tf: torch.Size([790767])

            x_prediction_tf: torch.Size([70120, 103])
            y_prediction_tf: torch.Size([70120])

        
INFO:main.py:

Create dataset

INFO:main.py:Create train_dataset
INFO:main.py:train_dataset first example: (tensor([ 2.0946e-01,  7.8521e-01,  1.3368e-01, -7.5090e-01,  5.7200e-02,
        -5.4335e-01, -4.0595e-02, -2.7607e-01,  5.0272e-01, -1.9426e-01,
        -8.2161e-01, -6.9950e-02, -6.5038e-01, -4.0323e-01, -2.4948e-01,
        -2.1829e-02, -3.9665e-01,  7.3386e-02, -1.9962e-01,  7.2082e-01,
        -5.3842e-01, -1.4689e-01, -1.8716e-01,  8.6186e-03, -4.8425e-02,
        -2.7564e-01, -6.0669e-01, -1.8244e-02,  6.1847e-01,  1.4066e+00,
         4.7914e-01, -1.4131e-01,  8.1592e-01,  1.5764e-01, -4.5354e-01,
        -2.2535e-01,  2.0464e-01,  2.2237e-01,  3.4247e-02, -1.1172e+00,
        -2.2417e-01,  2.0245e-01,  3.9467e-01,  1.7378e-01, -4.0732e-02,
        -6.5819e-01,  6.0290e-02, -7.5285e-02, -5.2240e-01, -1.8040e-01,
        -3.0286e-01,  5.0708e-01, -4.8354e-01,  1.9025e-01,  1.3736e-02,
        -3.2677e-01, -9.0577e-01, -5.8501e-01, -5.5478e-01, -1.9905e-01,
        -1.4960e-02, -5.5125e-01, -6.9279e-01, -4.5711e-01, -3.3632e-01,
        -5.3222e-01,  6.2952e-01, -2.8707e-01, -4.2254e-01, -5.5768e-01,
        -6.7665e-01, -3.2336e-01,  7.8541e-03, -7.9246e-01,  2.0260e-01,
        -8.6929e-01,  3.0447e-01,  3.4345e-01,  7.6309e-01,  6.8605e-01,
        -1.1366e+00,  2.3470e-01, -1.2408e-03, -1.0388e-01, -8.4946e-02,
         2.0421e-01, -4.0514e-01, -7.7921e-01, -6.3440e-01, -7.4012e-01,
         1.4384e-01, -1.6469e-01,  1.6398e-02, -3.8184e-01, -6.2260e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([2135]), tensor(0.2117))
INFO:main.py:Create test_dataset
INFO:main.py:test_dataset first example: (tensor([-1.0455e+00, -2.7298e-01,  5.5237e+00,  5.4998e-01,  2.1153e-01,
        -4.4073e-01, -2.1541e+00, -9.8516e-01, -4.9634e-01, -2.5323e-01,
        -4.7828e-01, -5.0779e-02, -2.5329e-01,  1.2606e-02, -1.8934e-01,
         3.2061e-02, -3.6268e-01,  8.2152e-02, -1.9962e-01,  4.2952e-03,
        -2.6589e-01, -1.6748e-01, -9.2002e-02, -1.0599e+00, -5.7838e-01,
        -6.1173e-01, -6.4213e-01, -6.0629e-01, -8.0627e-01,  5.3371e-01,
         1.1316e-01, -1.6460e-01,  3.1472e-01,  1.5764e-01, -7.0932e-01,
         1.3750e-01,  5.6141e-01, -8.3940e-01, -1.2913e-01, -9.4993e-01,
        -1.2877e-01, -1.3852e-01,  4.2372e-01, -3.0154e-01,  8.3751e-02,
        -1.7456e-01,  1.8190e-01,  5.3215e-01,  3.4722e-01, -6.6146e-02,
        -3.0286e-01,  5.0708e-01, -4.8354e-01, -8.2693e-01, -8.3152e-01,
        -5.7766e-01,  2.3084e-02, -3.9221e-01,  9.4254e-01,  1.1163e-01,
         3.9848e-01,  8.7524e-01, -4.0531e-01, -1.3693e+00, -2.6467e-02,
        -3.9310e-01, -5.6171e-01, -1.0159e+00,  1.4449e+00, -4.3931e-01,
        -6.4183e-03, -2.3388e-02,  7.8541e-03, -1.2484e-01, -5.5878e-01,
         3.1352e-01, -5.8590e-01,  3.3227e-01, -8.8433e-02,  6.8605e-01,
         8.7788e-01,  1.2300e+00, -1.2408e-03, -2.6793e-01, -6.8790e-03,
        -3.7939e-01,  1.3581e+00,  8.4850e-01, -4.9512e-01, -5.8061e-01,
        -8.2514e-02, -3.2878e-01, -1.4678e-01, -4.6850e-01,  9.0492e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([3204]), tensor(-0.0476))
INFO:main.py:Create retrain_dataset
INFO:main.py:retrain_dataset first example: (tensor([ 2.0822e-01,  8.2980e-01,  1.2319e-01, -7.5383e-01,  5.4469e-02,
        -5.4555e-01, -3.9800e-02, -2.7728e-01,  5.3677e-01, -1.9829e-01,
        -8.1334e-01, -6.3831e-02, -6.6189e-01, -4.1705e-01, -2.4436e-01,
        -2.0257e-02, -3.9829e-01,  7.7237e-02, -1.8506e-01,  7.2988e-01,
        -5.3283e-01, -1.2695e-01, -1.6419e-01,  4.6412e-03, -4.9245e-02,
        -2.7938e-01, -6.0788e-01, -1.6848e-02,  6.2739e-01,  1.4589e+00,
         4.7289e-01, -1.4649e-01,  8.3482e-01,  1.6827e-01, -4.4964e-01,
        -2.3069e-01,  2.0347e-01,  2.3715e-01,  2.4491e-02, -1.1169e+00,
        -2.2802e-01,  2.2438e-01,  4.0179e-01,  1.7298e-01, -4.0745e-02,
        -6.6656e-01,  6.9233e-02, -6.8512e-02, -5.2727e-01, -1.7095e-01,
        -3.1819e-01,  5.1804e-01, -4.8144e-01,  2.2544e-01,  9.0231e-03,
        -3.2246e-01, -9.0102e-01, -5.9037e-01, -5.5191e-01, -1.9757e-01,
        -1.8252e-02, -5.4938e-01, -6.8933e-01, -4.5384e-01, -3.4198e-01,
        -5.3451e-01,  6.7839e-01, -2.9221e-01, -4.6171e-01, -5.5844e-01,
        -6.7848e-01, -3.2633e-01,  1.2497e-02, -7.9980e-01,  2.1229e-01,
        -8.6039e-01,  3.0952e-01,  3.4564e-01,  7.8341e-01,  6.9845e-01,
        -1.1431e+00,  2.2910e-01, -5.2691e-04, -1.0133e-01, -8.5637e-02,
         2.2786e-01, -4.0486e-01, -7.8408e-01, -6.3344e-01, -7.5741e-01,
         1.4414e-01, -1.4822e-01,  1.9272e-02, -3.8972e-01, -6.1423e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([2365]), tensor(0.2117))
INFO:main.py:Create prediction_dataset
INFO:main.py:prediction_dataset first example: (tensor([-4.4641e-01, -6.5421e-01, -7.6590e-01,  8.3586e-01, -3.4609e-01,
        -3.2698e-01, -1.4988e+00, -9.7464e-01, -4.5094e-01, -3.6667e-01,
        -7.0313e-01, -7.7323e-02, -9.9238e-02,  1.2014e-01, -1.4798e-01,
        -5.6510e-01,  2.7086e+00,  4.3490e-01, -1.8506e-01, -5.2547e-01,
        -1.1992e-01, -1.1166e+00, -5.3492e-01,  5.3898e-01, -4.2168e-01,
        -6.7017e-01, -6.1361e-01, -1.6848e-02, -1.3086e+00,  6.6189e-01,
         1.7796e-01, -1.5668e-01,  3.0586e-01,  1.6827e-01, -8.0088e-01,
         1.3877e-01,  1.5405e-01, -8.3489e-01,  3.1373e-01, -8.6154e-01,
         2.8573e-02, -1.0347e+00, -1.5710e-01, -3.1090e-01, -3.3821e-01,
        -3.9983e-01, -4.0310e-01, -2.9353e-01, -8.1948e-03, -2.3312e-01,
         3.3559e-01,  3.8848e-01, -4.8144e-01, -1.5391e+00, -8.2350e-01,
        -5.8686e-01,  2.4075e-02, -6.2580e-01, -3.1595e-01, -9.5215e-02,
        -1.8236e-02, -2.5222e-01,  8.7551e-01,  2.9117e-02, -2.9793e-02,
         7.6081e-01, -6.8315e-01,  3.3982e-01,  1.3859e+00, -4.7205e-01,
        -1.0257e-03, -1.7391e-02,  1.2497e-02, -1.1961e-01, -3.1078e-01,
         2.4215e-01, -3.2846e-01,  2.7685e-01,  4.3698e-02,  6.9845e-01,
         8.7700e-01,  1.2447e+00, -5.2691e-04, -1.0133e-01, -3.4255e-01,
        -3.7832e-01, -5.6799e-01, -9.5988e-01, -4.6265e-01, -5.7193e-01,
         1.9334e-01, -5.9821e-01, -1.6181e-01, -8.0637e-01,  1.2949e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([3390]), tensor(-0.0312))
INFO:main.py:

Create dataloader

INFO:main.py:Create train and test dataloader
INFO:main.py:Create retrain and prediction dataloader
INFO:main.py:

Hyperparameters tuning with Ray Tune

INFO:main.py:Training data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993]
INFO:main.py:Testing data year: 1994
INFO:main.py:

            ray_results_path: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
            num_samples: 60
            max_num_epochs: 20
            num_cpus: 60
            cpus_per_trial: 1
            num_gpus: 2
            gpus_per_trial: 0
            continuous_dim: 102
            num_embeddings: 9882
            device: cuda
            
2024-07-04 21:59:40,056	INFO worker.py:1753 -- Started a local Ray instance.
2024-07-04 21:59:40,083	INFO packaging.py:530 -- Creating a file package for local directory '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src'.
2024-07-04 21:59:40,105	INFO packaging.py:358 -- Pushing file package 'gcs://_ray_pkg_3935e91dc5487a1d.zip' (1.20MiB) to Ray cluster...
2024-07-04 21:59:40,112	INFO packaging.py:371 -- Successfully pushed file package 'gcs://_ray_pkg_3935e91dc5487a1d.zip'.
2024-07-04 21:59:42,853	WARNING tune.py:902 -- AIR_VERBOSITY is set, ignoring passed-in ProgressReporter for now.
2024-07-04 22:27:45,034	INFO tune.py:1009 -- Wrote the latest version of all result files and experiment state to '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results/train_fnn_2024-07-04_21-59-42' in 0.1577s.
INFO:model_data_nn.py:Best trial config: {'continuous_dim': 102, 'hidden_dim': 35, 'num_layers': 3, 'num_embeddings': 9882, 'embedding_dim': 15, 'dropout_rate': 0.14076636666981, 'lr': 0.0002566960992206887, 'weight_decay': 2.5757392938302746e-05, 'num_epochs': 20, 'num_gpus': 2}
INFO:model_data_nn.py:Best trial training loss: 0.03271526722730396
INFO:model_data_nn.py:Best trial testing loss: 0.025251545741722534
INFO:main.py:Ray Tune results have been saved to: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
INFO:main.py:Best trial directory: /tmp/ray/session_2024-07-04_21-59-37_331782_736015/artifacts/2024-07-04_21-59-42/train_fnn_2024-07-04_21-59-42/driver_artifacts/train_fnn_643f6_00024_24_dropout_rate=0.1408,embedding_dim=15,hidden_dim=35,lr=0.0003,num_layers=3,weight_decay=0.0000_2024-07-04_21-59-43
INFO:main.py:

Retrain a new model with data in years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994]

            Using the optimized hyperparameters: {'continuous_dim': 102, 'hidden_dim': 35, 'num_layers': 3, 'num_embeddings': 11105, 'embedding_dim': 15, 'dropout_rate': 0.14076636666981, 'lr': 0.0002566960992206887, 'weight_decay': 2.5757392938302746e-05, 'num_epochs': 20, 'num_gpus': 2}

INFO:model_data_nn.py:Epoch 1/20, metrics: {'avg_train_loss': 2.9546706400300335, 'avg_test_loss': 0.03190842934163546}
INFO:model_data_nn.py:Epoch 2/20, metrics: {'avg_train_loss': 0.03379926065211545, 'avg_test_loss': 0.02812817715784793}
INFO:model_data_nn.py:Epoch 3/20, metrics: {'avg_train_loss': 0.03285320733431769, 'avg_test_loss': 0.028443777817301452}
INFO:model_data_nn.py:Epoch 4/20, metrics: {'avg_train_loss': 0.03266617355297789, 'avg_test_loss': 0.028176077401918107}
INFO:model_data_nn.py:Epoch 5/20, metrics: {'avg_train_loss': 0.03252538660445904, 'avg_test_loss': 0.02799951763361366}
INFO:model_data_nn.py:Epoch 6/20, metrics: {'avg_train_loss': 0.032434098317305045, 'avg_test_loss': 0.028213259509091614}
INFO:model_data_nn.py:Epoch 7/20, metrics: {'avg_train_loss': 0.03236135593701399, 'avg_test_loss': 0.027986678523419385}
INFO:model_data_nn.py:Epoch 8/20, metrics: {'avg_train_loss': 0.0323028064118237, 'avg_test_loss': 0.028049750632545264}
INFO:model_data_nn.py:Epoch 9/20, metrics: {'avg_train_loss': 0.03226730099349476, 'avg_test_loss': 0.027869928347789785}
INFO:model_data_nn.py:Epoch 10/20, metrics: {'avg_train_loss': 0.032261081770732974, 'avg_test_loss': 0.028043106955435316}
INFO:model_data_nn.py:Epoch 11/20, metrics: {'avg_train_loss': 0.03222802567635517, 'avg_test_loss': 0.027921317392504728}
INFO:model_data_nn.py:Epoch 12/20, metrics: {'avg_train_loss': 0.03221642396009689, 'avg_test_loss': 0.02788673443328861}
INFO:model_data_nn.py:Epoch 13/20, metrics: {'avg_train_loss': 0.03221636194951034, 'avg_test_loss': 0.027901292344330926}
INFO:model_data_nn.py:Epoch 14/20, metrics: {'avg_train_loss': 0.03218800117758876, 'avg_test_loss': 0.028135068289745244}
INFO:model_data_nn.py:Epoch 15/20, metrics: {'avg_train_loss': 0.03219417576048271, 'avg_test_loss': 0.02794861965166935}
INFO:model_data_nn.py:Epoch 16/20, metrics: {'avg_train_loss': 0.032179310568269164, 'avg_test_loss': 0.028095543285981364}
INFO:model_data_nn.py:Epoch 17/20, metrics: {'avg_train_loss': 0.032164777018848595, 'avg_test_loss': 0.02793866538282919}
INFO:model_data_nn.py:Epoch 18/20, metrics: {'avg_train_loss': 0.0321663937159968, 'avg_test_loss': 0.028220890801107634}
INFO:model_data_nn.py:Epoch 19/20, metrics: {'avg_train_loss': 0.03215273174702369, 'avg_test_loss': 0.028201492324838564}
INFO:model_data_nn.py:Epoch 20/20, metrics: {'avg_train_loss': 0.03214663996334966, 'avg_test_loss': 0.027934258717900808}
INFO:main.py:Making prediction for data in year: 1994
INFO:main.py:Prediction data shape: (70120,)
/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src/main.py:372: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  prediction_data['pred'] = predictions
INFO:main.py:Root Mean Squared Error for Prediction in 1995: 0.16714461143314732
INFO:main.py:Prediction Stats:                 ret          pred
count  70120.000000  70120.000000
mean       0.023276      0.009552
std        0.167748      0.016795
min       -0.885714     -0.151310
25%       -0.048780      0.004134
50%        0.011494      0.009059
75%        0.078947      0.014836
max        6.000000      0.356210
INFO:main.py:

Transform data

INFO:transform_data_nn.py:Train data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994]
INFO:transform_data_nn.py:Train_data: (790767, 158)

INFO:transform_data_nn.py:Test data years: [1995]
INFO:transform_data_nn.py:Test_data: (70120, 158)

INFO:transform_data_nn.py:Retrain data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995]
INFO:transform_data_nn.py:Retrain_data: (860887, 158)

INFO:transform_data_nn.py:Prediction data years: [1996]
INFO:transform_data_nn.py:Prediction_data: (72183, 158)

INFO:main.py:

Generate X and y with train_data and test_data

INFO:main.py:
            x_train_tf: torch.Size([790767, 103])
            y_train_tf: torch.Size([790767])

            x_test_tf: torch.Size([70120, 103])
            y_test_tf: torch.Size([70120])

        
INFO:main.py:

Generate X and y with retrain_data and prediction_data

INFO:main.py:
            x_retrain_tf: torch.Size([860887, 103])
            y_retrain_tf: torch.Size([860887])

            x_prediction_tf: torch.Size([72183, 103])
            y_prediction_tf: torch.Size([72183])

        
INFO:main.py:

Create dataset

INFO:main.py:Create train_dataset
INFO:main.py:train_dataset first example: (tensor([ 2.0822e-01,  8.2980e-01,  1.2319e-01, -7.5383e-01,  5.4469e-02,
        -5.4555e-01, -3.9800e-02, -2.7728e-01,  5.3677e-01, -1.9829e-01,
        -8.1334e-01, -6.3831e-02, -6.6189e-01, -4.1705e-01, -2.4436e-01,
        -2.0257e-02, -3.9829e-01,  7.7237e-02, -1.8506e-01,  7.2988e-01,
        -5.3283e-01, -1.2695e-01, -1.6419e-01,  4.6412e-03, -4.9245e-02,
        -2.7938e-01, -6.0788e-01, -1.6848e-02,  6.2739e-01,  1.4589e+00,
         4.7289e-01, -1.4649e-01,  8.3482e-01,  1.6827e-01, -4.4964e-01,
        -2.3069e-01,  2.0347e-01,  2.3715e-01,  2.4491e-02, -1.1169e+00,
        -2.2802e-01,  2.2438e-01,  4.0179e-01,  1.7298e-01, -4.0745e-02,
        -6.6656e-01,  6.9233e-02, -6.8512e-02, -5.2727e-01, -1.7095e-01,
        -3.1819e-01,  5.1804e-01, -4.8144e-01,  2.2544e-01,  9.0231e-03,
        -3.2246e-01, -9.0102e-01, -5.9037e-01, -5.5191e-01, -1.9757e-01,
        -1.8252e-02, -5.4938e-01, -6.8933e-01, -4.5384e-01, -3.4198e-01,
        -5.3451e-01,  6.7839e-01, -2.9221e-01, -4.6171e-01, -5.5844e-01,
        -6.7848e-01, -3.2633e-01,  1.2497e-02, -7.9980e-01,  2.1229e-01,
        -8.6039e-01,  3.0952e-01,  3.4564e-01,  7.8341e-01,  6.9845e-01,
        -1.1431e+00,  2.2910e-01, -5.2691e-04, -1.0133e-01, -8.5637e-02,
         2.2786e-01, -4.0486e-01, -7.8408e-01, -6.3344e-01, -7.5741e-01,
         1.4414e-01, -1.4822e-01,  1.9272e-02, -3.8972e-01, -6.1423e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([2365]), tensor(0.2117))
INFO:main.py:Create test_dataset
INFO:main.py:test_dataset first example: (tensor([-4.4641e-01, -6.5421e-01, -7.6590e-01,  8.3586e-01, -3.4609e-01,
        -3.2698e-01, -1.4988e+00, -9.7464e-01, -4.5094e-01, -3.6667e-01,
        -7.0313e-01, -7.7323e-02, -9.9238e-02,  1.2014e-01, -1.4798e-01,
        -5.6510e-01,  2.7086e+00,  4.3490e-01, -1.8506e-01, -5.2547e-01,
        -1.1992e-01, -1.1166e+00, -5.3492e-01,  5.3898e-01, -4.2168e-01,
        -6.7017e-01, -6.1361e-01, -1.6848e-02, -1.3086e+00,  6.6189e-01,
         1.7796e-01, -1.5668e-01,  3.0586e-01,  1.6827e-01, -8.0088e-01,
         1.3877e-01,  1.5405e-01, -8.3489e-01,  3.1373e-01, -8.6154e-01,
         2.8573e-02, -1.0347e+00, -1.5710e-01, -3.1090e-01, -3.3821e-01,
        -3.9983e-01, -4.0310e-01, -2.9353e-01, -8.1948e-03, -2.3312e-01,
         3.3559e-01,  3.8848e-01, -4.8144e-01, -1.5391e+00, -8.2350e-01,
        -5.8686e-01,  2.4075e-02, -6.2580e-01, -3.1595e-01, -9.5215e-02,
        -1.8236e-02, -2.5222e-01,  8.7551e-01,  2.9117e-02, -2.9793e-02,
         7.6081e-01, -6.8315e-01,  3.3982e-01,  1.3859e+00, -4.7205e-01,
        -1.0257e-03, -1.7391e-02,  1.2497e-02, -1.1961e-01, -3.1078e-01,
         2.4215e-01, -3.2846e-01,  2.7685e-01,  4.3698e-02,  6.9845e-01,
         8.7700e-01,  1.2447e+00, -5.2691e-04, -1.0133e-01, -3.4255e-01,
        -3.7832e-01, -5.6799e-01, -9.5988e-01, -4.6265e-01, -5.7193e-01,
         1.9334e-01, -5.9821e-01, -1.6181e-01, -8.0637e-01,  1.2949e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([3390]), tensor(-0.0312))
INFO:main.py:Create retrain_dataset
INFO:main.py:retrain_dataset first example: (tensor([ 0.2070,  0.8698,  0.1068, -0.7455,  0.0463, -0.5479, -0.0360, -0.2766,
         0.5703, -0.1988, -0.8031, -0.0574, -0.6699, -0.4307, -0.2406, -0.0187,
        -0.3999,  0.0799, -0.1676,  0.7349, -0.5521, -0.1414, -0.1708, -0.0040,
        -0.0475, -0.2792, -0.6103, -0.0172,  0.6383,  1.5140,  0.4646, -0.1514,
         0.8504,  0.1768, -0.4428, -0.2426,  0.1904,  0.2577,  0.0129, -1.1169,
        -0.2303,  0.2394,  0.4024,  0.1629, -0.0473, -0.6737,  0.0747, -0.0740,
        -0.5293, -0.1791, -0.3292,  0.5301, -0.4786,  0.2371, -0.0026, -0.3191,
        -0.8880, -0.5940, -0.5497, -0.1955, -0.0202, -0.5487, -0.6866, -0.4467,
        -0.3480, -0.4874,  0.7233, -0.2934, -0.4951, -0.5577, -0.6812, -0.3353,
         0.0339, -0.8053,  0.2163, -0.8496,  0.3089,  0.3479,  0.7886,  0.7148,
        -1.1516,  0.2313,  0.0018, -0.1100, -0.0897,  0.2543, -0.4044, -0.7916,
        -0.6279, -0.7666,  0.1440, -0.1259,  0.0253, -0.4008, -0.6062,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000]), tensor([2523]), tensor(0.2117))
INFO:main.py:Create prediction_dataset
INFO:main.py:prediction_dataset first example: (tensor([-0.2938, -0.7169, -0.7621,  1.1135, -0.0832, -0.3015, -0.6041, -0.6648,
        -0.3450,  0.1428, -0.7512, -0.0449, -0.6699,  0.1886, -0.0617,  0.1579,
        -0.3212,  0.2805, -0.3714,  0.3180,  0.1390, -0.1671, -0.5183,  0.4307,
         0.3063, -0.8209, -0.6415, -0.0172, -1.2463,  0.8320, -0.0394, -0.0799,
         0.4022,  0.1768, -0.7429,  0.0326,  0.3902, -0.8232, -0.0556, -0.8986,
        -0.0783,  0.1759,  0.5118, -0.2630, -0.1788,  0.1454, -0.0296,  0.4864,
        -0.1933,  0.0333,  0.3240,  0.4916, -0.4786, -1.0663, -0.8192, -0.5442,
         0.0298, -0.4726, -0.6361, -0.4100,  0.0155, -0.7571, -1.4741, -0.2097,
        -0.0303, -0.9850, -0.6513, -0.1997,  0.7296, -0.6694, -0.0055,  0.0045,
         0.0339,  0.0369, -0.1124,  0.1364, -0.0884,  0.3046, -0.0998,  0.7148,
         0.8755,  1.2631,  0.0018,  0.0684, -0.1778, -0.2964,  1.0461, -0.5275,
        -0.4305, -0.5517,  0.2104, -0.4221, -0.2945, -0.6234,  0.0577,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000]), tensor([3505]), tensor(-0.0267))
INFO:main.py:

Create dataloader

INFO:main.py:Create train and test dataloader
INFO:main.py:Create retrain and prediction dataloader
INFO:main.py:

Hyperparameters tuning with Ray Tune

INFO:main.py:Training data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994]
INFO:main.py:Testing data year: 1995
INFO:main.py:

            ray_results_path: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
            num_samples: 60
            max_num_epochs: 20
            num_cpus: 60
            cpus_per_trial: 1
            num_gpus: 2
            gpus_per_trial: 0
            continuous_dim: 102
            num_embeddings: 11105
            device: cuda
            
2024-07-05 00:06:40,769	INFO worker.py:1753 -- Started a local Ray instance.
2024-07-05 00:06:40,793	INFO packaging.py:530 -- Creating a file package for local directory '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src'.
2024-07-05 00:06:40,814	INFO packaging.py:358 -- Pushing file package 'gcs://_ray_pkg_3935e91dc5487a1d.zip' (1.20MiB) to Ray cluster...
2024-07-05 00:06:40,818	INFO packaging.py:371 -- Successfully pushed file package 'gcs://_ray_pkg_3935e91dc5487a1d.zip'.
2024-07-05 00:06:43,677	WARNING tune.py:902 -- AIR_VERBOSITY is set, ignoring passed-in ProgressReporter for now.
2024-07-05 00:23:37,187	INFO tune.py:1009 -- Wrote the latest version of all result files and experiment state to '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results/train_fnn_2024-07-05_00-06-43' in 0.1458s.
INFO:model_data_nn.py:Best trial config: {'continuous_dim': 102, 'hidden_dim': 175, 'num_layers': 2, 'num_embeddings': 11105, 'embedding_dim': 10, 'dropout_rate': 0.3836234067540544, 'lr': 9.034076805537763e-05, 'weight_decay': 4.7076907743176946e-06, 'num_epochs': 20, 'num_gpus': 2}
INFO:model_data_nn.py:Best trial training loss: 0.03236824700002239
INFO:model_data_nn.py:Best trial testing loss: 0.027917006850942807
INFO:main.py:Ray Tune results have been saved to: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
INFO:main.py:Best trial directory: /tmp/ray/session_2024-07-05_00-06-37_180046_736015/artifacts/2024-07-05_00-06-43/train_fnn_2024-07-05_00-06-43/driver_artifacts/train_fnn_229ce_00032_32_dropout_rate=0.3836,embedding_dim=10,hidden_dim=175,lr=0.0001,num_layers=2,weight_decay=0.0000_2024-07-05_00-06-43
INFO:main.py:

Retrain a new model with data in years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995]

            Using the optimized hyperparameters: {'continuous_dim': 102, 'hidden_dim': 175, 'num_layers': 2, 'num_embeddings': 11826, 'embedding_dim': 10, 'dropout_rate': 0.3836234067540544, 'lr': 9.034076805537763e-05, 'weight_decay': 4.7076907743176946e-06, 'num_epochs': 20, 'num_gpus': 2}

INFO:model_data_nn.py:Epoch 1/20, metrics: {'avg_train_loss': 16.26536363723499, 'avg_test_loss': 0.1175003568410662}
INFO:model_data_nn.py:Epoch 2/20, metrics: {'avg_train_loss': 0.05382505436063725, 'avg_test_loss': 0.030156980552677567}
INFO:model_data_nn.py:Epoch 3/20, metrics: {'avg_train_loss': 0.032852128816592954, 'avg_test_loss': 0.0299857984798967}
INFO:model_data_nn.py:Epoch 4/20, metrics: {'avg_train_loss': 0.032741043904844426, 'avg_test_loss': 0.030151232974669824}
INFO:model_data_nn.py:Epoch 5/20, metrics: {'avg_train_loss': 0.0325646182056101, 'avg_test_loss': 0.0299657626830517}
INFO:model_data_nn.py:Epoch 6/20, metrics: {'avg_train_loss': 0.032455972869945025, 'avg_test_loss': 0.029930797234633343}
INFO:model_data_nn.py:Epoch 7/20, metrics: {'avg_train_loss': 0.032397943813743696, 'avg_test_loss': 0.029680646322700625}
INFO:model_data_nn.py:Epoch 8/20, metrics: {'avg_train_loss': 0.03233956145119878, 'avg_test_loss': 0.02963088154594632}
INFO:model_data_nn.py:Epoch 9/20, metrics: {'avg_train_loss': 0.03228033981110137, 'avg_test_loss': 0.029884083877674283}
INFO:model_data_nn.py:Epoch 10/20, metrics: {'avg_train_loss': 0.03225526239012913, 'avg_test_loss': 0.029704901748105673}
INFO:model_data_nn.py:Epoch 11/20, metrics: {'avg_train_loss': 0.03221508911460496, 'avg_test_loss': 0.029682921073960918}
INFO:model_data_nn.py:Epoch 12/20, metrics: {'avg_train_loss': 0.03218971440317112, 'avg_test_loss': 0.029673952706726202}
INFO:model_data_nn.py:Epoch 13/20, metrics: {'avg_train_loss': 0.032160022728856284, 'avg_test_loss': 0.029603534236926823}
INFO:model_data_nn.py:Epoch 14/20, metrics: {'avg_train_loss': 0.03213569744280449, 'avg_test_loss': 0.029684164823884977}
INFO:model_data_nn.py:Epoch 15/20, metrics: {'avg_train_loss': 0.03210369659376719, 'avg_test_loss': 0.029612399443673592}
INFO:model_data_nn.py:Epoch 16/20, metrics: {'avg_train_loss': 0.032074209951238726, 'avg_test_loss': 0.029574591760583063}
INFO:model_data_nn.py:Epoch 17/20, metrics: {'avg_train_loss': 0.03207892579282129, 'avg_test_loss': 0.029650214884483012}
INFO:model_data_nn.py:Epoch 18/20, metrics: {'avg_train_loss': 0.03204486397677413, 'avg_test_loss': 0.029791134068616897}
INFO:model_data_nn.py:Epoch 19/20, metrics: {'avg_train_loss': 0.03201655559687632, 'avg_test_loss': 0.02960154183575527}
INFO:model_data_nn.py:Epoch 20/20, metrics: {'avg_train_loss': 0.03201033854527538, 'avg_test_loss': 0.029692419152376606}
INFO:main.py:Making prediction for data in year: 1995
INFO:main.py:Prediction data shape: (72183,)
/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src/main.py:372: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  prediction_data['pred'] = predictions
INFO:main.py:Root Mean Squared Error for Prediction in 1996: 0.17231522177907063
INFO:main.py:Prediction Stats:                 ret          pred
count  72183.000000  72183.000000
mean       0.015431      0.017504
std        0.172995      0.012142
min       -0.909091     -0.103620
25%       -0.060000      0.010923
50%        0.002273      0.015330
75%        0.074074      0.021609
max        7.000000      0.173934
INFO:main.py:

Transform data

INFO:transform_data_nn.py:Train data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995]
INFO:transform_data_nn.py:Train_data: (860887, 158)

INFO:transform_data_nn.py:Test data years: [1996]
INFO:transform_data_nn.py:Test_data: (72183, 158)

INFO:transform_data_nn.py:Retrain data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996]
INFO:transform_data_nn.py:Retrain_data: (933070, 158)

INFO:transform_data_nn.py:Prediction data years: [1997]
INFO:transform_data_nn.py:Prediction_data: (74780, 158)

INFO:main.py:

Generate X and y with train_data and test_data

INFO:main.py:
            x_train_tf: torch.Size([860887, 103])
            y_train_tf: torch.Size([860887])

            x_test_tf: torch.Size([72183, 103])
            y_test_tf: torch.Size([72183])

        
INFO:main.py:

Generate X and y with retrain_data and prediction_data

INFO:main.py:
            x_retrain_tf: torch.Size([933070, 103])
            y_retrain_tf: torch.Size([933070])

            x_prediction_tf: torch.Size([74780, 103])
            y_prediction_tf: torch.Size([74780])

        
INFO:main.py:

Create dataset

INFO:main.py:Create train_dataset
INFO:main.py:train_dataset first example: (tensor([ 0.2070,  0.8698,  0.1068, -0.7455,  0.0463, -0.5479, -0.0360, -0.2766,
         0.5703, -0.1988, -0.8031, -0.0574, -0.6699, -0.4307, -0.2406, -0.0187,
        -0.3999,  0.0799, -0.1676,  0.7349, -0.5521, -0.1414, -0.1708, -0.0040,
        -0.0475, -0.2792, -0.6103, -0.0172,  0.6383,  1.5140,  0.4646, -0.1514,
         0.8504,  0.1768, -0.4428, -0.2426,  0.1904,  0.2577,  0.0129, -1.1169,
        -0.2303,  0.2394,  0.4024,  0.1629, -0.0473, -0.6737,  0.0747, -0.0740,
        -0.5293, -0.1791, -0.3292,  0.5301, -0.4786,  0.2371, -0.0026, -0.3191,
        -0.8880, -0.5940, -0.5497, -0.1955, -0.0202, -0.5487, -0.6866, -0.4467,
        -0.3480, -0.4874,  0.7233, -0.2934, -0.4951, -0.5577, -0.6812, -0.3353,
         0.0339, -0.8053,  0.2163, -0.8496,  0.3089,  0.3479,  0.7886,  0.7148,
        -1.1516,  0.2313,  0.0018, -0.1100, -0.0897,  0.2543, -0.4044, -0.7916,
        -0.6279, -0.7666,  0.1440, -0.1259,  0.0253, -0.4008, -0.6062,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000]), tensor([2523]), tensor(0.2117))
INFO:main.py:Create test_dataset
INFO:main.py:test_dataset first example: (tensor([-0.2938, -0.7169, -0.7621,  1.1135, -0.0832, -0.3015, -0.6041, -0.6648,
        -0.3450,  0.1428, -0.7512, -0.0449, -0.6699,  0.1886, -0.0617,  0.1579,
        -0.3212,  0.2805, -0.3714,  0.3180,  0.1390, -0.1671, -0.5183,  0.4307,
         0.3063, -0.8209, -0.6415, -0.0172, -1.2463,  0.8320, -0.0394, -0.0799,
         0.4022,  0.1768, -0.7429,  0.0326,  0.3902, -0.8232, -0.0556, -0.8986,
        -0.0783,  0.1759,  0.5118, -0.2630, -0.1788,  0.1454, -0.0296,  0.4864,
        -0.1933,  0.0333,  0.3240,  0.4916, -0.4786, -1.0663, -0.8192, -0.5442,
         0.0298, -0.4726, -0.6361, -0.4100,  0.0155, -0.7571, -1.4741, -0.2097,
        -0.0303, -0.9850, -0.6513, -0.1997,  0.7296, -0.6694, -0.0055,  0.0045,
         0.0339,  0.0369, -0.1124,  0.1364, -0.0884,  0.3046, -0.0998,  0.7148,
         0.8755,  1.2631,  0.0018,  0.0684, -0.1778, -0.2964,  1.0461, -0.5275,
        -0.4305, -0.5517,  0.2104, -0.4221, -0.2945, -0.6234,  0.0577,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000]), tensor([3505]), tensor(-0.0267))
INFO:main.py:Create retrain_dataset
INFO:main.py:retrain_dataset first example: (tensor([ 2.0822e-01,  9.0332e-01,  9.5628e-02, -7.4014e-01,  3.6385e-02,
        -5.5142e-01, -3.3117e-02, -2.7570e-01,  6.0245e-01, -2.1108e-01,
        -7.9253e-01, -5.3672e-02, -6.7953e-01, -4.4504e-01, -2.4209e-01,
        -1.5750e-02, -4.0083e-01,  8.5839e-02, -1.5045e-01,  7.3602e-01,
        -5.4441e-01, -1.2721e-01, -1.8383e-01, -6.5177e-03, -4.9129e-02,
        -2.7841e-01, -6.1463e-01, -2.6265e-02,  6.2690e-01,  1.5680e+00,
         4.5008e-01, -1.5604e-01,  8.6347e-01,  1.8179e-01, -4.3463e-01,
        -2.5355e-01,  1.7876e-01,  2.8057e-01,  2.9758e-03, -1.1157e+00,
        -2.2965e-01,  2.1313e-01,  4.0304e-01,  1.6121e-01, -5.3819e-02,
        -6.8240e-01,  6.0901e-02, -7.5781e-02, -5.2430e-01, -1.8108e-01,
        -3.3966e-01,  5.1763e-01, -4.7646e-01,  2.4772e-01, -1.3961e-02,
        -3.1637e-01, -8.6616e-01, -5.8814e-01, -5.5143e-01, -1.9432e-01,
        -1.9908e-02, -5.5093e-01, -6.8459e-01, -4.4576e-01, -3.5681e-01,
        -4.6418e-01,  7.6606e-01, -2.9531e-01, -5.2308e-01, -5.5852e-01,
        -6.7927e-01, -3.3963e-01,  3.4202e-02, -8.1351e-01,  2.2111e-01,
        -8.3719e-01,  3.0954e-01,  3.4964e-01,  7.9928e-01,  7.2578e-01,
        -1.1656e+00,  2.4186e-01,  1.2872e-03, -1.1198e-01, -9.6833e-02,
         2.8074e-01, -3.9765e-01, -8.0440e-01, -6.2865e-01, -7.8400e-01,
         1.4390e-01, -1.0372e-01,  2.7864e-02, -4.1521e-01, -5.9714e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([2673]), tensor(0.2117))
INFO:main.py:Create prediction_dataset
INFO:main.py:prediction_dataset first example: (tensor([-8.7624e-01,  9.3279e-02,  5.4191e-01,  1.1032e+00,  4.0103e-04,
        -4.3181e-01, -5.7865e-01, -6.4662e-01, -2.5776e-01, -3.8349e-02,
        -6.9573e-01, -1.2136e-01, -6.7953e-01, -6.0545e-02, -1.3694e-01,
        -6.6955e-01, -3.1891e-01, -1.0781e+00,  6.3013e-02,  3.7440e-02,
         2.9719e-01,  1.6903e+00,  2.1873e+00, -3.6312e-01, -2.2407e-01,
        -8.6230e-01, -6.5672e-01, -5.8016e-01, -5.9402e-01,  1.0002e+00,
         9.0759e-01, -1.5422e-01,  3.2892e-01, -5.5723e+00, -7.9018e-01,
        -6.3968e-02,  1.0862e-01, -8.1783e-01, -2.4149e-01, -8.7506e-01,
        -3.0165e-02, -8.7484e-02,  2.7561e-01, -1.7700e-01, -9.2080e-02,
        -1.9208e-01, -3.6215e-01, -4.7759e-01, -3.5181e-01,  1.3094e-01,
        -9.9289e-01,  3.3148e-01, -4.7646e-01, -6.4999e-01, -8.1265e-01,
        -6.1562e-01,  2.9607e-02, -6.6519e-01, -3.5054e-01, -3.3607e-01,
        -1.3260e-01, -2.5537e-01, -8.2658e-01, -3.9005e-01, -3.2130e-02,
        -5.3829e-01, -1.3639e-01, -7.3257e-01, -5.2308e-01, -6.8581e-01,
         4.3458e-03,  1.2866e-02,  3.4202e-02,  3.4487e-01, -8.5501e-02,
         4.4181e-02, -6.5434e-02,  2.1960e-01,  1.0100e-02,  7.2578e-01,
         8.6614e-01,  9.3752e-01,  1.2872e-03,  6.2599e-02, -3.1440e-01,
        -2.5983e-01, -7.2932e-02, -7.1743e-01, -3.8007e-01, -5.2244e-01,
         7.4768e-02, -4.5563e-01, -5.3923e-01, -6.5818e-01, -2.7943e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([3724]), tensor(0.0615))
INFO:main.py:

Create dataloader

INFO:main.py:Create train and test dataloader
INFO:main.py:Create retrain and prediction dataloader
INFO:main.py:

Hyperparameters tuning with Ray Tune

INFO:main.py:Training data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995]
INFO:main.py:Testing data year: 1996
INFO:main.py:

            ray_results_path: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
            num_samples: 60
            max_num_epochs: 20
            num_cpus: 60
            cpus_per_trial: 1
            num_gpus: 2
            gpus_per_trial: 0
            continuous_dim: 102
            num_embeddings: 11826
            device: cuda
            
2024-07-05 02:06:27,323	INFO worker.py:1753 -- Started a local Ray instance.
2024-07-05 02:06:27,350	INFO packaging.py:530 -- Creating a file package for local directory '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src'.
2024-07-05 02:06:27,369	INFO packaging.py:358 -- Pushing file package 'gcs://_ray_pkg_3935e91dc5487a1d.zip' (1.20MiB) to Ray cluster...
2024-07-05 02:06:27,375	INFO packaging.py:371 -- Successfully pushed file package 'gcs://_ray_pkg_3935e91dc5487a1d.zip'.
2024-07-05 02:06:30,186	WARNING tune.py:902 -- AIR_VERBOSITY is set, ignoring passed-in ProgressReporter for now.
2024-07-05 02:25:26,964	INFO tune.py:1009 -- Wrote the latest version of all result files and experiment state to '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results/train_fnn_2024-07-05_02-06-30' in 0.1438s.
INFO:model_data_nn.py:Best trial config: {'continuous_dim': 102, 'hidden_dim': 25, 'num_layers': 4, 'num_embeddings': 11826, 'embedding_dim': 10, 'dropout_rate': 0.20222524647168127, 'lr': 0.00018773201057654924, 'weight_decay': 1.1045375019318383e-06, 'num_epochs': 20, 'num_gpus': 2}
INFO:model_data_nn.py:Best trial training loss: 0.031778927449770594
INFO:model_data_nn.py:Best trial testing loss: 0.029467980925601427
INFO:main.py:Ray Tune results have been saved to: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
INFO:main.py:Best trial directory: /tmp/ray/session_2024-07-05_02-06-24_680014_736015/artifacts/2024-07-05_02-06-30/train_fnn_2024-07-05_02-06-30/driver_artifacts/train_fnn_de1b0_00050_50_dropout_rate=0.2022,embedding_dim=10,hidden_dim=25,lr=0.0002,num_layers=4,weight_decay=0.0000_2024-07-05_02-06-30
INFO:main.py:

Retrain a new model with data in years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996]

            Using the optimized hyperparameters: {'continuous_dim': 102, 'hidden_dim': 25, 'num_layers': 4, 'num_embeddings': 12495, 'embedding_dim': 10, 'dropout_rate': 0.20222524647168127, 'lr': 0.00018773201057654924, 'weight_decay': 1.1045375019318383e-06, 'num_epochs': 20, 'num_gpus': 2}

INFO:model_data_nn.py:Epoch 1/20, metrics: {'avg_train_loss': 4.05107615480483, 'avg_test_loss': 0.039341263417313754}
INFO:model_data_nn.py:Epoch 2/20, metrics: {'avg_train_loss': 0.03433288938183189, 'avg_test_loss': 0.03187497560109975}
INFO:model_data_nn.py:Epoch 3/20, metrics: {'avg_train_loss': 0.03220715821555858, 'avg_test_loss': 0.03176088505305159}
INFO:model_data_nn.py:Epoch 4/20, metrics: {'avg_train_loss': 0.032115920949267386, 'avg_test_loss': 0.031747719150386815}
INFO:model_data_nn.py:Epoch 5/20, metrics: {'avg_train_loss': 0.03204345444781995, 'avg_test_loss': 0.031650487451344474}
INFO:model_data_nn.py:Epoch 6/20, metrics: {'avg_train_loss': 0.03199372370720972, 'avg_test_loss': 0.031589633728672045}
INFO:model_data_nn.py:Epoch 7/20, metrics: {'avg_train_loss': 0.03194988600932706, 'avg_test_loss': 0.03155182378175549}
INFO:model_data_nn.py:Epoch 8/20, metrics: {'avg_train_loss': 0.031919258506393725, 'avg_test_loss': 0.031553181482112815}
INFO:model_data_nn.py:Epoch 9/20, metrics: {'avg_train_loss': 0.03187388019362881, 'avg_test_loss': 0.03153247980193959}
INFO:model_data_nn.py:Epoch 10/20, metrics: {'avg_train_loss': 0.03186191487674114, 'avg_test_loss': 0.031484041376532906}
INFO:model_data_nn.py:Epoch 11/20, metrics: {'avg_train_loss': 0.03183251364202595, 'avg_test_loss': 0.03155993168743757}
INFO:model_data_nn.py:Epoch 12/20, metrics: {'avg_train_loss': 0.03182550419047884, 'avg_test_loss': 0.031600866239104006}
INFO:model_data_nn.py:Epoch 13/20, metrics: {'avg_train_loss': 0.03179805748859633, 'avg_test_loss': 0.03151416387886573}
INFO:model_data_nn.py:Epoch 14/20, metrics: {'avg_train_loss': 0.03177808382036101, 'avg_test_loss': 0.031498643318907574}
INFO:model_data_nn.py:Epoch 15/20, metrics: {'avg_train_loss': 0.03176219263669763, 'avg_test_loss': 0.0315144398321326}
INFO:model_data_nn.py:Epoch 16/20, metrics: {'avg_train_loss': 0.03175510756776186, 'avg_test_loss': 0.03140275846912056}
INFO:model_data_nn.py:Epoch 17/20, metrics: {'avg_train_loss': 0.0317155840323755, 'avg_test_loss': 0.03151744270426595}
INFO:model_data_nn.py:Epoch 18/20, metrics: {'avg_train_loss': 0.03166094543476204, 'avg_test_loss': 0.03151350062356418}
INFO:model_data_nn.py:Epoch 19/20, metrics: {'avg_train_loss': 0.031593338897469646, 'avg_test_loss': 0.03152852239580745}
INFO:model_data_nn.py:Epoch 20/20, metrics: {'avg_train_loss': 0.03148809209752148, 'avg_test_loss': 0.03162815020475378}
INFO:main.py:Making prediction for data in year: 1996
INFO:main.py:Prediction data shape: (74780,)
/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src/main.py:372: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  prediction_data['pred'] = predictions
INFO:main.py:Root Mean Squared Error for Prediction in 1997: 0.17781310449492185
INFO:main.py:Prediction Stats:                 ret          pred
count  74780.000000  74780.000000
mean       0.018436      0.005401
std        0.178132      0.025295
min       -0.937500     -0.159013
25%       -0.063918      0.000055
50%        0.008403      0.005631
75%        0.086738      0.011129
max        6.076923      0.541387
INFO:main.py:

Transform data

INFO:transform_data_nn.py:Train data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996]
INFO:transform_data_nn.py:Train_data: (933070, 158)

INFO:transform_data_nn.py:Test data years: [1997]
INFO:transform_data_nn.py:Test_data: (74780, 158)

INFO:transform_data_nn.py:Retrain data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997]
INFO:transform_data_nn.py:Retrain_data: (1007850, 158)

INFO:transform_data_nn.py:Prediction data years: [1998]
INFO:transform_data_nn.py:Prediction_data: (74990, 158)

INFO:main.py:

Generate X and y with train_data and test_data

INFO:main.py:
            x_train_tf: torch.Size([933070, 103])
            y_train_tf: torch.Size([933070])

            x_test_tf: torch.Size([74780, 103])
            y_test_tf: torch.Size([74780])

        
INFO:main.py:

Generate X and y with retrain_data and prediction_data

INFO:main.py:
            x_retrain_tf: torch.Size([1007850, 103])
            y_retrain_tf: torch.Size([1007850])

            x_prediction_tf: torch.Size([74990, 103])
            y_prediction_tf: torch.Size([74990])

        
INFO:main.py:

Create dataset

INFO:main.py:Create train_dataset
INFO:main.py:train_dataset first example: (tensor([ 2.0822e-01,  9.0332e-01,  9.5628e-02, -7.4014e-01,  3.6385e-02,
        -5.5142e-01, -3.3117e-02, -2.7570e-01,  6.0245e-01, -2.1108e-01,
        -7.9253e-01, -5.3672e-02, -6.7953e-01, -4.4504e-01, -2.4209e-01,
        -1.5750e-02, -4.0083e-01,  8.5839e-02, -1.5045e-01,  7.3602e-01,
        -5.4441e-01, -1.2721e-01, -1.8383e-01, -6.5177e-03, -4.9129e-02,
        -2.7841e-01, -6.1463e-01, -2.6265e-02,  6.2690e-01,  1.5680e+00,
         4.5008e-01, -1.5604e-01,  8.6347e-01,  1.8179e-01, -4.3463e-01,
        -2.5355e-01,  1.7876e-01,  2.8057e-01,  2.9758e-03, -1.1157e+00,
        -2.2965e-01,  2.1313e-01,  4.0304e-01,  1.6121e-01, -5.3819e-02,
        -6.8240e-01,  6.0901e-02, -7.5781e-02, -5.2430e-01, -1.8108e-01,
        -3.3966e-01,  5.1763e-01, -4.7646e-01,  2.4772e-01, -1.3961e-02,
        -3.1637e-01, -8.6616e-01, -5.8814e-01, -5.5143e-01, -1.9432e-01,
        -1.9908e-02, -5.5093e-01, -6.8459e-01, -4.4576e-01, -3.5681e-01,
        -4.6418e-01,  7.6606e-01, -2.9531e-01, -5.2308e-01, -5.5852e-01,
        -6.7927e-01, -3.3963e-01,  3.4202e-02, -8.1351e-01,  2.2111e-01,
        -8.3719e-01,  3.0954e-01,  3.4964e-01,  7.9928e-01,  7.2578e-01,
        -1.1656e+00,  2.4186e-01,  1.2872e-03, -1.1198e-01, -9.6833e-02,
         2.8074e-01, -3.9765e-01, -8.0440e-01, -6.2865e-01, -7.8400e-01,
         1.4390e-01, -1.0372e-01,  2.7864e-02, -4.1521e-01, -5.9714e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([2673]), tensor(0.2117))
INFO:main.py:Create test_dataset
INFO:main.py:test_dataset first example: (tensor([-8.7624e-01,  9.3279e-02,  5.4191e-01,  1.1032e+00,  4.0103e-04,
        -4.3181e-01, -5.7865e-01, -6.4662e-01, -2.5776e-01, -3.8349e-02,
        -6.9573e-01, -1.2136e-01, -6.7953e-01, -6.0545e-02, -1.3694e-01,
        -6.6955e-01, -3.1891e-01, -1.0781e+00,  6.3013e-02,  3.7440e-02,
         2.9719e-01,  1.6903e+00,  2.1873e+00, -3.6312e-01, -2.2407e-01,
        -8.6230e-01, -6.5672e-01, -5.8016e-01, -5.9402e-01,  1.0002e+00,
         9.0759e-01, -1.5422e-01,  3.2892e-01, -5.5723e+00, -7.9018e-01,
        -6.3968e-02,  1.0862e-01, -8.1783e-01, -2.4149e-01, -8.7506e-01,
        -3.0165e-02, -8.7484e-02,  2.7561e-01, -1.7700e-01, -9.2080e-02,
        -1.9208e-01, -3.6215e-01, -4.7759e-01, -3.5181e-01,  1.3094e-01,
        -9.9289e-01,  3.3148e-01, -4.7646e-01, -6.4999e-01, -8.1265e-01,
        -6.1562e-01,  2.9607e-02, -6.6519e-01, -3.5054e-01, -3.3607e-01,
        -1.3260e-01, -2.5537e-01, -8.2658e-01, -3.9005e-01, -3.2130e-02,
        -5.3829e-01, -1.3639e-01, -7.3257e-01, -5.2308e-01, -6.8581e-01,
         4.3458e-03,  1.2866e-02,  3.4202e-02,  3.4487e-01, -8.5501e-02,
         4.4181e-02, -6.5434e-02,  2.1960e-01,  1.0100e-02,  7.2578e-01,
         8.6614e-01,  9.3752e-01,  1.2872e-03,  6.2599e-02, -3.1440e-01,
        -2.5983e-01, -7.2932e-02, -7.1743e-01, -3.8007e-01, -5.2244e-01,
         7.4768e-02, -4.5563e-01, -5.3923e-01, -6.5818e-01, -2.7943e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([3724]), tensor(0.0615))
INFO:main.py:Create retrain_dataset
INFO:main.py:retrain_dataset first example: (tensor([ 2.0531e-01,  9.3470e-01,  9.0740e-02, -7.3547e-01,  1.8896e-02,
        -5.5498e-01, -3.3743e-02, -2.7719e-01,  6.3921e-01, -2.2552e-01,
        -7.8381e-01, -4.9296e-02, -6.9252e-01, -4.5947e-01, -2.4218e-01,
        -1.1608e-02, -4.0415e-01,  9.3921e-02, -1.4143e-01,  7.4368e-01,
        -5.5664e-01, -1.2631e-01, -1.8847e-01, -1.1397e-02, -5.2156e-02,
        -2.8282e-01, -6.1873e-01, -1.5603e-02,  6.1309e-01,  1.6217e+00,
         4.4085e-01, -1.6506e-01,  8.7952e-01,  1.8443e-01, -4.2768e-01,
        -2.5999e-01,  1.6609e-01,  3.0835e-01, -1.0307e-02, -1.1172e+00,
        -2.2802e-01,  2.1519e-01,  3.9907e-01,  1.6768e-01, -5.9209e-02,
        -6.9134e-01,  5.9617e-02, -7.9472e-02, -5.2800e-01, -1.8920e-01,
        -3.4957e-01,  5.0316e-01, -4.7494e-01,  2.5416e-01, -2.0190e-02,
        -3.1387e-01, -8.4473e-01, -5.8042e-01, -5.5029e-01, -1.9296e-01,
        -1.9407e-02, -5.5068e-01, -6.8469e-01, -4.4679e-01, -3.6356e-01,
        -4.6622e-01,  8.0927e-01, -2.9817e-01, -5.4950e-01, -5.6257e-01,
        -6.7602e-01, -3.4948e-01,  2.9833e-02, -8.2296e-01,  2.2765e-01,
        -8.2573e-01,  3.1171e-01,  3.5125e-01,  8.1120e-01,  7.3742e-01,
        -1.1785e+00,  2.5211e-01,  5.9617e-04, -1.1014e-01, -1.0353e-01,
         3.0922e-01, -3.8326e-01, -8.1717e-01, -6.2833e-01, -8.0090e-01,
         1.4433e-01, -9.0178e-02,  3.0573e-02, -4.2967e-01, -5.8613e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([2857]), tensor(0.2117))
INFO:main.py:Create prediction_dataset
INFO:main.py:prediction_dataset first example: (tensor([-4.5164e-01,  4.4167e-01, -1.6667e-01,  1.0950e+00, -6.2500e-02,
        -5.9236e-01, -1.2170e+00, -8.8254e-01, -2.3209e-01, -6.0518e-01,
        -8.3480e-01, -1.6854e-01, -6.9252e-01, -1.9199e-01, -4.1582e-01,
         7.9551e-02, -3.6645e-01, -1.5521e-01, -1.4143e-01,  1.2139e+00,
         6.9609e-02, -1.0212e+00, -5.1733e-01, -2.7625e-01, -8.0370e-01,
        -8.6302e-01, -6.6875e-01, -1.5603e-02, -1.1217e+00,  1.0888e+00,
        -2.8636e-01, -2.1493e-01,  3.2892e-01,  1.8443e-01, -8.2162e-01,
        -6.3664e-01, -1.4927e-01, -8.1172e-01, -2.2890e-01, -8.9977e-01,
        -1.9046e-01,  1.6260e-01,  3.3519e-01, -1.0581e-01, -1.1909e-01,
        -6.4000e-01, -7.6144e-02,  1.9822e-01, -3.5580e-01,  2.4750e-02,
        -1.6571e+00,  4.9174e-01, -4.7494e-01, -1.3180e+00, -8.0829e-01,
        -6.3944e-01,  2.9333e-02, -6.8360e-01, -1.7126e-01, -3.2119e-01,
        -4.7026e-01, -6.3820e-01, -1.4603e+00,  6.1075e-01, -2.8201e-02,
        -9.5555e-01,  4.8060e-01,  1.1689e+00, -5.4950e-01, -7.7403e-01,
         1.8254e-03,  4.1208e-03,  2.9833e-02, -7.4832e-01, -1.6966e-01,
        -1.2644e-01, -2.0657e-01,  1.9235e-01, -7.3823e-01,  7.3742e-01,
        -5.1847e-01,  1.2667e+00,  5.9617e-04, -1.1014e-01,  6.7808e-04,
        -1.2743e-01,  1.0981e+00,  7.7731e-01, -4.0600e-01, -5.6881e-01,
        -6.1478e-02, -5.9307e-01, -6.6512e-01, -4.8616e-01,  2.6185e-02,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([3679]), tensor(0.))
INFO:main.py:

Create dataloader

INFO:main.py:Create train and test dataloader
INFO:main.py:Create retrain and prediction dataloader
INFO:main.py:

Hyperparameters tuning with Ray Tune

INFO:main.py:Training data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996]
INFO:main.py:Testing data year: 1997
INFO:main.py:

            ray_results_path: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
            num_samples: 60
            max_num_epochs: 20
            num_cpus: 60
            cpus_per_trial: 1
            num_gpus: 2
            gpus_per_trial: 0
            continuous_dim: 102
            num_embeddings: 12495
            device: cuda
            
2024-07-05 04:27:12,553	INFO worker.py:1753 -- Started a local Ray instance.
2024-07-05 04:27:12,579	INFO packaging.py:530 -- Creating a file package for local directory '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src'.
2024-07-05 04:27:12,600	INFO packaging.py:358 -- Pushing file package 'gcs://_ray_pkg_3935e91dc5487a1d.zip' (1.20MiB) to Ray cluster...
2024-07-05 04:27:12,605	INFO packaging.py:371 -- Successfully pushed file package 'gcs://_ray_pkg_3935e91dc5487a1d.zip'.
2024-07-05 04:27:15,627	WARNING tune.py:902 -- AIR_VERBOSITY is set, ignoring passed-in ProgressReporter for now.
2024-07-05 04:49:20,112	INFO tune.py:1009 -- Wrote the latest version of all result files and experiment state to '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results/train_fnn_2024-07-05_04-27-15' in 0.1528s.
INFO:model_data_nn.py:Best trial config: {'continuous_dim': 102, 'hidden_dim': 25, 'num_layers': 4, 'num_embeddings': 12495, 'embedding_dim': 10, 'dropout_rate': 0.20222524647168127, 'lr': 0.00018773201057654924, 'weight_decay': 1.1045375019318383e-06, 'num_epochs': 20, 'num_gpus': 2}
INFO:model_data_nn.py:Best trial training loss: 0.03166823530932492
INFO:model_data_nn.py:Best trial testing loss: 0.03136360907576915
INFO:main.py:Ray Tune results have been saved to: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
INFO:main.py:Best trial directory: /tmp/ray/session_2024-07-05_04-27-09_845677_736015/artifacts/2024-07-05_04-27-15/train_fnn_2024-07-05_04-27-15/driver_artifacts/train_fnn_87fb2_00050_50_dropout_rate=0.2022,embedding_dim=10,hidden_dim=25,lr=0.0002,num_layers=4,weight_decay=0.0000_2024-07-05_04-27-15
INFO:main.py:

Retrain a new model with data in years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997]

            Using the optimized hyperparameters: {'continuous_dim': 102, 'hidden_dim': 25, 'num_layers': 4, 'num_embeddings': 13408, 'embedding_dim': 10, 'dropout_rate': 0.20222524647168127, 'lr': 0.00018773201057654924, 'weight_decay': 1.1045375019318383e-06, 'num_epochs': 20, 'num_gpus': 2}

INFO:model_data_nn.py:Epoch 1/20, metrics: {'avg_train_loss': 3.219190607723847, 'avg_test_loss': 0.06448633086298665}
INFO:model_data_nn.py:Epoch 2/20, metrics: {'avg_train_loss': 0.0334394368763416, 'avg_test_loss': 0.05390265812849429}
INFO:model_data_nn.py:Epoch 3/20, metrics: {'avg_train_loss': 0.03219578753040755, 'avg_test_loss': 0.05391324809657048}
INFO:model_data_nn.py:Epoch 4/20, metrics: {'avg_train_loss': 0.03208530461545755, 'avg_test_loss': 0.05369115088599076}
INFO:model_data_nn.py:Epoch 5/20, metrics: {'avg_train_loss': 0.03200031773846976, 'avg_test_loss': 0.053691463352660986}
INFO:model_data_nn.py:Epoch 6/20, metrics: {'avg_train_loss': 0.03193793189907028, 'avg_test_loss': 0.05329314687483191}
INFO:model_data_nn.py:Epoch 7/20, metrics: {'avg_train_loss': 0.03189709056809863, 'avg_test_loss': 0.05322194425230242}
INFO:model_data_nn.py:Epoch 8/20, metrics: {'avg_train_loss': 0.03187449070867951, 'avg_test_loss': 0.053489584132469556}
INFO:model_data_nn.py:Epoch 9/20, metrics: {'avg_train_loss': 0.031840228620521084, 'avg_test_loss': 0.053409652498394966}
INFO:model_data_nn.py:Epoch 10/20, metrics: {'avg_train_loss': 0.03180717252330192, 'avg_test_loss': 0.05323149392432168}
INFO:model_data_nn.py:Epoch 11/20, metrics: {'avg_train_loss': 0.031795311436021136, 'avg_test_loss': 0.053185228604836064}
INFO:model_data_nn.py:Epoch 12/20, metrics: {'avg_train_loss': 0.0317771988581409, 'avg_test_loss': 0.05312031589896631}
INFO:model_data_nn.py:Epoch 13/20, metrics: {'avg_train_loss': 0.03177479396810519, 'avg_test_loss': 0.053156832693964755}
INFO:model_data_nn.py:Epoch 14/20, metrics: {'avg_train_loss': 0.03175070157614299, 'avg_test_loss': 0.053107729845969544}
INFO:model_data_nn.py:Epoch 15/20, metrics: {'avg_train_loss': 0.03174394605764568, 'avg_test_loss': 0.05316292720055366}
INFO:model_data_nn.py:Epoch 16/20, metrics: {'avg_train_loss': 0.031724871026604214, 'avg_test_loss': 0.05306092981541523}
INFO:model_data_nn.py:Epoch 17/20, metrics: {'avg_train_loss': 0.031715144637351395, 'avg_test_loss': 0.05305911151933843}
INFO:model_data_nn.py:Epoch 18/20, metrics: {'avg_train_loss': 0.0316905591281825, 'avg_test_loss': 0.052914803536170174}
INFO:model_data_nn.py:Epoch 19/20, metrics: {'avg_train_loss': 0.031685748275327774, 'avg_test_loss': 0.05280397114830263}
INFO:model_data_nn.py:Epoch 20/20, metrics: {'avg_train_loss': 0.031676849468020025, 'avg_test_loss': 0.05283352273513178}
INFO:main.py:Making prediction for data in year: 1997
INFO:main.py:Prediction data shape: (74990,)
/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src/main.py:372: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  prediction_data['pred'] = predictions
INFO:main.py:Root Mean Squared Error for Prediction in 1998: 0.22986928782391536
INFO:main.py:Prediction Stats:                 ret          pred
count  74990.000000  74990.000000
mean       0.002056      0.010376
std        0.231933      0.022916
min       -0.973684     -0.149894
25%       -0.098592      0.002708
50%       -0.007353      0.011135
75%        0.079833      0.017197
max       12.666667      0.349768
INFO:main.py:

Transform data

INFO:transform_data_nn.py:Train data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997]
INFO:transform_data_nn.py:Train_data: (1007850, 158)

INFO:transform_data_nn.py:Test data years: [1998]
INFO:transform_data_nn.py:Test_data: (74990, 158)

INFO:transform_data_nn.py:Retrain data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998]
INFO:transform_data_nn.py:Retrain_data: (1082840, 158)

INFO:transform_data_nn.py:Prediction data years: [1999]
INFO:transform_data_nn.py:Prediction_data: (70860, 158)

INFO:main.py:

Generate X and y with train_data and test_data

INFO:main.py:
            x_train_tf: torch.Size([1007850, 103])
            y_train_tf: torch.Size([1007850])

            x_test_tf: torch.Size([74990, 103])
            y_test_tf: torch.Size([74990])

        
INFO:main.py:

Generate X and y with retrain_data and prediction_data

INFO:main.py:
            x_retrain_tf: torch.Size([1082840, 103])
            y_retrain_tf: torch.Size([1082840])

            x_prediction_tf: torch.Size([70860, 103])
            y_prediction_tf: torch.Size([70860])

        
INFO:main.py:

Create dataset

INFO:main.py:Create train_dataset
INFO:main.py:train_dataset first example: (tensor([ 2.0531e-01,  9.3470e-01,  9.0740e-02, -7.3547e-01,  1.8896e-02,
        -5.5498e-01, -3.3743e-02, -2.7719e-01,  6.3921e-01, -2.2552e-01,
        -7.8381e-01, -4.9296e-02, -6.9252e-01, -4.5947e-01, -2.4218e-01,
        -1.1608e-02, -4.0415e-01,  9.3921e-02, -1.4143e-01,  7.4368e-01,
        -5.5664e-01, -1.2631e-01, -1.8847e-01, -1.1397e-02, -5.2156e-02,
        -2.8282e-01, -6.1873e-01, -1.5603e-02,  6.1309e-01,  1.6217e+00,
         4.4085e-01, -1.6506e-01,  8.7952e-01,  1.8443e-01, -4.2768e-01,
        -2.5999e-01,  1.6609e-01,  3.0835e-01, -1.0307e-02, -1.1172e+00,
        -2.2802e-01,  2.1519e-01,  3.9907e-01,  1.6768e-01, -5.9209e-02,
        -6.9134e-01,  5.9617e-02, -7.9472e-02, -5.2800e-01, -1.8920e-01,
        -3.4957e-01,  5.0316e-01, -4.7494e-01,  2.5416e-01, -2.0190e-02,
        -3.1387e-01, -8.4473e-01, -5.8042e-01, -5.5029e-01, -1.9296e-01,
        -1.9407e-02, -5.5068e-01, -6.8469e-01, -4.4679e-01, -3.6356e-01,
        -4.6622e-01,  8.0927e-01, -2.9817e-01, -5.4950e-01, -5.6257e-01,
        -6.7602e-01, -3.4948e-01,  2.9833e-02, -8.2296e-01,  2.2765e-01,
        -8.2573e-01,  3.1171e-01,  3.5125e-01,  8.1120e-01,  7.3742e-01,
        -1.1785e+00,  2.5211e-01,  5.9617e-04, -1.1014e-01, -1.0353e-01,
         3.0922e-01, -3.8326e-01, -8.1717e-01, -6.2833e-01, -8.0090e-01,
         1.4433e-01, -9.0178e-02,  3.0573e-02, -4.2967e-01, -5.8613e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([2857]), tensor(0.2117))
INFO:main.py:Create test_dataset
INFO:main.py:test_dataset first example: (tensor([-4.5164e-01,  4.4167e-01, -1.6667e-01,  1.0950e+00, -6.2500e-02,
        -5.9236e-01, -1.2170e+00, -8.8254e-01, -2.3209e-01, -6.0518e-01,
        -8.3480e-01, -1.6854e-01, -6.9252e-01, -1.9199e-01, -4.1582e-01,
         7.9551e-02, -3.6645e-01, -1.5521e-01, -1.4143e-01,  1.2139e+00,
         6.9609e-02, -1.0212e+00, -5.1733e-01, -2.7625e-01, -8.0370e-01,
        -8.6302e-01, -6.6875e-01, -1.5603e-02, -1.1217e+00,  1.0888e+00,
        -2.8636e-01, -2.1493e-01,  3.2892e-01,  1.8443e-01, -8.2162e-01,
        -6.3664e-01, -1.4927e-01, -8.1172e-01, -2.2890e-01, -8.9977e-01,
        -1.9046e-01,  1.6260e-01,  3.3519e-01, -1.0581e-01, -1.1909e-01,
        -6.4000e-01, -7.6144e-02,  1.9822e-01, -3.5580e-01,  2.4750e-02,
        -1.6571e+00,  4.9174e-01, -4.7494e-01, -1.3180e+00, -8.0829e-01,
        -6.3944e-01,  2.9333e-02, -6.8360e-01, -1.7126e-01, -3.2119e-01,
        -4.7026e-01, -6.3820e-01, -1.4603e+00,  6.1075e-01, -2.8201e-02,
        -9.5555e-01,  4.8060e-01,  1.1689e+00, -5.4950e-01, -7.7403e-01,
         1.8254e-03,  4.1208e-03,  2.9833e-02, -7.4832e-01, -1.6966e-01,
        -1.2644e-01, -2.0657e-01,  1.9235e-01, -7.3823e-01,  7.3742e-01,
        -5.1847e-01,  1.2667e+00,  5.9617e-04, -1.1014e-01,  6.7808e-04,
        -1.2743e-01,  1.0981e+00,  7.7731e-01, -4.0600e-01, -5.6881e-01,
        -6.1478e-02, -5.9307e-01, -6.6512e-01, -4.8616e-01,  2.6185e-02,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([3679]), tensor(0.))
INFO:main.py:Create retrain_dataset
INFO:main.py:retrain_dataset first example: (tensor([ 0.2016,  0.9628,  0.0885, -0.7329,  0.0042, -0.5620, -0.0339, -0.2783,
         0.6779, -0.2315, -0.7776, -0.0435, -0.7062, -0.4713, -0.2404, -0.0090,
        -0.4082,  0.0931, -0.1206,  0.7522, -0.5341, -0.1474, -0.1881, -0.0152,
        -0.0514, -0.2886, -0.6265, -0.0272,  0.6048,  1.6689,  0.4341, -0.1706,
         0.8951,  0.1863, -0.4212, -0.2660,  0.1488,  0.3376, -0.0275, -1.1224,
        -0.2260,  0.2235,  0.3934,  0.1806, -0.0692, -0.6972,  0.0633, -0.0698,
        -0.5376, -0.1719, -0.3595,  0.4954, -0.4736,  0.2516, -0.0275, -0.3100,
        -0.8240, -0.5786, -0.5464, -0.1929, -0.0209, -0.5475, -0.6833, -0.4449,
        -0.3645, -0.4676,  0.8470, -0.3003, -0.5721, -0.5675, -0.6754, -0.3658,
         0.0216, -0.8329,  0.2367, -0.8177,  0.3155,  0.3537,  0.8250,  0.7498,
        -1.1903,  0.2581,  0.0035, -0.1422, -0.1113,  0.3380, -0.3656, -0.8279,
        -0.6397, -0.8245,  0.1465, -0.0806,  0.0352, -0.4431, -0.5749,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000]), tensor([2991]), tensor(0.2117))
INFO:main.py:Create prediction_dataset
INFO:main.py:prediction_dataset first example: (tensor([-1.5727e-01, -7.0592e-01, -4.7133e-01,  1.0919e+00, -3.8367e-01,
        -5.9320e-01, -1.5721e+00, -9.2094e-01, -2.0708e-01, -2.7443e-01,
        -8.4150e-01, -1.5802e-01, -7.0621e-01,  2.9504e-01, -1.9354e-02,
         1.6828e-01, -3.5904e-01, -5.7219e-01,  1.3177e-01, -6.6585e-01,
         2.9747e-01, -9.8527e-01, -9.1510e-02, -1.7185e-01, -5.8525e-01,
        -3.9615e-01, -6.7184e-01, -2.7184e-02, -5.1272e-01,  1.1290e+00,
         3.4878e-01, -1.9333e-01,  3.8535e-01, -5.4581e+00, -8.2008e-01,
        -6.5236e-01, -4.1124e-01, -7.8636e-01, -6.7286e-01, -1.0827e+00,
        -1.9693e-01, -5.8585e-01, -4.8403e-01, -1.3597e-01, -3.5644e-01,
        -7.6219e-01, -1.2866e-01,  1.4285e-01, -4.4282e-01,  1.4407e-01,
         2.9423e-01,  4.9538e-01, -4.7357e-01, -9.3407e-01, -8.0451e-01,
        -6.0347e-01,  2.8829e-02, -6.8486e-01,  2.1354e+00, -2.3243e-01,
        -7.1023e-02,  2.2935e+00,  7.5881e-01, -5.9881e-01, -2.8297e-02,
         3.1398e-01, -5.8318e-01,  3.6408e-01,  1.2414e+00, -4.6094e-01,
        -2.0330e-03,  1.7169e-02,  2.1629e-02, -7.7737e-01, -1.2129e-01,
        -1.5272e-01, -1.5787e-01,  2.6625e-01,  1.6455e+00,  7.4979e-01,
         2.3925e-01,  1.1313e+00,  3.5299e-03,  8.0385e-02, -1.5978e-01,
        -5.8500e-02,  4.2787e-01,  1.2652e-01, -4.4195e-01, -6.1799e-01,
         8.1579e-02, -5.7977e-01,  6.9481e-02, -5.6857e-01,  9.7148e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([3464]), tensor(0.))
INFO:main.py:

Create dataloader

INFO:main.py:Create train and test dataloader
INFO:main.py:Create retrain and prediction dataloader
INFO:main.py:

Hyperparameters tuning with Ray Tune

INFO:main.py:Training data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997]
INFO:main.py:Testing data year: 1998
INFO:main.py:

            ray_results_path: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
            num_samples: 60
            max_num_epochs: 20
            num_cpus: 60
            cpus_per_trial: 1
            num_gpus: 2
            gpus_per_trial: 0
            continuous_dim: 102
            num_embeddings: 13408
            device: cuda
            
2024-07-05 06:58:28,745	INFO worker.py:1753 -- Started a local Ray instance.
2024-07-05 06:58:28,772	INFO packaging.py:530 -- Creating a file package for local directory '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src'.
2024-07-05 06:58:28,800	INFO packaging.py:358 -- Pushing file package 'gcs://_ray_pkg_3935e91dc5487a1d.zip' (1.20MiB) to Ray cluster...
2024-07-05 06:58:28,808	INFO packaging.py:371 -- Successfully pushed file package 'gcs://_ray_pkg_3935e91dc5487a1d.zip'.
2024-07-05 06:58:31,838	WARNING tune.py:902 -- AIR_VERBOSITY is set, ignoring passed-in ProgressReporter for now.
2024-07-05 07:24:36,152	INFO tune.py:1009 -- Wrote the latest version of all result files and experiment state to '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results/train_fnn_2024-07-05_06-58-31' in 0.1227s.
INFO:model_data_nn.py:Best trial config: {'continuous_dim': 102, 'hidden_dim': 35, 'num_layers': 3, 'num_embeddings': 13408, 'embedding_dim': 15, 'dropout_rate': 0.14076636666981, 'lr': 0.0002566960992206887, 'weight_decay': 2.5757392938302746e-05, 'num_epochs': 20, 'num_gpus': 2}
INFO:model_data_nn.py:Best trial training loss: 0.03160818212421728
INFO:model_data_nn.py:Best trial testing loss: 0.0528735759534552
INFO:main.py:Ray Tune results have been saved to: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
INFO:main.py:Best trial directory: /tmp/ray/session_2024-07-05_06-58-26_066172_736015/artifacts/2024-07-05_06-58-31/train_fnn_2024-07-05_06-58-31/driver_artifacts/train_fnn_a9d2f_00024_24_dropout_rate=0.1408,embedding_dim=15,hidden_dim=35,lr=0.0003,num_layers=3,weight_decay=0.0000_2024-07-05_06-58-32
INFO:main.py:

Retrain a new model with data in years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998]

            Using the optimized hyperparameters: {'continuous_dim': 102, 'hidden_dim': 35, 'num_layers': 3, 'num_embeddings': 14019, 'embedding_dim': 15, 'dropout_rate': 0.14076636666981, 'lr': 0.0002566960992206887, 'weight_decay': 2.5757392938302746e-05, 'num_epochs': 20, 'num_gpus': 2}

INFO:model_data_nn.py:Epoch 1/20, metrics: {'avg_train_loss': 3.9177974782197187, 'avg_test_loss': 0.06167694175656253}
INFO:model_data_nn.py:Epoch 2/20, metrics: {'avg_train_loss': 0.0340840633272746, 'avg_test_loss': 0.06087015857012263}
INFO:model_data_nn.py:Epoch 3/20, metrics: {'avg_train_loss': 0.03367289532444948, 'avg_test_loss': 0.061083802778529345}
INFO:model_data_nn.py:Epoch 4/20, metrics: {'avg_train_loss': 0.03346610796510134, 'avg_test_loss': 0.0605073790637514}
INFO:model_data_nn.py:Epoch 5/20, metrics: {'avg_train_loss': 0.03333937436161699, 'avg_test_loss': 0.06060740282836401}
INFO:model_data_nn.py:Epoch 6/20, metrics: {'avg_train_loss': 0.03327674429046858, 'avg_test_loss': 0.0606247069673875}
INFO:model_data_nn.py:Epoch 7/20, metrics: {'avg_train_loss': 0.03323353642727695, 'avg_test_loss': 0.06096247565724117}
INFO:model_data_nn.py:Epoch 8/20, metrics: {'avg_train_loss': 0.03320121945974023, 'avg_test_loss': 0.061037952080368996}
INFO:model_data_nn.py:Epoch 9/20, metrics: {'avg_train_loss': 0.03319090515238631, 'avg_test_loss': 0.0607953317100283}
INFO:model_data_nn.py:Epoch 10/20, metrics: {'avg_train_loss': 0.03316708435183369, 'avg_test_loss': 0.0607027324330102}
INFO:model_data_nn.py:Epoch 11/20, metrics: {'avg_train_loss': 0.03314601461574805, 'avg_test_loss': 0.06022892521344636}
INFO:model_data_nn.py:Epoch 12/20, metrics: {'avg_train_loss': 0.033141529841577505, 'avg_test_loss': 0.060288585948552735}
INFO:model_data_nn.py:Epoch 13/20, metrics: {'avg_train_loss': 0.033132868620564825, 'avg_test_loss': 0.06083571380390937}
INFO:model_data_nn.py:Epoch 14/20, metrics: {'avg_train_loss': 0.03313874554749904, 'avg_test_loss': 0.0609584358446838}
INFO:model_data_nn.py:Epoch 15/20, metrics: {'avg_train_loss': 0.033128042904171325, 'avg_test_loss': 0.06085562713642601}
INFO:model_data_nn.py:Epoch 16/20, metrics: {'avg_train_loss': 0.03309883269443932, 'avg_test_loss': 0.06091089477419638}
INFO:model_data_nn.py:Epoch 17/20, metrics: {'avg_train_loss': 0.033129098019992, 'avg_test_loss': 0.060490118072364846}
INFO:model_data_nn.py:Epoch 18/20, metrics: {'avg_train_loss': 0.03311287442565704, 'avg_test_loss': 0.060356104737214936}
INFO:model_data_nn.py:Epoch 19/20, metrics: {'avg_train_loss': 0.03310426040200283, 'avg_test_loss': 0.06100923840934915}
INFO:model_data_nn.py:Epoch 20/20, metrics: {'avg_train_loss': 0.03311400234745485, 'avg_test_loss': 0.06045541508435961}
INFO:main.py:Making prediction for data in year: 1998
INFO:main.py:Prediction data shape: (70860,)
/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src/main.py:372: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  prediction_data['pred'] = predictions
INFO:main.py:Root Mean Squared Error for Prediction in 1999: 0.24587413092151886
INFO:main.py:Prediction Stats:                 ret          pred
count  70860.000000  70860.000000
mean       0.025181      0.010859
std        0.246494      0.021091
min       -0.959091     -0.163566
25%       -0.086957      0.003276
50%       -0.005525      0.009617
75%        0.088235      0.017249
max        9.500000      0.453898
INFO:main.py:

Transform data

INFO:transform_data_nn.py:Train data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998]
INFO:transform_data_nn.py:Train_data: (1082840, 158)

INFO:transform_data_nn.py:Test data years: [1999]
INFO:transform_data_nn.py:Test_data: (70860, 158)

INFO:transform_data_nn.py:Retrain data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999]
INFO:transform_data_nn.py:Retrain_data: (1153700, 158)

INFO:transform_data_nn.py:Prediction data years: [2000]
INFO:transform_data_nn.py:Prediction_data: (67711, 158)

INFO:main.py:

Generate X and y with train_data and test_data

INFO:main.py:
            x_train_tf: torch.Size([1082840, 103])
            y_train_tf: torch.Size([1082840])

            x_test_tf: torch.Size([70860, 103])
            y_test_tf: torch.Size([70860])

        
INFO:main.py:

Generate X and y with retrain_data and prediction_data

INFO:main.py:
            x_retrain_tf: torch.Size([1153700, 103])
            y_retrain_tf: torch.Size([1153700])

            x_prediction_tf: torch.Size([67711, 103])
            y_prediction_tf: torch.Size([67711])

        
INFO:main.py:

Create dataset

INFO:main.py:Create train_dataset
INFO:main.py:train_dataset first example: (tensor([ 0.2016,  0.9628,  0.0885, -0.7329,  0.0042, -0.5620, -0.0339, -0.2783,
         0.6779, -0.2315, -0.7776, -0.0435, -0.7062, -0.4713, -0.2404, -0.0090,
        -0.4082,  0.0931, -0.1206,  0.7522, -0.5341, -0.1474, -0.1881, -0.0152,
        -0.0514, -0.2886, -0.6265, -0.0272,  0.6048,  1.6689,  0.4341, -0.1706,
         0.8951,  0.1863, -0.4212, -0.2660,  0.1488,  0.3376, -0.0275, -1.1224,
        -0.2260,  0.2235,  0.3934,  0.1806, -0.0692, -0.6972,  0.0633, -0.0698,
        -0.5376, -0.1719, -0.3595,  0.4954, -0.4736,  0.2516, -0.0275, -0.3100,
        -0.8240, -0.5786, -0.5464, -0.1929, -0.0209, -0.5475, -0.6833, -0.4449,
        -0.3645, -0.4676,  0.8470, -0.3003, -0.5721, -0.5675, -0.6754, -0.3658,
         0.0216, -0.8329,  0.2367, -0.8177,  0.3155,  0.3537,  0.8250,  0.7498,
        -1.1903,  0.2581,  0.0035, -0.1422, -0.1113,  0.3380, -0.3656, -0.8279,
        -0.6397, -0.8245,  0.1465, -0.0806,  0.0352, -0.4431, -0.5749,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000]), tensor([2991]), tensor(0.2117))
INFO:main.py:Create test_dataset
INFO:main.py:test_dataset first example: (tensor([-1.5727e-01, -7.0592e-01, -4.7133e-01,  1.0919e+00, -3.8367e-01,
        -5.9320e-01, -1.5721e+00, -9.2094e-01, -2.0708e-01, -2.7443e-01,
        -8.4150e-01, -1.5802e-01, -7.0621e-01,  2.9504e-01, -1.9354e-02,
         1.6828e-01, -3.5904e-01, -5.7219e-01,  1.3177e-01, -6.6585e-01,
         2.9747e-01, -9.8527e-01, -9.1510e-02, -1.7185e-01, -5.8525e-01,
        -3.9615e-01, -6.7184e-01, -2.7184e-02, -5.1272e-01,  1.1290e+00,
         3.4878e-01, -1.9333e-01,  3.8535e-01, -5.4581e+00, -8.2008e-01,
        -6.5236e-01, -4.1124e-01, -7.8636e-01, -6.7286e-01, -1.0827e+00,
        -1.9693e-01, -5.8585e-01, -4.8403e-01, -1.3597e-01, -3.5644e-01,
        -7.6219e-01, -1.2866e-01,  1.4285e-01, -4.4282e-01,  1.4407e-01,
         2.9423e-01,  4.9538e-01, -4.7357e-01, -9.3407e-01, -8.0451e-01,
        -6.0347e-01,  2.8829e-02, -6.8486e-01,  2.1354e+00, -2.3243e-01,
        -7.1023e-02,  2.2935e+00,  7.5881e-01, -5.9881e-01, -2.8297e-02,
         3.1398e-01, -5.8318e-01,  3.6408e-01,  1.2414e+00, -4.6094e-01,
        -2.0330e-03,  1.7169e-02,  2.1629e-02, -7.7737e-01, -1.2129e-01,
        -1.5272e-01, -1.5787e-01,  2.6625e-01,  1.6455e+00,  7.4979e-01,
         2.3925e-01,  1.1313e+00,  3.5299e-03,  8.0385e-02, -1.5978e-01,
        -5.8500e-02,  4.2787e-01,  1.2652e-01, -4.4195e-01, -6.1799e-01,
         8.1579e-02, -5.7977e-01,  6.9481e-02, -5.6857e-01,  9.7148e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([3464]), tensor(0.))
INFO:main.py:Create retrain_dataset
INFO:main.py:retrain_dataset first example: (tensor([ 0.1987,  0.9880,  0.0893, -0.7359, -0.0063, -0.5701, -0.0331, -0.2768,
         0.7059, -0.2404, -0.7714, -0.0385, -0.7146, -0.4824, -0.2415, -0.0064,
        -0.4114,  0.0874, -0.1229,  0.7574, -0.5395, -0.1361, -0.1897, -0.0105,
        -0.0512, -0.2914, -0.6311, -0.0334,  0.5970,  1.7139,  0.4126, -0.1727,
         0.9088,  0.1882, -0.4149, -0.2730,  0.1326,  0.3648, -0.0405, -1.1285,
        -0.2237,  0.2447,  0.3900,  0.1914, -0.0792, -0.7025,  0.0737, -0.0706,
        -0.5405, -0.1704, -0.3698,  0.4867, -0.4723,  0.2558, -0.0276, -0.3061,
        -0.8046, -0.5782, -0.5461, -0.1956, -0.0215, -0.5472, -0.6766, -0.4455,
        -0.3644, -0.4686,  0.8798, -0.3032, -0.5862, -0.5711, -0.6744, -0.3716,
         0.0161, -0.8445,  0.2471, -0.8023,  0.3199,  0.3559,  0.8250,  0.7593,
        -1.1997,  0.2647,  0.0041, -0.2052, -0.1172,  0.3611, -0.3484, -0.8374,
        -0.6566, -0.8439,  0.1492, -0.0686,  0.0319, -0.4469, -0.5648,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000]), tensor([3096]), tensor(0.2117))
INFO:main.py:Create prediction_dataset
INFO:main.py:prediction_dataset first example: (tensor([ 1.5562e-01, -9.1340e-01, -4.2279e-01,  1.0875e+00, -3.7429e-01,
        -5.8947e-01, -1.5519e+00, -9.2009e-01, -1.4860e-01, -6.0653e-01,
        -8.0843e-01, -1.4869e-01, -7.1459e-01,  4.1167e-01, -4.2404e-01,
         1.2363e+00, -3.8237e-01, -3.0663e-02,  3.0453e-02, -1.4314e+00,
         1.1637e-01, -1.7705e-01, -2.4682e-01,  4.7842e-01, -3.9470e-01,
        -5.0941e-01, -6.9932e-01, -3.3450e-02, -5.7031e-01,  1.2724e+00,
        -2.5142e-01, -2.1498e-01,  4.1117e-01, -5.4263e+00, -8.5621e-01,
        -3.9189e-01, -1.1396e-01, -7.6813e-01, -1.5453e-01, -1.1222e+00,
        -9.0678e-02, -2.8142e-01, -4.9448e-01, -1.3371e-01, -3.4669e-01,
        -3.6910e-01, -4.0205e-01, -9.7878e-02, -1.1777e-01, -1.2170e-01,
         2.8315e-01,  4.0764e-01, -4.7225e-01, -9.1284e-01, -7.9861e-01,
        -6.5586e-01,  2.6524e-02, -6.8578e-01, -3.9224e-01, -4.2999e-01,
        -9.0413e-01,  1.7433e-01,  2.2911e+00, -3.2968e-01, -2.6442e-02,
         3.0111e+00, -5.6434e-01,  1.7808e+00,  1.2253e+00, -3.5012e-01,
        -1.4128e-02,  2.5803e-02,  1.6126e-02, -4.2548e-01,  6.0928e-02,
        -2.0264e-01,  9.7219e-02,  1.1861e-01,  9.6094e-01,  7.5931e-01,
         8.4029e-01,  9.1158e-01,  4.0650e-03,  1.1548e-01,  1.7630e-02,
         1.5103e-01,  1.7766e-01, -8.5152e-01, -4.8259e-01, -6.6757e-01,
         2.7728e-01, -5.4717e-01, -6.5545e-01, -6.2939e-01,  6.8529e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([3335]), tensor(-0.0441))
INFO:main.py:

Create dataloader

INFO:main.py:Create train and test dataloader
INFO:main.py:Create retrain and prediction dataloader
INFO:main.py:

Hyperparameters tuning with Ray Tune

INFO:main.py:Training data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998]
INFO:main.py:Testing data year: 1999
INFO:main.py:

            ray_results_path: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
            num_samples: 60
            max_num_epochs: 20
            num_cpus: 60
            cpus_per_trial: 1
            num_gpus: 2
            gpus_per_trial: 0
            continuous_dim: 102
            num_embeddings: 14019
            device: cuda
            
2024-07-05 09:37:39,153	INFO worker.py:1753 -- Started a local Ray instance.
2024-07-05 09:37:39,189	INFO packaging.py:530 -- Creating a file package for local directory '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src'.
2024-07-05 09:37:39,225	INFO packaging.py:358 -- Pushing file package 'gcs://_ray_pkg_3935e91dc5487a1d.zip' (1.20MiB) to Ray cluster...
2024-07-05 09:37:39,234	INFO packaging.py:371 -- Successfully pushed file package 'gcs://_ray_pkg_3935e91dc5487a1d.zip'.
2024-07-05 09:37:42,482	WARNING tune.py:902 -- AIR_VERBOSITY is set, ignoring passed-in ProgressReporter for now.
2024-07-05 10:01:11,601	INFO tune.py:1009 -- Wrote the latest version of all result files and experiment state to '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results/train_fnn_2024-07-05_09-37-42' in 0.1584s.
INFO:model_data_nn.py:Best trial config: {'continuous_dim': 102, 'hidden_dim': 25, 'num_layers': 4, 'num_embeddings': 14019, 'embedding_dim': 10, 'dropout_rate': 0.20222524647168127, 'lr': 0.00018773201057654924, 'weight_decay': 1.1045375019318383e-06, 'num_epochs': 20, 'num_gpus': 2}
INFO:model_data_nn.py:Best trial training loss: 0.03287649920175015
INFO:model_data_nn.py:Best trial testing loss: 0.0601842543101846
INFO:main.py:Ray Tune results have been saved to: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
INFO:main.py:Best trial directory: /tmp/ray/session_2024-07-05_09-37-35_537097_736015/artifacts/2024-07-05_09-37-42/train_fnn_2024-07-05_09-37-42/driver_artifacts/train_fnn_e6738_00050_50_dropout_rate=0.2022,embedding_dim=10,hidden_dim=25,lr=0.0002,num_layers=4,weight_decay=0.0000_2024-07-05_09-37-42
INFO:main.py:

Retrain a new model with data in years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999]

            Using the optimized hyperparameters: {'continuous_dim': 102, 'hidden_dim': 25, 'num_layers': 4, 'num_embeddings': 14530, 'embedding_dim': 10, 'dropout_rate': 0.20222524647168127, 'lr': 0.00018773201057654924, 'weight_decay': 1.1045375019318383e-06, 'num_epochs': 20, 'num_gpus': 2}

INFO:model_data_nn.py:Epoch 1/20, metrics: {'avg_train_loss': 3.262119142908751, 'avg_test_loss': 0.07141304241109547}
INFO:model_data_nn.py:Epoch 2/20, metrics: {'avg_train_loss': 0.03552571867782947, 'avg_test_loss': 0.0684276534445119}
INFO:model_data_nn.py:Epoch 3/20, metrics: {'avg_train_loss': 0.035334807660162865, 'avg_test_loss': 0.0683150339769534}
INFO:model_data_nn.py:Epoch 4/20, metrics: {'avg_train_loss': 0.03522618732778618, 'avg_test_loss': 0.06804105839102277}
INFO:model_data_nn.py:Epoch 5/20, metrics: {'avg_train_loss': 0.0351429626816565, 'avg_test_loss': 0.06874013603761764}
INFO:model_data_nn.py:Epoch 6/20, metrics: {'avg_train_loss': 0.035072280447173795, 'avg_test_loss': 0.06843896381317555}
INFO:model_data_nn.py:Epoch 7/20, metrics: {'avg_train_loss': 0.03504259020915833, 'avg_test_loss': 0.06835391157657077}
INFO:model_data_nn.py:Epoch 8/20, metrics: {'avg_train_loss': 0.03501476814233912, 'avg_test_loss': 0.06895853431863685}
INFO:model_data_nn.py:Epoch 9/20, metrics: {'avg_train_loss': 0.03498167613465839, 'avg_test_loss': 0.06913229989306913}
INFO:model_data_nn.py:Epoch 10/20, metrics: {'avg_train_loss': 0.03495884692267043, 'avg_test_loss': 0.06826404117871716}
INFO:model_data_nn.py:Epoch 11/20, metrics: {'avg_train_loss': 0.03494283594143548, 'avg_test_loss': 0.06827379171938999}
INFO:model_data_nn.py:Epoch 12/20, metrics: {'avg_train_loss': 0.03492552068446923, 'avg_test_loss': 0.0691652775377683}
INFO:model_data_nn.py:Epoch 13/20, metrics: {'avg_train_loss': 0.03490815753919377, 'avg_test_loss': 0.06866739678684276}
INFO:model_data_nn.py:Epoch 14/20, metrics: {'avg_train_loss': 0.03487633116076702, 'avg_test_loss': 0.06862711646226155}
INFO:model_data_nn.py:Epoch 15/20, metrics: {'avg_train_loss': 0.03488104231231987, 'avg_test_loss': 0.06835168362234231}
INFO:model_data_nn.py:Epoch 16/20, metrics: {'avg_train_loss': 0.03485985148726194, 'avg_test_loss': 0.06847937478347627}
INFO:model_data_nn.py:Epoch 17/20, metrics: {'avg_train_loss': 0.03484248682515192, 'avg_test_loss': 0.06883817819072134}
INFO:model_data_nn.py:Epoch 18/20, metrics: {'avg_train_loss': 0.03481284105091864, 'avg_test_loss': 0.06916991627945905}
INFO:model_data_nn.py:Epoch 19/20, metrics: {'avg_train_loss': 0.03482642360502742, 'avg_test_loss': 0.06873247384081378}
INFO:model_data_nn.py:Epoch 20/20, metrics: {'avg_train_loss': 0.03480444423542739, 'avg_test_loss': 0.07016838346176653}
INFO:main.py:Making prediction for data in year: 1999
INFO:main.py:Prediction data shape: (67711,)
/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src/main.py:372: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  prediction_data['pred'] = predictions
INFO:main.py:Root Mean Squared Error for Prediction in 2000: 0.264893100017623
INFO:main.py:Prediction Stats:                 ret          pred
count  67711.000000  67711.000000
mean      -0.002799      0.020539
std        0.260446      0.032694
min       -0.961538     -0.139506
25%       -0.124504      0.006039
50%       -0.013514      0.012542
75%        0.085349      0.023576
max       10.344000      0.741098
INFO:main.py:

Transform data

INFO:transform_data_nn.py:Train data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999]
INFO:transform_data_nn.py:Train_data: (1153700, 158)

INFO:transform_data_nn.py:Test data years: [2000]
INFO:transform_data_nn.py:Test_data: (67711, 158)

INFO:transform_data_nn.py:Retrain data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000]
INFO:transform_data_nn.py:Retrain_data: (1221411, 158)

INFO:transform_data_nn.py:Prediction data years: [2001]
INFO:transform_data_nn.py:Prediction_data: (64897, 158)

INFO:main.py:

Generate X and y with train_data and test_data

INFO:main.py:
            x_train_tf: torch.Size([1153700, 103])
            y_train_tf: torch.Size([1153700])

            x_test_tf: torch.Size([67711, 103])
            y_test_tf: torch.Size([67711])

        
INFO:main.py:

Generate X and y with retrain_data and prediction_data

INFO:main.py:
            x_retrain_tf: torch.Size([1221411, 103])
            y_retrain_tf: torch.Size([1221411])

            x_prediction_tf: torch.Size([64897, 103])
            y_prediction_tf: torch.Size([64897])

        
INFO:main.py:

Create dataset

INFO:main.py:Create train_dataset
INFO:main.py:train_dataset first example: (tensor([ 0.1987,  0.9880,  0.0893, -0.7359, -0.0063, -0.5701, -0.0331, -0.2768,
         0.7059, -0.2404, -0.7714, -0.0385, -0.7146, -0.4824, -0.2415, -0.0064,
        -0.4114,  0.0874, -0.1229,  0.7574, -0.5395, -0.1361, -0.1897, -0.0105,
        -0.0512, -0.2914, -0.6311, -0.0334,  0.5970,  1.7139,  0.4126, -0.1727,
         0.9088,  0.1882, -0.4149, -0.2730,  0.1326,  0.3648, -0.0405, -1.1285,
        -0.2237,  0.2447,  0.3900,  0.1914, -0.0792, -0.7025,  0.0737, -0.0706,
        -0.5405, -0.1704, -0.3698,  0.4867, -0.4723,  0.2558, -0.0276, -0.3061,
        -0.8046, -0.5782, -0.5461, -0.1956, -0.0215, -0.5472, -0.6766, -0.4455,
        -0.3644, -0.4686,  0.8798, -0.3032, -0.5862, -0.5711, -0.6744, -0.3716,
         0.0161, -0.8445,  0.2471, -0.8023,  0.3199,  0.3559,  0.8250,  0.7593,
        -1.1997,  0.2647,  0.0041, -0.2052, -0.1172,  0.3611, -0.3484, -0.8374,
        -0.6566, -0.8439,  0.1492, -0.0686,  0.0319, -0.4469, -0.5648,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000]), tensor([3096]), tensor(0.2117))
INFO:main.py:Create test_dataset
INFO:main.py:test_dataset first example: (tensor([ 1.5562e-01, -9.1340e-01, -4.2279e-01,  1.0875e+00, -3.7429e-01,
        -5.8947e-01, -1.5519e+00, -9.2009e-01, -1.4860e-01, -6.0653e-01,
        -8.0843e-01, -1.4869e-01, -7.1459e-01,  4.1167e-01, -4.2404e-01,
         1.2363e+00, -3.8237e-01, -3.0663e-02,  3.0453e-02, -1.4314e+00,
         1.1637e-01, -1.7705e-01, -2.4682e-01,  4.7842e-01, -3.9470e-01,
        -5.0941e-01, -6.9932e-01, -3.3450e-02, -5.7031e-01,  1.2724e+00,
        -2.5142e-01, -2.1498e-01,  4.1117e-01, -5.4263e+00, -8.5621e-01,
        -3.9189e-01, -1.1396e-01, -7.6813e-01, -1.5453e-01, -1.1222e+00,
        -9.0678e-02, -2.8142e-01, -4.9448e-01, -1.3371e-01, -3.4669e-01,
        -3.6910e-01, -4.0205e-01, -9.7878e-02, -1.1777e-01, -1.2170e-01,
         2.8315e-01,  4.0764e-01, -4.7225e-01, -9.1284e-01, -7.9861e-01,
        -6.5586e-01,  2.6524e-02, -6.8578e-01, -3.9224e-01, -4.2999e-01,
        -9.0413e-01,  1.7433e-01,  2.2911e+00, -3.2968e-01, -2.6442e-02,
         3.0111e+00, -5.6434e-01,  1.7808e+00,  1.2253e+00, -3.5012e-01,
        -1.4128e-02,  2.5803e-02,  1.6126e-02, -4.2548e-01,  6.0928e-02,
        -2.0264e-01,  9.7219e-02,  1.1861e-01,  9.6094e-01,  7.5931e-01,
         8.4029e-01,  9.1158e-01,  4.0650e-03,  1.1548e-01,  1.7630e-02,
         1.5103e-01,  1.7766e-01, -8.5152e-01, -4.8259e-01, -6.6757e-01,
         2.7728e-01, -5.4717e-01, -6.5545e-01, -6.2939e-01,  6.8529e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([3335]), tensor(-0.0441))
INFO:main.py:Create retrain_dataset
INFO:main.py:retrain_dataset first example: (tensor([ 0.1976,  1.0127,  0.0944, -0.7440, -0.0129, -0.5834, -0.0309, -0.2748,
         0.7174, -0.2468, -0.7637, -0.0313, -0.7166, -0.4923, -0.4160, -0.0030,
        -0.4098,  0.0833, -0.1218,  0.7666, -0.5207, -0.1439, -0.1899, -0.0124,
        -0.0566, -0.2914, -0.6261, -0.0350,  0.6079,  1.7510,  0.3952, -0.1717,
         0.9174,  0.1935, -0.4075, -0.2744,  0.1218,  0.3886, -0.0464, -1.1314,
        -0.2213,  0.1869,  0.3950,  0.1870, -0.0842, -0.7122,  0.0505, -0.0654,
        -0.5240, -0.1670, -0.3767,  0.5023, -0.4705,  0.2579, -0.0297, -0.3024,
        -0.7870, -0.5721, -0.5457, -0.1998, -0.0249, -0.5479, -0.6750, -0.4449,
        -0.3630, -0.4607,  0.9059, -0.3036, -0.5977, -0.5707, -0.6721, -0.3744,
         0.0151, -0.8592,  0.2552, -0.7725,  0.3192,  0.3616,  0.8194,  0.7715,
        -1.2091,  0.2606,  0.0037, -0.1983, -0.1189,  0.3705, -0.3257, -0.8431,
        -0.6775, -0.8670,  0.1488, -0.0543,  0.0302, -0.4518, -0.5545,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000]), tensor([3236]), tensor(0.2117))
INFO:main.py:Create prediction_dataset
INFO:main.py:prediction_dataset first example: (tensor([-9.0783e-01,  1.7035e-01, -6.1439e-01,  1.0949e+00, -2.5263e-02,
        -5.0592e-01, -1.5782e+00, -9.1092e-01, -4.4413e-02, -5.9101e-01,
        -8.1888e-01, -1.8401e-01, -7.1663e-01, -6.2254e-02, -5.1662e-01,
         1.1678e+00, -3.6929e-01, -2.2496e-02,  3.3935e-01, -8.4537e-02,
         5.2260e-01, -1.7015e-01, -4.1116e-01, -6.6981e-01, -5.0040e-01,
        -7.2183e-01, -6.8870e-01, -3.4966e-02, -5.4399e-01,  1.5490e+00,
        -4.5619e-01, -2.5407e-01,  3.5343e-01, -5.4476e+00, -8.5001e-01,
        -1.7852e-01,  1.2816e-02, -7.2242e-01, -2.2685e-01, -1.1358e+00,
        -1.8459e-01,  1.9993e-01,  4.8261e-03,  2.9975e-02, -8.1957e-02,
        -6.7930e-01,  2.8605e-02,  1.3964e-01, -4.4107e-01,  3.9860e-01,
        -1.6794e+00,  4.6983e-01, -4.7048e-01, -8.8918e-01, -7.9456e-01,
        -6.7550e-01,  2.5300e-02, -5.4264e-01, -7.0453e-01, -2.4403e-01,
        -8.8748e-01, -5.9537e-01,  2.6793e-01,  1.2756e-01, -2.9359e-02,
        -8.7339e-02, -3.1738e-02,  1.3223e-01,  6.0920e-01, -5.2433e-01,
        -9.4111e-04,  2.0632e-02,  1.5131e-02, -6.2620e-01, -1.0998e-01,
        -2.2311e-01, -1.9741e-01,  1.0236e-01,  8.6841e-01,  7.7153e-01,
         8.3941e-01,  1.0483e+00,  3.7134e-03,  1.9476e-01,  1.9013e-01,
         6.0734e-01, -8.3662e-02, -9.1807e-01, -5.7377e-01, -7.5820e-01,
        -2.3678e-01, -6.5819e-01, -6.5097e-01, -6.0267e-01,  8.2191e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([3154]), tensor(0.0128))
INFO:main.py:

Create dataloader

INFO:main.py:Create train and test dataloader
INFO:main.py:Create retrain and prediction dataloader
INFO:main.py:

Hyperparameters tuning with Ray Tune

INFO:main.py:Training data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999]
INFO:main.py:Testing data year: 2000
INFO:main.py:

            ray_results_path: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
            num_samples: 60
            max_num_epochs: 20
            num_cpus: 60
            cpus_per_trial: 1
            num_gpus: 2
            gpus_per_trial: 0
            continuous_dim: 102
            num_embeddings: 14530
            device: cuda
            
2024-07-05 12:28:18,445	INFO worker.py:1753 -- Started a local Ray instance.
2024-07-05 12:28:18,469	INFO packaging.py:530 -- Creating a file package for local directory '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src'.
2024-07-05 12:28:18,489	INFO packaging.py:358 -- Pushing file package 'gcs://_ray_pkg_3935e91dc5487a1d.zip' (1.20MiB) to Ray cluster...
2024-07-05 12:28:18,492	INFO packaging.py:371 -- Successfully pushed file package 'gcs://_ray_pkg_3935e91dc5487a1d.zip'.
2024-07-05 12:28:21,631	WARNING tune.py:902 -- AIR_VERBOSITY is set, ignoring passed-in ProgressReporter for now.
2024-07-05 13:29:13,726	INFO tune.py:1009 -- Wrote the latest version of all result files and experiment state to '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results/train_fnn_2024-07-05_12-28-21' in 0.1532s.
INFO:model_data_nn.py:Best trial config: {'continuous_dim': 102, 'hidden_dim': 45, 'num_layers': 5, 'num_embeddings': 14530, 'embedding_dim': 20, 'dropout_rate': 0.3425596287705535, 'lr': 0.0006786952562305604, 'weight_decay': 0.0006803850954616791, 'num_epochs': 20, 'num_gpus': 2}
INFO:model_data_nn.py:Best trial training loss: 0.03525707732221938
INFO:model_data_nn.py:Best trial testing loss: 0.06808330383264444
INFO:main.py:Ray Tune results have been saved to: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
INFO:main.py:Best trial directory: /tmp/ray/session_2024-07-05_12-28-15_880666_736015/artifacts/2024-07-05_12-28-21/train_fnn_2024-07-05_12-28-21/driver_artifacts/train_fnn_bd75a_00054_54_dropout_rate=0.3426,embedding_dim=20,hidden_dim=45,lr=0.0007,num_layers=5,weight_decay=0.0007_2024-07-05_12-28-21
INFO:main.py:

Retrain a new model with data in years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000]

            Using the optimized hyperparameters: {'continuous_dim': 102, 'hidden_dim': 45, 'num_layers': 5, 'num_embeddings': 15172, 'embedding_dim': 20, 'dropout_rate': 0.3425596287705535, 'lr': 0.0006786952562305604, 'weight_decay': 0.0006803850954616791, 'num_epochs': 20, 'num_gpus': 2}

/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/venv/lib/python3.10/site-packages/torch/nn/modules/loss.py:535: UserWarning: Using a target size (torch.Size([1])) that is different to the input size (torch.Size([])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  return F.mse_loss(input, target, reduction=self.reduction)
INFO:model_data_nn.py:Epoch 1/20, metrics: {'avg_train_loss': 1.4460954547935947, 'avg_test_loss': 0.07276544422433734}
INFO:model_data_nn.py:Epoch 2/20, metrics: {'avg_train_loss': 0.03747931098128051, 'avg_test_loss': 0.07239287643873052}
INFO:model_data_nn.py:Epoch 3/20, metrics: {'avg_train_loss': 0.03706317285922299, 'avg_test_loss': 0.07256490513169038}
INFO:model_data_nn.py:Epoch 4/20, metrics: {'avg_train_loss': 0.03707614225957765, 'avg_test_loss': 0.07273786979810863}
INFO:model_data_nn.py:Epoch 5/20, metrics: {'avg_train_loss': 0.037097742501831704, 'avg_test_loss': 0.07265679491317178}
INFO:model_data_nn.py:Epoch 6/20, metrics: {'avg_train_loss': 0.037113466786762694, 'avg_test_loss': 0.07271629534148442}
INFO:model_data_nn.py:Epoch 7/20, metrics: {'avg_train_loss': 0.03710326191963458, 'avg_test_loss': 0.07271196459618023}
INFO:model_data_nn.py:Epoch 8/20, metrics: {'avg_train_loss': 0.03713263163102409, 'avg_test_loss': 0.07279551611052767}
INFO:model_data_nn.py:Epoch 9/20, metrics: {'avg_train_loss': 0.03710500262193612, 'avg_test_loss': 0.07279464100303282}
INFO:model_data_nn.py:Epoch 10/20, metrics: {'avg_train_loss': 0.037105911495176724, 'avg_test_loss': 0.0726813093681662}
INFO:model_data_nn.py:Epoch 11/20, metrics: {'avg_train_loss': 0.037106197721843176, 'avg_test_loss': 0.0727457236411512}
INFO:model_data_nn.py:Epoch 12/20, metrics: {'avg_train_loss': 0.0371048365659402, 'avg_test_loss': 0.07287902713594702}
INFO:model_data_nn.py:Epoch 13/20, metrics: {'avg_train_loss': 0.03710471015980983, 'avg_test_loss': 0.07275743913372949}
INFO:model_data_nn.py:Epoch 14/20, metrics: {'avg_train_loss': 0.037106862777800544, 'avg_test_loss': 0.07266621026311319}
INFO:model_data_nn.py:Epoch 15/20, metrics: {'avg_train_loss': 0.03710549137227446, 'avg_test_loss': 0.07289677341244051}
INFO:model_data_nn.py:Epoch 16/20, metrics: {'avg_train_loss': 0.03710566740717267, 'avg_test_loss': 0.07283999398648629}
INFO:model_data_nn.py:Epoch 17/20, metrics: {'avg_train_loss': 0.03710369068998846, 'avg_test_loss': 0.07286775367051239}
INFO:model_data_nn.py:Epoch 18/20, metrics: {'avg_train_loss': 0.03710619860915165, 'avg_test_loss': 0.07274015886066518}
INFO:model_data_nn.py:Epoch 19/20, metrics: {'avg_train_loss': 0.03710597853956936, 'avg_test_loss': 0.07270339600454033}
INFO:model_data_nn.py:Epoch 20/20, metrics: {'avg_train_loss': 0.03710378002551811, 'avg_test_loss': 0.07274771260196622}
INFO:main.py:Making prediction for data in year: 2000
╭──────────────────────────────────────────────────────────────────╮
│ Configuration for experiment     train_fnn_2024-07-04_20-12-58   │
├──────────────────────────────────────────────────────────────────┤
│ Search algorithm                 BasicVariantGenerator           │
│ Scheduler                        AsyncHyperBandScheduler         │
│ Number of trials                 60                              │
╰──────────────────────────────────────────────────────────────────╯

View detailed results here: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results/train_fnn_2024-07-04_20-12-58
To visualize your results with TensorBoard, run: `tensorboard --logdir /tmp/ray/session_2024-07-04_20-12-51_825324_736015/artifacts/2024-07-04_20-12-58/train_fnn_2024-07-04_20-12-58/driver_artifacts`

╭──────────────────────────────────────────────────────────────────╮
│ Configuration for experiment     train_fnn_2024-07-04_21-59-42   │
├──────────────────────────────────────────────────────────────────┤
│ Search algorithm                 BasicVariantGenerator           │
│ Scheduler                        AsyncHyperBandScheduler         │
│ Number of trials                 60                              │
╰──────────────────────────────────────────────────────────────────╯

View detailed results here: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results/train_fnn_2024-07-04_21-59-42
To visualize your results with TensorBoard, run: `tensorboard --logdir /tmp/ray/session_2024-07-04_21-59-37_331782_736015/artifacts/2024-07-04_21-59-42/train_fnn_2024-07-04_21-59-42/driver_artifacts`

╭──────────────────────────────────────────────────────────────────╮
│ Configuration for experiment     train_fnn_2024-07-05_00-06-43   │
├──────────────────────────────────────────────────────────────────┤
│ Search algorithm                 BasicVariantGenerator           │
│ Scheduler                        AsyncHyperBandScheduler         │
│ Number of trials                 60                              │
╰──────────────────────────────────────────────────────────────────╯

View detailed results here: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results/train_fnn_2024-07-05_00-06-43
To visualize your results with TensorBoard, run: `tensorboard --logdir /tmp/ray/session_2024-07-05_00-06-37_180046_736015/artifacts/2024-07-05_00-06-43/train_fnn_2024-07-05_00-06-43/driver_artifacts`

╭──────────────────────────────────────────────────────────────────╮
│ Configuration for experiment     train_fnn_2024-07-05_02-06-30   │
├──────────────────────────────────────────────────────────────────┤
│ Search algorithm                 BasicVariantGenerator           │
│ Scheduler                        AsyncHyperBandScheduler         │
│ Number of trials                 60                              │
╰──────────────────────────────────────────────────────────────────╯

View detailed results here: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results/train_fnn_2024-07-05_02-06-30
To visualize your results with TensorBoard, run: `tensorboard --logdir /tmp/ray/session_2024-07-05_02-06-24_680014_736015/artifacts/2024-07-05_02-06-30/train_fnn_2024-07-05_02-06-30/driver_artifacts`

╭──────────────────────────────────────────────────────────────────╮
│ Configuration for experiment     train_fnn_2024-07-05_04-27-15   │
├──────────────────────────────────────────────────────────────────┤
│ Search algorithm                 BasicVariantGenerator           │
│ Scheduler                        AsyncHyperBandScheduler         │
│ Number of trials                 60                              │
╰──────────────────────────────────────────────────────────────────╯

View detailed results here: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results/train_fnn_2024-07-05_04-27-15
To visualize your results with TensorBoard, run: `tensorboard --logdir /tmp/ray/session_2024-07-05_04-27-09_845677_736015/artifacts/2024-07-05_04-27-15/train_fnn_2024-07-05_04-27-15/driver_artifacts`

╭──────────────────────────────────────────────────────────────────╮
│ Configuration for experiment     train_fnn_2024-07-05_06-58-31   │
├──────────────────────────────────────────────────────────────────┤
│ Search algorithm                 BasicVariantGenerator           │
│ Scheduler                        AsyncHyperBandScheduler         │
│ Number of trials                 60                              │
╰──────────────────────────────────────────────────────────────────╯

View detailed results here: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results/train_fnn_2024-07-05_06-58-31
To visualize your results with TensorBoard, run: `tensorboard --logdir /tmp/ray/session_2024-07-05_06-58-26_066172_736015/artifacts/2024-07-05_06-58-31/train_fnn_2024-07-05_06-58-31/driver_artifacts`

╭──────────────────────────────────────────────────────────────────╮
│ Configuration for experiment     train_fnn_2024-07-05_09-37-42   │
├──────────────────────────────────────────────────────────────────┤
│ Search algorithm                 BasicVariantGenerator           │
│ Scheduler                        AsyncHyperBandScheduler         │
│ Number of trials                 60                              │
╰──────────────────────────────────────────────────────────────────╯

View detailed results here: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results/train_fnn_2024-07-05_09-37-42
To visualize your results with TensorBoard, run: `tensorboard --logdir /tmp/ray/session_2024-07-05_09-37-35_537097_736015/artifacts/2024-07-05_09-37-42/train_fnn_2024-07-05_09-37-42/driver_artifacts`

╭──────────────────────────────────────────────────────────────────╮
│ Configuration for experiment     train_fnn_2024-07-05_12-28-21   │
├──────────────────────────────────────────────────────────────────┤
│ Search algorithm                 BasicVariantGenerator           │
│ Scheduler                        AsyncHyperBandScheduler         │
│ Number of trials                 60                              │
╰──────────────────────────────────────────────────────────────────╯

View detailed results here: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results/train_fnn_2024-07-05_12-28-21
To visualize your results with TensorBoard, run: `tensorboard --logdir /tmp/ray/session_2024-07-05_12-28-15_880666_736015/artifacts/2024-07-05_12-28-21/train_fnn_2024-07-05_12-28-21/driver_artifacts`

Traceback (most recent call last):
  File "/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src/main.py", line 384, in <module>
    main()
  File "/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src/main.py", line 370, in main
    predictions = data_modeler.predict(trained_model, prediction_loader, device)
  File "/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src/model_data_nn.py", line 175, in predict
    return np.concatenate(predictions)
ValueError: all the input arrays must have same number of dimensions, but the array at index 0 has 1 dimension(s) and the array at index 507 has 0 dimension(s)
