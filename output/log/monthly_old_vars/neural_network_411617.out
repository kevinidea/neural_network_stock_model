Current working directory
/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin
source venv/bin/activate
which python3
/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/venv/bin/python3
2024-07-05 23:55:33,935	PANIC scripts.py:900 -- `--address` is a required flag unless starting a head node with `--head`.
Error: `{}` is a required flag unless starting a head node with `{}`.
Intel(R) Extension for Scikit-learn* enabled (https://github.com/intel/scikit-learn-intelex)
Intel(R) Extension for Scikit-learn* enabled (https://github.com/intel/scikit-learn-intelex)
INFO:preprocess_data_nn.py:

Loading and preprocessing data...

DEBUG:preprocess_data_nn.py:      date  permno
0  1980-01   10006
1  1980-01   10057
2  1980-01   10103
3  1980-01   10137
4  1980-01   10145
DEBUG:preprocess_data_nn.py:--------------------------------------------------
INFO:main.py:preprocessed df: (2216189, 158)
INFO:preprocess_data_nn.py:

Applying secondary data preprocessing..

INFO:main.py:secondary preprocessed df: (2165515, 158)
INFO:main.py:df sample:    permno  gvkey   adatadate  fyear  sic2     spi       mve_f  ...     zerotrade      beta    betasq      rsq1  pricedelay   idiovol  pyear
0   10006   1010  12/31/1978   1978    37  0.0000  269.308500  ...  1.115306e-07  1.060420  1.124491  0.343408    0.029859  0.025576   1980
1   10057   1098  09/30/1978   1978    36  0.0000   97.372000  ...  6.199128e-08  1.526013  2.328716  0.307905    0.092667  0.037473   1980
2   10103   1012  10/31/1978   1978    33     NaN    1.697500  ...           NaN  1.759493  3.095816  0.096753    0.221851  0.087020   1980
3   10137   1279  12/31/1978   1978    49     NaN  537.524500  ...  9.726790e-08  0.492885  0.242936  0.189693    0.125777  0.017540   1980
4   10145   1300  12/31/1978   1978    99 -0.0031  805.633282  ...  6.190654e-08  1.139163  1.297691  0.279437    0.024228  0.031201   1980

[5 rows x 158 columns]
INFO:main.py:Train year start: 1980
INFO:main.py:Prediction data years: [1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020]
INFO:main.py:

Loop through all the prediction years and build optimized model for each year

INFO:main.py:

Transform data

INFO:transform_data_nn.py:Train data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999]
INFO:transform_data_nn.py:Train_data: (1153700, 158)

INFO:transform_data_nn.py:Test data years: [2000]
INFO:transform_data_nn.py:Test_data: (67711, 158)

INFO:transform_data_nn.py:Retrain data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000]
INFO:transform_data_nn.py:Retrain_data: (1221411, 158)

INFO:transform_data_nn.py:Prediction data years: [2001]
INFO:transform_data_nn.py:Prediction_data: (64897, 158)

INFO:main.py:

Generate X and y with train_data and test_data

INFO:main.py:
            x_train_tf: torch.Size([1153700, 103])
            y_train_tf: torch.Size([1153700])

            x_test_tf: torch.Size([67711, 103])
            y_test_tf: torch.Size([67711])

        
INFO:main.py:

Generate X and y with retrain_data and prediction_data

INFO:main.py:
            x_retrain_tf: torch.Size([1221411, 103])
            y_retrain_tf: torch.Size([1221411])

            x_prediction_tf: torch.Size([64897, 103])
            y_prediction_tf: torch.Size([64897])

        
INFO:main.py:

Create dataset

INFO:main.py:Create train_dataset
INFO:main.py:train_dataset first example: (tensor([ 0.1987,  0.9880,  0.0893, -0.7359, -0.0063, -0.5701, -0.0331, -0.2768,
         0.7059, -0.2404, -0.7714, -0.0385, -0.7146, -0.4824, -0.2415, -0.0064,
        -0.4114,  0.0874, -0.1229,  0.7574, -0.5395, -0.1361, -0.1897, -0.0105,
        -0.0512, -0.2914, -0.6311, -0.0334,  0.5970,  1.7139,  0.4126, -0.1727,
         0.9088,  0.1882, -0.4149, -0.2730,  0.1326,  0.3648, -0.0405, -1.1285,
        -0.2237,  0.2447,  0.3900,  0.1914, -0.0792, -0.7025,  0.0737, -0.0706,
        -0.5405, -0.1704, -0.3698,  0.4867, -0.4723,  0.2558, -0.0276, -0.3061,
        -0.8046, -0.5782, -0.5461, -0.1956, -0.0215, -0.5472, -0.6766, -0.4455,
        -0.3644, -0.4686,  0.8798, -0.3032, -0.5862, -0.5711, -0.6744, -0.3716,
         0.0161, -0.8445,  0.2471, -0.8023,  0.3199,  0.3559,  0.8250,  0.7593,
        -1.1997,  0.2647,  0.0041, -0.2052, -0.1172,  0.3611, -0.3484, -0.8374,
        -0.6566, -0.8439,  0.1492, -0.0686,  0.0319, -0.4469, -0.5648,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000]), tensor([12603]), tensor(0.2117))
INFO:main.py:Create test_dataset
INFO:main.py:test_dataset first example: (tensor([ 1.5562e-01, -9.1340e-01, -4.2279e-01,  1.0875e+00, -3.7429e-01,
        -5.8947e-01, -1.5519e+00, -9.2009e-01, -1.4860e-01, -6.0653e-01,
        -8.0843e-01, -1.4869e-01, -7.1459e-01,  4.1167e-01, -4.2404e-01,
         1.2363e+00, -3.8237e-01, -3.0663e-02,  3.0453e-02, -1.4314e+00,
         1.1637e-01, -1.7705e-01, -2.4682e-01,  4.7842e-01, -3.9470e-01,
        -5.0941e-01, -6.9932e-01, -3.3450e-02, -5.7031e-01,  1.2724e+00,
        -2.5142e-01, -2.1498e-01,  4.1117e-01, -5.4263e+00, -8.5621e-01,
        -3.9189e-01, -1.1396e-01, -7.6813e-01, -1.5453e-01, -1.1222e+00,
        -9.0678e-02, -2.8142e-01, -4.9448e-01, -1.3371e-01, -3.4669e-01,
        -3.6910e-01, -4.0205e-01, -9.7878e-02, -1.1777e-01, -1.2170e-01,
         2.8315e-01,  4.0764e-01, -4.7225e-01, -9.1284e-01, -7.9861e-01,
        -6.5586e-01,  2.6524e-02, -6.8578e-01, -3.9224e-01, -4.2999e-01,
        -9.0413e-01,  1.7433e-01,  2.2911e+00, -3.2968e-01, -2.6442e-02,
         3.0111e+00, -5.6434e-01,  1.7808e+00,  1.2253e+00, -3.5012e-01,
        -1.4128e-02,  2.5803e-02,  1.6126e-02, -4.2548e-01,  6.0928e-02,
        -2.0264e-01,  9.7219e-02,  1.1861e-01,  9.6094e-01,  7.5931e-01,
         8.4029e-01,  9.1158e-01,  4.0650e-03,  1.1548e-01,  1.7630e-02,
         1.5103e-01,  1.7766e-01, -8.5152e-01, -4.8259e-01, -6.6757e-01,
         2.7728e-01, -5.4717e-01, -6.5545e-01, -6.2939e-01,  6.8529e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([4214]), tensor(-0.0441))
INFO:main.py:Create retrain_dataset
INFO:main.py:retrain_dataset first example: (tensor([ 0.1976,  1.0127,  0.0944, -0.7440, -0.0129, -0.5834, -0.0309, -0.2748,
         0.7174, -0.2468, -0.7637, -0.0313, -0.7166, -0.4923, -0.4160, -0.0030,
        -0.4098,  0.0833, -0.1218,  0.7666, -0.5207, -0.1439, -0.1899, -0.0124,
        -0.0566, -0.2914, -0.6261, -0.0350,  0.6079,  1.7510,  0.3952, -0.1717,
         0.9174,  0.1935, -0.4075, -0.2744,  0.1218,  0.3886, -0.0464, -1.1314,
        -0.2213,  0.1869,  0.3950,  0.1870, -0.0842, -0.7122,  0.0505, -0.0654,
        -0.5240, -0.1670, -0.3767,  0.5023, -0.4705,  0.2579, -0.0297, -0.3024,
        -0.7870, -0.5721, -0.5457, -0.1998, -0.0249, -0.5479, -0.6750, -0.4449,
        -0.3630, -0.4607,  0.9059, -0.3036, -0.5977, -0.5707, -0.6721, -0.3744,
         0.0151, -0.8592,  0.2552, -0.7725,  0.3192,  0.3616,  0.8194,  0.7715,
        -1.2091,  0.2606,  0.0037, -0.1983, -0.1189,  0.3705, -0.3257, -0.8431,
        -0.6775, -0.8670,  0.1488, -0.0543,  0.0302, -0.4518, -0.5545,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000]), tensor([13159]), tensor(0.2117))
INFO:main.py:Create prediction_dataset
INFO:main.py:prediction_dataset first example: (tensor([-9.0783e-01,  1.7035e-01, -6.1439e-01,  1.0949e+00, -2.5263e-02,
        -5.0592e-01, -1.5782e+00, -9.1092e-01, -4.4413e-02, -5.9101e-01,
        -8.1888e-01, -1.8401e-01, -7.1663e-01, -6.2254e-02, -5.1662e-01,
         1.1678e+00, -3.6929e-01, -2.2496e-02,  3.3935e-01, -8.4537e-02,
         5.2260e-01, -1.7015e-01, -4.1116e-01, -6.6981e-01, -5.0040e-01,
        -7.2183e-01, -6.8870e-01, -3.4966e-02, -5.4399e-01,  1.5490e+00,
        -4.5619e-01, -2.5407e-01,  3.5343e-01, -5.4476e+00, -8.5001e-01,
        -1.7852e-01,  1.2816e-02, -7.2242e-01, -2.2685e-01, -1.1358e+00,
        -1.8459e-01,  1.9993e-01,  4.8261e-03,  2.9975e-02, -8.1957e-02,
        -6.7930e-01,  2.8605e-02,  1.3964e-01, -4.4107e-01,  3.9860e-01,
        -1.6794e+00,  4.6983e-01, -4.7048e-01, -8.8918e-01, -7.9456e-01,
        -6.7550e-01,  2.5300e-02, -5.4264e-01, -7.0453e-01, -2.4403e-01,
        -8.8748e-01, -5.9537e-01,  2.6793e-01,  1.2756e-01, -2.9359e-02,
        -8.7339e-02, -3.1738e-02,  1.3223e-01,  6.0920e-01, -5.2433e-01,
        -9.4111e-04,  2.0632e-02,  1.5131e-02, -6.2620e-01, -1.0998e-01,
        -2.2311e-01, -1.9741e-01,  1.0236e-01,  8.6841e-01,  7.7153e-01,
         8.3941e-01,  1.0483e+00,  3.7134e-03,  1.9476e-01,  1.9013e-01,
         6.0734e-01, -8.3662e-02, -9.1807e-01, -5.7377e-01, -7.5820e-01,
        -2.3678e-01, -6.5819e-01, -6.5097e-01, -6.0267e-01,  8.2191e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([4062]), tensor(0.0128))
INFO:main.py:

Create dataloader

INFO:main.py:Create train and test dataloader
INFO:main.py:Create retrain and prediction dataloader
INFO:main.py:

Hyperparameters tuning with Ray Tune

INFO:main.py:Training data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999]
INFO:main.py:Testing data year: 2000
INFO:main.py:

            ray_results_path: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
            num_samples: 60
            max_num_epochs: 20
            num_cpus: 60
            cpus_per_trial: 1
            num_gpus: 2
            gpus_per_trial: 0
            continuous_dim: 102
            num_embeddings: 14530
            device: cuda
            
2024-07-06 01:30:45,191	INFO worker.py:1753 -- Started a local Ray instance.
2024-07-06 01:30:45,272	INFO packaging.py:530 -- Creating a file package for local directory '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src'.
2024-07-06 01:30:45,291	INFO packaging.py:358 -- Pushing file package 'gcs://_ray_pkg_3d7d5eb957aaab70.zip' (1.20MiB) to Ray cluster...
2024-07-06 01:30:45,298	INFO packaging.py:371 -- Successfully pushed file package 'gcs://_ray_pkg_3d7d5eb957aaab70.zip'.
2024-07-06 01:30:48,480	WARNING tune.py:902 -- AIR_VERBOSITY is set, ignoring passed-in ProgressReporter for now.
2024-07-06 02:24:31,606	INFO tune.py:1009 -- Wrote the latest version of all result files and experiment state to '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results/train_fnn_2024-07-06_01-30-48' in 0.1343s.
INFO:model_data_nn.py:Best trial config: {'continuous_dim': 102, 'hidden_dim': 155, 'num_layers': 5, 'num_embeddings': 14530, 'embedding_dim': 10, 'dropout_rate': 0.4470550239583974, 'lr': 0.000269364391631794, 'weight_decay': 0.0003992242886631501, 'num_epochs': 20, 'num_gpus': 2}
INFO:model_data_nn.py:Best trial training loss: 0.03505812299199979
INFO:model_data_nn.py:Best trial testing loss: 0.06802341818528355
INFO:main.py:Ray Tune results have been saved to: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
INFO:main.py:Best trial directory: /tmp/ray/session_2024-07-06_01-30-42_583254_1070676/artifacts/2024-07-06_01-30-48/train_fnn_2024-07-06_01-30-48/driver_artifacts/train_fnn_5f8e4_00041_41_dropout_rate=0.4471,embedding_dim=10,hidden_dim=155,lr=0.0003,num_layers=5,weight_decay=0.0004_2024-07-06_01-30-48
INFO:main.py:

Retrain a new model with data in years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000]

            Using the optimized hyperparameters: {'continuous_dim': 102, 'hidden_dim': 155, 'num_layers': 5, 'num_embeddings': 15172, 'embedding_dim': 10, 'dropout_rate': 0.4470550239583974, 'lr': 0.000269364391631794, 'weight_decay': 0.0003992242886631501, 'num_epochs': 20, 'num_gpus': 2}

INFO:model_data_nn.py:Epoch 1/20, metrics: {'avg_train_loss': 14.395365806938168, 'avg_test_loss': 0.0773105316128083}
INFO:model_data_nn.py:Epoch 2/20, metrics: {'avg_train_loss': 0.03911648301348365, 'avg_test_loss': 0.07254420173552445}
INFO:model_data_nn.py:Epoch 3/20, metrics: {'avg_train_loss': 0.0381723780201378, 'avg_test_loss': 0.07271567957959776}
INFO:model_data_nn.py:Epoch 4/20, metrics: {'avg_train_loss': 0.03762024237398817, 'avg_test_loss': 0.0725220013849848}
INFO:model_data_nn.py:Epoch 5/20, metrics: {'avg_train_loss': 0.03706578500291734, 'avg_test_loss': 0.07124578099199168}
INFO:model_data_nn.py:Epoch 6/20, metrics: {'avg_train_loss': 0.03692693017210034, 'avg_test_loss': 0.07176651973203999}
INFO:model_data_nn.py:Epoch 7/20, metrics: {'avg_train_loss': 0.03691017489013015, 'avg_test_loss': 0.07153087785086176}
INFO:model_data_nn.py:Epoch 8/20, metrics: {'avg_train_loss': 0.03690255207340612, 'avg_test_loss': 0.07156636378925851}
INFO:model_data_nn.py:Epoch 9/20, metrics: {'avg_train_loss': 0.03691279272586326, 'avg_test_loss': 0.07160852625819407}
INFO:model_data_nn.py:Epoch 10/20, metrics: {'avg_train_loss': 0.03689793904416563, 'avg_test_loss': 0.07161377951517467}
INFO:model_data_nn.py:Epoch 11/20, metrics: {'avg_train_loss': 0.03689843429504657, 'avg_test_loss': 0.0718900217953336}
INFO:model_data_nn.py:Epoch 12/20, metrics: {'avg_train_loss': 0.03690123165081734, 'avg_test_loss': 0.07246286485080175}
INFO:model_data_nn.py:Epoch 13/20, metrics: {'avg_train_loss': 0.03690934584500254, 'avg_test_loss': 0.0721234272446806}
INFO:model_data_nn.py:Epoch 14/20, metrics: {'avg_train_loss': 0.03689577265143744, 'avg_test_loss': 0.07156549641627848}
INFO:model_data_nn.py:Epoch 15/20, metrics: {'avg_train_loss': 0.03689340301726891, 'avg_test_loss': 0.0712546141942831}
INFO:model_data_nn.py:Epoch 16/20, metrics: {'avg_train_loss': 0.036906891571137704, 'avg_test_loss': 0.07185390193425999}
INFO:model_data_nn.py:Epoch 17/20, metrics: {'avg_train_loss': 0.03689496248979231, 'avg_test_loss': 0.07146289556719891}
INFO:model_data_nn.py:Epoch 18/20, metrics: {'avg_train_loss': 0.03688456401328829, 'avg_test_loss': 0.07041666658565872}
INFO:model_data_nn.py:Epoch 19/20, metrics: {'avg_train_loss': 0.03689894493499869, 'avg_test_loss': 0.07139901142552729}
INFO:model_data_nn.py:Epoch 20/20, metrics: {'avg_train_loss': 0.03690323246309607, 'avg_test_loss': 0.07205830828294041}
INFO:main.py:Making prediction for data in year: 2000
INFO:main.py:Prediction data shape: (64897,)
/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src/main.py:372: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  prediction_data['pred'] = predictions
INFO:main.py:Root Mean Squared Error for Prediction in 2001: 0.2685194579276409
INFO:main.py:Prediction Stats:                 ret          pred
count  64897.000000  64897.000000
mean       0.027750      0.016964
std        0.269572      0.014306
min       -0.981295     -0.023162
25%       -0.089628      0.008687
50%        0.005291      0.014440
75%        0.101250      0.019450
max        8.666667      0.209291
INFO:main.py:

Transform data

INFO:transform_data_nn.py:Train data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000]
INFO:transform_data_nn.py:Train_data: (1221411, 158)

INFO:transform_data_nn.py:Test data years: [2001]
INFO:transform_data_nn.py:Test_data: (64897, 158)

INFO:transform_data_nn.py:Retrain data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001]
INFO:transform_data_nn.py:Retrain_data: (1286308, 158)

INFO:transform_data_nn.py:Prediction data years: [2002]
INFO:transform_data_nn.py:Prediction_data: (61461, 158)

INFO:main.py:

Generate X and y with train_data and test_data

INFO:main.py:
            x_train_tf: torch.Size([1221411, 103])
            y_train_tf: torch.Size([1221411])

            x_test_tf: torch.Size([64897, 103])
            y_test_tf: torch.Size([64897])

        
INFO:main.py:

Generate X and y with retrain_data and prediction_data

INFO:main.py:
            x_retrain_tf: torch.Size([1286308, 103])
            y_retrain_tf: torch.Size([1286308])

            x_prediction_tf: torch.Size([61461, 103])
            y_prediction_tf: torch.Size([61461])

        
INFO:main.py:

Create dataset

INFO:main.py:Create train_dataset
INFO:main.py:train_dataset first example: (tensor([ 0.1976,  1.0127,  0.0944, -0.7440, -0.0129, -0.5834, -0.0309, -0.2748,
         0.7174, -0.2468, -0.7637, -0.0313, -0.7166, -0.4923, -0.4160, -0.0030,
        -0.4098,  0.0833, -0.1218,  0.7666, -0.5207, -0.1439, -0.1899, -0.0124,
        -0.0566, -0.2914, -0.6261, -0.0350,  0.6079,  1.7510,  0.3952, -0.1717,
         0.9174,  0.1935, -0.4075, -0.2744,  0.1218,  0.3886, -0.0464, -1.1314,
        -0.2213,  0.1869,  0.3950,  0.1870, -0.0842, -0.7122,  0.0505, -0.0654,
        -0.5240, -0.1670, -0.3767,  0.5023, -0.4705,  0.2579, -0.0297, -0.3024,
        -0.7870, -0.5721, -0.5457, -0.1998, -0.0249, -0.5479, -0.6750, -0.4449,
        -0.3630, -0.4607,  0.9059, -0.3036, -0.5977, -0.5707, -0.6721, -0.3744,
         0.0151, -0.8592,  0.2552, -0.7725,  0.3192,  0.3616,  0.8194,  0.7715,
        -1.2091,  0.2606,  0.0037, -0.1983, -0.1189,  0.3705, -0.3257, -0.8431,
        -0.6775, -0.8670,  0.1488, -0.0543,  0.0302, -0.4518, -0.5545,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000]), tensor([13159]), tensor(0.2117))
INFO:main.py:Create test_dataset
INFO:main.py:test_dataset first example: (tensor([-9.0783e-01,  1.7035e-01, -6.1439e-01,  1.0949e+00, -2.5263e-02,
        -5.0592e-01, -1.5782e+00, -9.1092e-01, -4.4413e-02, -5.9101e-01,
        -8.1888e-01, -1.8401e-01, -7.1663e-01, -6.2254e-02, -5.1662e-01,
         1.1678e+00, -3.6929e-01, -2.2496e-02,  3.3935e-01, -8.4537e-02,
         5.2260e-01, -1.7015e-01, -4.1116e-01, -6.6981e-01, -5.0040e-01,
        -7.2183e-01, -6.8870e-01, -3.4966e-02, -5.4399e-01,  1.5490e+00,
        -4.5619e-01, -2.5407e-01,  3.5343e-01, -5.4476e+00, -8.5001e-01,
        -1.7852e-01,  1.2816e-02, -7.2242e-01, -2.2685e-01, -1.1358e+00,
        -1.8459e-01,  1.9993e-01,  4.8261e-03,  2.9975e-02, -8.1957e-02,
        -6.7930e-01,  2.8605e-02,  1.3964e-01, -4.4107e-01,  3.9860e-01,
        -1.6794e+00,  4.6983e-01, -4.7048e-01, -8.8918e-01, -7.9456e-01,
        -6.7550e-01,  2.5300e-02, -5.4264e-01, -7.0453e-01, -2.4403e-01,
        -8.8748e-01, -5.9537e-01,  2.6793e-01,  1.2756e-01, -2.9359e-02,
        -8.7339e-02, -3.1738e-02,  1.3223e-01,  6.0920e-01, -5.2433e-01,
        -9.4111e-04,  2.0632e-02,  1.5131e-02, -6.2620e-01, -1.0998e-01,
        -2.2311e-01, -1.9741e-01,  1.0236e-01,  8.6841e-01,  7.7153e-01,
         8.3941e-01,  1.0483e+00,  3.7134e-03,  1.9476e-01,  1.9013e-01,
         6.0734e-01, -8.3662e-02, -9.1807e-01, -5.7377e-01, -7.5820e-01,
        -2.3678e-01, -6.5819e-01, -6.5097e-01, -6.0267e-01,  8.2191e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([4062]), tensor(0.0128))
INFO:main.py:Create retrain_dataset
INFO:main.py:retrain_dataset first example: (tensor([ 1.9130e-01,  1.0317e+00,  1.0057e-01, -7.5313e-01, -2.6277e-02,
        -5.9342e-01, -2.9333e-02, -2.7378e-01,  7.0414e-01, -2.5242e-01,
        -7.5822e-01, -2.1584e-02, -7.1736e-01, -4.9973e-01, -4.3663e-01,
        -2.2364e-03, -4.0732e-01,  8.5453e-02, -9.9921e-02,  7.7771e-01,
        -5.1882e-01, -1.7643e-01, -2.0502e-01, -8.5704e-03, -5.7235e-02,
        -2.9341e-01, -5.9183e-01, -5.1593e-02,  6.2987e-01,  1.7571e+00,
         3.8192e-01, -1.7245e-01,  9.1582e-01,  2.0007e-01, -3.9882e-01,
        -2.7213e-01,  1.1334e-01,  4.1044e-01, -5.1828e-02, -1.1346e+00,
        -2.2303e-01,  2.1573e-01,  4.0054e-01,  1.7432e-01, -8.7829e-02,
        -7.1587e-01,  6.2630e-02, -6.5799e-02, -4.9445e-01, -1.5747e-01,
        -3.8508e-01,  5.2682e-01, -4.6924e-01,  2.5107e-01, -2.7383e-02,
        -2.9832e-01, -7.6966e-01, -5.6365e-01, -5.4110e-01, -2.0131e-01,
        -2.4491e-02, -5.4516e-01, -6.6991e-01, -4.4050e-01, -3.6120e-01,
        -4.4931e-01,  9.2929e-01, -3.0200e-01, -6.1052e-01, -5.7071e-01,
        -6.6213e-01, -3.8121e-01,  1.2198e-02, -8.6433e-01,  2.6767e-01,
        -7.5161e-01,  3.2628e-01,  3.6823e-01,  8.1480e-01,  7.8604e-01,
        -1.2209e+00,  2.5462e-01,  1.0791e-03, -1.2305e-01, -1.2357e-01,
         3.7093e-01, -3.0680e-01, -8.4048e-01, -6.9645e-01, -8.8633e-01,
         1.5005e-01, -4.3296e-02,  3.2904e-02, -4.5692e-01, -5.4789e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([13600]), tensor(0.2117))
INFO:main.py:Create prediction_dataset
INFO:main.py:prediction_dataset first example: (tensor([-4.1792e-01, -4.2350e-01, -3.0512e-01,  1.1033e+00,  5.7317e-02,
        -5.4959e-01, -1.5637e+00, -8.9018e-01, -3.2716e-01, -5.8063e-01,
        -8.0325e-01, -1.1773e-01, -7.1736e-01,  2.5044e-01, -5.2608e-01,
         3.6482e+00, -3.7153e-01, -3.0296e-01,  2.5439e-01,  6.0875e-01,
        -6.5725e-01, -1.6476e-01,  5.9482e+00, -5.3284e-01, -2.2343e-01,
        -7.1912e-01, -6.4287e-01, -5.1593e-02, -1.8646e-01,  9.1967e-01,
        -3.6631e-01, -1.1420e-01,  5.3465e-01, -5.4778e+00, -7.1421e-01,
        -5.3379e-01, -4.2976e-01, -6.5956e-01, -1.5274e-01, -1.0213e+00,
        -1.8724e-01, -6.4659e-01,  1.1008e-01, -9.6265e-02, -6.6221e-02,
        -7.5417e-01,  1.1739e-01, -2.3533e-02, -3.1402e-01, -2.0254e-01,
         2.6496e-01,  5.2682e-01, -4.6924e-01, -8.6538e-01, -7.8676e-01,
        -4.9419e-01,  2.5336e-02, -6.7803e-01, -1.5611e-01, -2.2049e-01,
        -2.2110e-01, -2.6546e-01, -1.4476e+00,  8.1112e-01, -3.4931e-02,
        -5.5998e-01, -5.2972e-01,  1.0169e+00,  1.1991e+00, -5.5256e-01,
        -1.6403e-02,  1.8524e-02,  1.2198e-02, -7.6193e-01, -1.9105e-01,
        -2.0199e-01, -4.0313e-01,  3.1605e-01,  3.2599e+00,  7.8604e-01,
         8.3922e-01,  1.3186e+00,  1.0791e-03,  2.0397e-01,  6.6539e-01,
         7.6615e-01, -1.4824e-01, -8.2985e-01, -6.0081e-01, -7.9776e-01,
        -1.2722e-01, -7.3134e-01,  1.0477e+00, -3.9767e-01, -5.4789e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([3641]), tensor(-0.0131))
INFO:main.py:

Create dataloader

INFO:main.py:Create train and test dataloader
INFO:main.py:Create retrain and prediction dataloader
INFO:main.py:

Hyperparameters tuning with Ray Tune

INFO:main.py:Training data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000]
INFO:main.py:Testing data year: 2001
INFO:main.py:

            ray_results_path: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
            num_samples: 60
            max_num_epochs: 20
            num_cpus: 60
            cpus_per_trial: 1
            num_gpus: 2
            gpus_per_trial: 0
            continuous_dim: 102
            num_embeddings: 15172
            device: cuda
            
2024-07-06 04:32:42,132	INFO worker.py:1753 -- Started a local Ray instance.
2024-07-06 04:32:42,154	INFO packaging.py:530 -- Creating a file package for local directory '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src'.
2024-07-06 04:32:42,171	INFO packaging.py:358 -- Pushing file package 'gcs://_ray_pkg_3d7d5eb957aaab70.zip' (1.20MiB) to Ray cluster...
2024-07-06 04:32:42,175	INFO packaging.py:371 -- Successfully pushed file package 'gcs://_ray_pkg_3d7d5eb957aaab70.zip'.
2024-07-06 04:32:45,242	WARNING tune.py:902 -- AIR_VERBOSITY is set, ignoring passed-in ProgressReporter for now.
2024-07-06 05:31:49,835	INFO tune.py:1009 -- Wrote the latest version of all result files and experiment state to '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results/train_fnn_2024-07-06_04-32-45' in 0.1614s.
INFO:model_data_nn.py:Best trial config: {'continuous_dim': 102, 'hidden_dim': 5, 'num_layers': 3, 'num_embeddings': 15172, 'embedding_dim': 10, 'dropout_rate': 0.3106726817275091, 'lr': 0.000643375209213068, 'weight_decay': 0.0001224868285680487, 'num_epochs': 20, 'num_gpus': 2}
INFO:model_data_nn.py:Best trial training loss: 0.0369019438340879
INFO:model_data_nn.py:Best trial testing loss: 0.07116414392073675
INFO:main.py:Ray Tune results have been saved to: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
INFO:main.py:Best trial directory: /tmp/ray/session_2024-07-06_04-32-38_816344_1070676/artifacts/2024-07-06_04-32-45/train_fnn_2024-07-06_04-32-45/driver_artifacts/train_fnn_ca7d3_00039_39_dropout_rate=0.3107,embedding_dim=10,hidden_dim=5,lr=0.0006,num_layers=3,weight_decay=0.0001_2024-07-06_04-32-45
INFO:main.py:

Retrain a new model with data in years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001]

            Using the optimized hyperparameters: {'continuous_dim': 102, 'hidden_dim': 5, 'num_layers': 3, 'num_embeddings': 15670, 'embedding_dim': 10, 'dropout_rate': 0.3106726817275091, 'lr': 0.000643375209213068, 'weight_decay': 0.0001224868285680487, 'num_epochs': 20, 'num_gpus': 2}

INFO:model_data_nn.py:Epoch 1/20, metrics: {'avg_train_loss': 12.249388063167459, 'avg_test_loss': 0.6328096561041116}
INFO:model_data_nn.py:Epoch 2/20, metrics: {'avg_train_loss': 0.15397777755721587, 'avg_test_loss': 0.05056861667851319}
INFO:model_data_nn.py:Epoch 3/20, metrics: {'avg_train_loss': 0.03913333833180553, 'avg_test_loss': 0.04639751891918573}
INFO:model_data_nn.py:Epoch 4/20, metrics: {'avg_train_loss': 0.03894362814613243, 'avg_test_loss': 0.046544819536978276}
INFO:model_data_nn.py:Epoch 5/20, metrics: {'avg_train_loss': 0.03882426935678988, 'avg_test_loss': 0.04661084013252956}
INFO:model_data_nn.py:Epoch 6/20, metrics: {'avg_train_loss': 0.03872916943379747, 'avg_test_loss': 0.04616604586947261}
INFO:model_data_nn.py:Epoch 7/20, metrics: {'avg_train_loss': 0.03870803885124809, 'avg_test_loss': 0.04638733355042474}
INFO:model_data_nn.py:Epoch 8/20, metrics: {'avg_train_loss': 0.03869316239113831, 'avg_test_loss': 0.04638403016084581}
INFO:model_data_nn.py:Epoch 9/20, metrics: {'avg_train_loss': 0.03870032154542593, 'avg_test_loss': 0.04669291126885726}
INFO:model_data_nn.py:Epoch 10/20, metrics: {'avg_train_loss': 0.03869194988439332, 'avg_test_loss': 0.04644530432306508}
INFO:model_data_nn.py:Epoch 11/20, metrics: {'avg_train_loss': 0.03870667699168422, 'avg_test_loss': 0.046342793558395746}
INFO:model_data_nn.py:Epoch 12/20, metrics: {'avg_train_loss': 0.03871502966170584, 'avg_test_loss': 0.04611793233862309}
INFO:model_data_nn.py:Epoch 13/20, metrics: {'avg_train_loss': 0.03869281765388612, 'avg_test_loss': 0.04614216951784751}
INFO:model_data_nn.py:Epoch 14/20, metrics: {'avg_train_loss': 0.038707309902752216, 'avg_test_loss': 0.045971626021679014}
INFO:model_data_nn.py:Epoch 15/20, metrics: {'avg_train_loss': 0.03870149705670218, 'avg_test_loss': 0.04611468805131576}
INFO:model_data_nn.py:Epoch 16/20, metrics: {'avg_train_loss': 0.038710116699375026, 'avg_test_loss': 0.046309250692887174}
INFO:model_data_nn.py:Epoch 17/20, metrics: {'avg_train_loss': 0.03869557567774805, 'avg_test_loss': 0.04643993871479732}
INFO:model_data_nn.py:Epoch 18/20, metrics: {'avg_train_loss': 0.038700088381544866, 'avg_test_loss': 0.0462860471619239}
INFO:model_data_nn.py:Epoch 19/20, metrics: {'avg_train_loss': 0.0387105124451183, 'avg_test_loss': 0.04628674696002511}
INFO:model_data_nn.py:Epoch 20/20, metrics: {'avg_train_loss': 0.03869459760389221, 'avg_test_loss': 0.04649515183742981}
INFO:main.py:Making prediction for data in year: 2001
INFO:main.py:Prediction data shape: (61461,)
/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src/main.py:372: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  prediction_data['pred'] = predictions
INFO:main.py:Root Mean Squared Error for Prediction in 2002: 0.21585370309599808
INFO:main.py:Prediction Stats:                 ret          pred
count  61461.000000  61461.000000
mean      -0.007912      0.021228
std        0.214756      0.021289
min       -0.943662     -0.042513
25%       -0.103030      0.012503
50%       -0.010447      0.015313
75%        0.066667      0.019661
max        5.640000      0.357527
INFO:main.py:

Transform data

INFO:transform_data_nn.py:Train data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001]
INFO:transform_data_nn.py:Train_data: (1286308, 158)

INFO:transform_data_nn.py:Test data years: [2002]
INFO:transform_data_nn.py:Test_data: (61461, 158)

INFO:transform_data_nn.py:Retrain data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002]
INFO:transform_data_nn.py:Retrain_data: (1347769, 158)

INFO:transform_data_nn.py:Prediction data years: [2003]
INFO:transform_data_nn.py:Prediction_data: (56926, 158)

INFO:main.py:

Generate X and y with train_data and test_data

INFO:main.py:
            x_train_tf: torch.Size([1286308, 103])
            y_train_tf: torch.Size([1286308])

            x_test_tf: torch.Size([61461, 103])
            y_test_tf: torch.Size([61461])

        
INFO:main.py:

Generate X and y with retrain_data and prediction_data

INFO:main.py:
            x_retrain_tf: torch.Size([1347769, 103])
            y_retrain_tf: torch.Size([1347769])

            x_prediction_tf: torch.Size([56926, 103])
            y_prediction_tf: torch.Size([56926])

        
INFO:main.py:

Create dataset

INFO:main.py:Create train_dataset
INFO:main.py:train_dataset first example: (tensor([ 1.9130e-01,  1.0317e+00,  1.0057e-01, -7.5313e-01, -2.6277e-02,
        -5.9342e-01, -2.9333e-02, -2.7378e-01,  7.0414e-01, -2.5242e-01,
        -7.5822e-01, -2.1584e-02, -7.1736e-01, -4.9973e-01, -4.3663e-01,
        -2.2364e-03, -4.0732e-01,  8.5453e-02, -9.9921e-02,  7.7771e-01,
        -5.1882e-01, -1.7643e-01, -2.0502e-01, -8.5704e-03, -5.7235e-02,
        -2.9341e-01, -5.9183e-01, -5.1593e-02,  6.2987e-01,  1.7571e+00,
         3.8192e-01, -1.7245e-01,  9.1582e-01,  2.0007e-01, -3.9882e-01,
        -2.7213e-01,  1.1334e-01,  4.1044e-01, -5.1828e-02, -1.1346e+00,
        -2.2303e-01,  2.1573e-01,  4.0054e-01,  1.7432e-01, -8.7829e-02,
        -7.1587e-01,  6.2630e-02, -6.5799e-02, -4.9445e-01, -1.5747e-01,
        -3.8508e-01,  5.2682e-01, -4.6924e-01,  2.5107e-01, -2.7383e-02,
        -2.9832e-01, -7.6966e-01, -5.6365e-01, -5.4110e-01, -2.0131e-01,
        -2.4491e-02, -5.4516e-01, -6.6991e-01, -4.4050e-01, -3.6120e-01,
        -4.4931e-01,  9.2929e-01, -3.0200e-01, -6.1052e-01, -5.7071e-01,
        -6.6213e-01, -3.8121e-01,  1.2198e-02, -8.6433e-01,  2.6767e-01,
        -7.5161e-01,  3.2628e-01,  3.6823e-01,  8.1480e-01,  7.8604e-01,
        -1.2209e+00,  2.5462e-01,  1.0791e-03, -1.2305e-01, -1.2357e-01,
         3.7093e-01, -3.0680e-01, -8.4048e-01, -6.9645e-01, -8.8633e-01,
         1.5005e-01, -4.3296e-02,  3.2904e-02, -4.5692e-01, -5.4789e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([13600]), tensor(0.2117))
INFO:main.py:Create test_dataset
INFO:main.py:test_dataset first example: (tensor([-4.1792e-01, -4.2350e-01, -3.0512e-01,  1.1033e+00,  5.7317e-02,
        -5.4959e-01, -1.5637e+00, -8.9018e-01, -3.2716e-01, -5.8063e-01,
        -8.0325e-01, -1.1773e-01, -7.1736e-01,  2.5044e-01, -5.2608e-01,
         3.6482e+00, -3.7153e-01, -3.0296e-01,  2.5439e-01,  6.0875e-01,
        -6.5725e-01, -1.6476e-01,  5.9482e+00, -5.3284e-01, -2.2343e-01,
        -7.1912e-01, -6.4287e-01, -5.1593e-02, -1.8646e-01,  9.1967e-01,
        -3.6631e-01, -1.1420e-01,  5.3465e-01, -5.4778e+00, -7.1421e-01,
        -5.3379e-01, -4.2976e-01, -6.5956e-01, -1.5274e-01, -1.0213e+00,
        -1.8724e-01, -6.4659e-01,  1.1008e-01, -9.6265e-02, -6.6221e-02,
        -7.5417e-01,  1.1739e-01, -2.3533e-02, -3.1402e-01, -2.0254e-01,
         2.6496e-01,  5.2682e-01, -4.6924e-01, -8.6538e-01, -7.8676e-01,
        -4.9419e-01,  2.5336e-02, -6.7803e-01, -1.5611e-01, -2.2049e-01,
        -2.2110e-01, -2.6546e-01, -1.4476e+00,  8.1112e-01, -3.4931e-02,
        -5.5998e-01, -5.2972e-01,  1.0169e+00,  1.1991e+00, -5.5256e-01,
        -1.6403e-02,  1.8524e-02,  1.2198e-02, -7.6193e-01, -1.9105e-01,
        -2.0199e-01, -4.0313e-01,  3.1605e-01,  3.2599e+00,  7.8604e-01,
         8.3922e-01,  1.3186e+00,  1.0791e-03,  2.0397e-01,  6.6539e-01,
         7.6615e-01, -1.4824e-01, -8.2985e-01, -6.0081e-01, -7.9776e-01,
        -1.2722e-01, -7.3134e-01,  1.0477e+00, -3.9767e-01, -5.4789e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([3641]), tensor(-0.0131))
INFO:main.py:Create retrain_dataset
INFO:main.py:retrain_dataset first example: (tensor([ 1.7046e-01,  1.0503e+00,  1.0316e-01, -7.6492e-01, -2.4388e-02,
        -5.9993e-01, -2.6582e-02, -2.7268e-01,  6.8946e-01, -2.6407e-01,
        -7.5661e-01, -8.2694e-03, -7.1680e-01, -5.0723e-01, -4.3699e-01,
        -1.2091e-04, -4.0420e-01,  9.2116e-02, -1.0268e-01,  7.9286e-01,
        -5.0770e-01, -1.7988e-01, -2.3268e-01,  7.3300e-04, -5.6580e-02,
        -2.9460e-01, -5.4226e-01, -5.8021e-02,  6.3352e-01,  1.7604e+00,
         3.7570e-01, -1.6914e-01,  9.1371e-01,  2.0313e-01, -3.8682e-01,
        -2.6710e-01,  1.1600e-01,  4.3075e-01, -4.9092e-02, -1.1403e+00,
        -2.2428e-01,  2.3123e-01,  4.1358e-01,  1.6595e-01, -8.5075e-02,
        -7.1948e-01,  6.9977e-02, -6.2162e-02, -4.8336e-01, -1.4842e-01,
        -3.9737e-01,  5.2795e-01, -4.6832e-01,  2.4831e-01, -2.6401e-02,
        -2.9144e-01, -7.5321e-01, -5.5255e-01, -5.3969e-01, -2.0388e-01,
        -2.1903e-02, -5.4486e-01, -6.5939e-01, -4.4299e-01, -3.5742e-01,
        -4.4639e-01,  9.6177e-01, -3.0233e-01, -6.1880e-01, -5.7256e-01,
        -6.5475e-01, -3.9129e-01,  7.8196e-03, -8.6972e-01,  2.8070e-01,
        -7.3449e-01,  3.3376e-01,  3.7714e-01,  8.3210e-01,  7.9708e-01,
        -1.2307e+00,  2.5452e-01,  1.9954e-03, -2.6865e-01, -1.2334e-01,
         3.7320e-01, -2.8421e-01, -8.3923e-01, -7.1103e-01, -8.9731e-01,
         1.2507e-01, -3.3322e-02,  3.5251e-02, -4.6132e-01, -5.4222e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([13743]), tensor(0.2117))
INFO:main.py:Create prediction_dataset
INFO:main.py:prediction_dataset first example: (tensor([-4.6442e-03, -7.1150e-01, -7.3666e-01,  1.0972e+00, -5.5351e-01,
        -4.6556e-01, -1.5281e+00, -8.7415e-01, -1.3401e-01,  1.1663e+00,
        -7.8325e-01, -1.9816e-01, -7.1680e-01,  4.0686e-01, -5.2885e-01,
        -1.8723e+00, -3.4345e-01, -5.7535e-01, -1.0268e-01,  9.0716e-04,
        -2.9686e-01, -1.6330e-01, -5.1058e-01,  6.8559e-01, -4.2811e-02,
        -7.7326e-01, -5.9814e-01, -5.8021e-02, -7.1617e-01,  1.3154e+00,
        -5.4054e-02, -2.2915e-01,  3.0837e-01,  2.0313e-01, -9.0953e-01,
        -3.8830e-01, -4.3916e-02, -6.8165e-01, -4.2049e-01, -1.0985e+00,
        -1.9302e-01, -8.9247e-01, -1.2574e-02, -7.0951e-02, -4.7785e-01,
        -6.9420e-01, -6.7159e-01, -7.0210e-01,  1.3225e-01, -4.8858e-01,
         2.5087e-01, -5.3718e-02, -4.6832e-01, -1.1681e+00, -7.8486e-01,
        -6.7584e-01,  2.3351e-02, -6.7252e-01, -3.6024e-01, -3.7219e-01,
        -4.3128e-01, -5.5155e-01, -9.8882e-01,  1.7606e-02, -2.5390e-02,
        -6.2300e-01, -5.1360e-01,  8.6776e-01, -6.1880e-01, -6.5529e-01,
        -1.4989e-02,  2.8405e-02,  7.8196e-03, -6.0532e-01,  2.7150e-02,
        -2.7141e-01, -1.9906e-02,  1.1587e-01, -3.3852e+00,  7.9708e-01,
         8.3411e-01,  1.3221e+00,  1.9954e-03, -2.6865e-01, -6.2504e-01,
         7.4249e-01,  1.9455e-02, -6.6743e-01, -5.6330e-01, -7.8849e-01,
         3.6197e-01, -3.3132e-01,  3.5990e+00, -5.7769e-01, -5.4222e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([3379]), tensor(0.1481))
INFO:main.py:

Create dataloader

INFO:main.py:Create train and test dataloader
INFO:main.py:Create retrain and prediction dataloader
INFO:main.py:

Hyperparameters tuning with Ray Tune

INFO:main.py:Training data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001]
INFO:main.py:Testing data year: 2002
INFO:main.py:

            ray_results_path: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
            num_samples: 60
            max_num_epochs: 20
            num_cpus: 60
            cpus_per_trial: 1
            num_gpus: 2
            gpus_per_trial: 0
            continuous_dim: 102
            num_embeddings: 15670
            device: cuda
            
2024-07-06 07:38:41,443	INFO worker.py:1753 -- Started a local Ray instance.
2024-07-06 07:38:41,470	INFO packaging.py:530 -- Creating a file package for local directory '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src'.
2024-07-06 07:38:41,492	INFO packaging.py:358 -- Pushing file package 'gcs://_ray_pkg_3d7d5eb957aaab70.zip' (1.20MiB) to Ray cluster...
2024-07-06 07:38:41,499	INFO packaging.py:371 -- Successfully pushed file package 'gcs://_ray_pkg_3d7d5eb957aaab70.zip'.
2024-07-06 07:38:44,596	WARNING tune.py:902 -- AIR_VERBOSITY is set, ignoring passed-in ProgressReporter for now.
2024-07-06 08:30:32,060	INFO tune.py:1009 -- Wrote the latest version of all result files and experiment state to '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results/train_fnn_2024-07-06_07-38-44' in 0.1661s.
INFO:model_data_nn.py:Best trial config: {'continuous_dim': 102, 'hidden_dim': 35, 'num_layers': 3, 'num_embeddings': 15670, 'embedding_dim': 15, 'dropout_rate': 0.14076636666981, 'lr': 0.0002566960992206887, 'weight_decay': 2.5757392938302746e-05, 'num_epochs': 20, 'num_gpus': 2}
INFO:model_data_nn.py:Best trial training loss: 0.03802859927421037
INFO:model_data_nn.py:Best trial testing loss: 0.045750016984201315
INFO:main.py:Ray Tune results have been saved to: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
INFO:main.py:Best trial directory: /tmp/ray/session_2024-07-06_07-38-38_858905_1070676/artifacts/2024-07-06_07-38-44/train_fnn_2024-07-06_07-38-44/driver_artifacts/train_fnn_c5fb7_00024_24_dropout_rate=0.1408,embedding_dim=15,hidden_dim=35,lr=0.0003,num_layers=3,weight_decay=0.0000_2024-07-06_07-38-44
INFO:main.py:

Retrain a new model with data in years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002]

            Using the optimized hyperparameters: {'continuous_dim': 102, 'hidden_dim': 35, 'num_layers': 3, 'num_embeddings': 15835, 'embedding_dim': 15, 'dropout_rate': 0.14076636666981, 'lr': 0.0002566960992206887, 'weight_decay': 2.5757392938302746e-05, 'num_epochs': 20, 'num_gpus': 2}

INFO:model_data_nn.py:Epoch 1/20, metrics: {'avg_train_loss': 4.599054935769818, 'avg_test_loss': 0.07349526644955837}
INFO:model_data_nn.py:Epoch 2/20, metrics: {'avg_train_loss': 0.05790972386337357, 'avg_test_loss': 0.037985307452657296}
INFO:model_data_nn.py:Epoch 3/20, metrics: {'avg_train_loss': 0.039357892165609684, 'avg_test_loss': 0.03705669870608457}
INFO:model_data_nn.py:Epoch 4/20, metrics: {'avg_train_loss': 0.03927609800305377, 'avg_test_loss': 0.03708572459570028}
INFO:model_data_nn.py:Epoch 5/20, metrics: {'avg_train_loss': 0.03905596211163463, 'avg_test_loss': 0.037288596838996685}
INFO:model_data_nn.py:Epoch 6/20, metrics: {'avg_train_loss': 0.03889229700892654, 'avg_test_loss': 0.038116435054689646}
INFO:model_data_nn.py:Epoch 7/20, metrics: {'avg_train_loss': 0.03878351463746113, 'avg_test_loss': 0.03752212948061426}
INFO:model_data_nn.py:Epoch 8/20, metrics: {'avg_train_loss': 0.03872265621510326, 'avg_test_loss': 0.037609450642286796}
INFO:model_data_nn.py:Epoch 9/20, metrics: {'avg_train_loss': 0.03869115273695499, 'avg_test_loss': 0.037308729042804425}
INFO:model_data_nn.py:Epoch 10/20, metrics: {'avg_train_loss': 0.038641455897960565, 'avg_test_loss': 0.03779854855370695}
INFO:model_data_nn.py:Epoch 11/20, metrics: {'avg_train_loss': 0.03860057296880573, 'avg_test_loss': 0.03766116112545801}
INFO:model_data_nn.py:Epoch 12/20, metrics: {'avg_train_loss': 0.03855889369817654, 'avg_test_loss': 0.037240850233844575}
INFO:model_data_nn.py:Epoch 13/20, metrics: {'avg_train_loss': 0.03854387760116362, 'avg_test_loss': 0.037020794186958285}
INFO:model_data_nn.py:Epoch 14/20, metrics: {'avg_train_loss': 0.03853891459589953, 'avg_test_loss': 0.03757923029179397}
INFO:model_data_nn.py:Epoch 15/20, metrics: {'avg_train_loss': 0.03851469410839867, 'avg_test_loss': 0.03720359081160193}
INFO:model_data_nn.py:Epoch 16/20, metrics: {'avg_train_loss': 0.038499092040380066, 'avg_test_loss': 0.03778755467702455}
INFO:model_data_nn.py:Epoch 17/20, metrics: {'avg_train_loss': 0.03847600767355331, 'avg_test_loss': 0.03771958233279097}
INFO:model_data_nn.py:Epoch 18/20, metrics: {'avg_train_loss': 0.03845676626560808, 'avg_test_loss': 0.037520438044294384}
INFO:model_data_nn.py:Epoch 19/20, metrics: {'avg_train_loss': 0.038478594005872044, 'avg_test_loss': 0.037340074823542825}
INFO:model_data_nn.py:Epoch 20/20, metrics: {'avg_train_loss': 0.03845753681519602, 'avg_test_loss': 0.03737380967638351}
INFO:main.py:Making prediction for data in year: 2002
INFO:main.py:Prediction data shape: (56926,)
/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src/main.py:372: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  prediction_data['pred'] = predictions
INFO:main.py:Root Mean Squared Error for Prediction in 2003: 0.19346168375983794
INFO:main.py:Prediction Stats:                 ret          pred
count  56926.000000  56926.000000
mean       0.050288      0.012435
std        0.189697      0.025139
min       -0.941860     -0.172382
25%       -0.034503      0.004683
50%        0.024504      0.008814
75%        0.101695      0.014464
max        5.178572      0.628017
INFO:main.py:

Transform data

INFO:transform_data_nn.py:Train data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002]
INFO:transform_data_nn.py:Train_data: (1347769, 158)

INFO:transform_data_nn.py:Test data years: [2003]
INFO:transform_data_nn.py:Test_data: (56926, 158)

INFO:transform_data_nn.py:Retrain data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003]
INFO:transform_data_nn.py:Retrain_data: (1404695, 158)

INFO:transform_data_nn.py:Prediction data years: [2004]
INFO:transform_data_nn.py:Prediction_data: (54127, 158)

INFO:main.py:

Generate X and y with train_data and test_data

INFO:main.py:
            x_train_tf: torch.Size([1347769, 103])
            y_train_tf: torch.Size([1347769])

            x_test_tf: torch.Size([56926, 103])
            y_test_tf: torch.Size([56926])

        
INFO:main.py:

Generate X and y with retrain_data and prediction_data

INFO:main.py:
            x_retrain_tf: torch.Size([1404695, 103])
            y_retrain_tf: torch.Size([1404695])

            x_prediction_tf: torch.Size([54127, 103])
            y_prediction_tf: torch.Size([54127])

        
INFO:main.py:

Create dataset

INFO:main.py:Create train_dataset
INFO:main.py:train_dataset first example: (tensor([ 1.7046e-01,  1.0503e+00,  1.0316e-01, -7.6492e-01, -2.4388e-02,
        -5.9993e-01, -2.6582e-02, -2.7268e-01,  6.8946e-01, -2.6407e-01,
        -7.5661e-01, -8.2694e-03, -7.1680e-01, -5.0723e-01, -4.3699e-01,
        -1.2091e-04, -4.0420e-01,  9.2116e-02, -1.0268e-01,  7.9286e-01,
        -5.0770e-01, -1.7988e-01, -2.3268e-01,  7.3300e-04, -5.6580e-02,
        -2.9460e-01, -5.4226e-01, -5.8021e-02,  6.3352e-01,  1.7604e+00,
         3.7570e-01, -1.6914e-01,  9.1371e-01,  2.0313e-01, -3.8682e-01,
        -2.6710e-01,  1.1600e-01,  4.3075e-01, -4.9092e-02, -1.1403e+00,
        -2.2428e-01,  2.3123e-01,  4.1358e-01,  1.6595e-01, -8.5075e-02,
        -7.1948e-01,  6.9977e-02, -6.2162e-02, -4.8336e-01, -1.4842e-01,
        -3.9737e-01,  5.2795e-01, -4.6832e-01,  2.4831e-01, -2.6401e-02,
        -2.9144e-01, -7.5321e-01, -5.5255e-01, -5.3969e-01, -2.0388e-01,
        -2.1903e-02, -5.4486e-01, -6.5939e-01, -4.4299e-01, -3.5742e-01,
        -4.4639e-01,  9.6177e-01, -3.0233e-01, -6.1880e-01, -5.7256e-01,
        -6.5475e-01, -3.9129e-01,  7.8196e-03, -8.6972e-01,  2.8070e-01,
        -7.3449e-01,  3.3376e-01,  3.7714e-01,  8.3210e-01,  7.9708e-01,
        -1.2307e+00,  2.5452e-01,  1.9954e-03, -2.6865e-01, -1.2334e-01,
         3.7320e-01, -2.8421e-01, -8.3923e-01, -7.1103e-01, -8.9731e-01,
         1.2507e-01, -3.3322e-02,  3.5251e-02, -4.6132e-01, -5.4222e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([13743]), tensor(0.2117))
INFO:main.py:Create test_dataset
INFO:main.py:test_dataset first example: (tensor([-4.6442e-03, -7.1150e-01, -7.3666e-01,  1.0972e+00, -5.5351e-01,
        -4.6556e-01, -1.5281e+00, -8.7415e-01, -1.3401e-01,  1.1663e+00,
        -7.8325e-01, -1.9816e-01, -7.1680e-01,  4.0686e-01, -5.2885e-01,
        -1.8723e+00, -3.4345e-01, -5.7535e-01, -1.0268e-01,  9.0716e-04,
        -2.9686e-01, -1.6330e-01, -5.1058e-01,  6.8559e-01, -4.2811e-02,
        -7.7326e-01, -5.9814e-01, -5.8021e-02, -7.1617e-01,  1.3154e+00,
        -5.4054e-02, -2.2915e-01,  3.0837e-01,  2.0313e-01, -9.0953e-01,
        -3.8830e-01, -4.3916e-02, -6.8165e-01, -4.2049e-01, -1.0985e+00,
        -1.9302e-01, -8.9247e-01, -1.2574e-02, -7.0951e-02, -4.7785e-01,
        -6.9420e-01, -6.7159e-01, -7.0210e-01,  1.3225e-01, -4.8858e-01,
         2.5087e-01, -5.3718e-02, -4.6832e-01, -1.1681e+00, -7.8486e-01,
        -6.7584e-01,  2.3351e-02, -6.7252e-01, -3.6024e-01, -3.7219e-01,
        -4.3128e-01, -5.5155e-01, -9.8882e-01,  1.7606e-02, -2.5390e-02,
        -6.2300e-01, -5.1360e-01,  8.6776e-01, -6.1880e-01, -6.5529e-01,
        -1.4989e-02,  2.8405e-02,  7.8196e-03, -6.0532e-01,  2.7150e-02,
        -2.7141e-01, -1.9906e-02,  1.1587e-01, -3.3852e+00,  7.9708e-01,
         8.3411e-01,  1.3221e+00,  1.9954e-03, -2.6865e-01, -6.2504e-01,
         7.4249e-01,  1.9455e-02, -6.6743e-01, -5.6330e-01, -7.8849e-01,
         3.6197e-01, -3.3132e-01,  3.5990e+00, -5.7769e-01, -5.4222e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([3379]), tensor(0.1481))
INFO:main.py:Create retrain_dataset
INFO:main.py:retrain_dataset first example: (tensor([ 1.5604e-01,  1.0714e+00,  1.0108e-01, -7.8209e-01, -1.2130e-02,
        -6.0056e-01, -2.2941e-02, -2.7015e-01,  6.8574e-01, -2.7998e-01,
        -7.5737e-01,  2.9376e-03, -7.1416e-01, -5.1553e-01, -4.3972e-01,
         5.1077e-03, -4.0012e-01,  9.7773e-02, -1.0447e-01,  8.1136e-01,
        -5.1791e-01, -1.7780e-01, -2.4061e-01, -6.2239e-04, -5.7070e-02,
        -2.9437e-01, -5.2431e-01, -6.3917e-02,  6.3626e-01,  1.7789e+00,
         3.6687e-01, -1.6265e-01,  9.1426e-01,  2.0814e-01, -3.7507e-01,
        -2.5589e-01,  1.3008e-01,  4.4769e-01, -3.9421e-02, -1.1449e+00,
        -2.2313e-01,  2.2686e-01,  4.3211e-01,  1.5953e-01, -7.7065e-02,
        -7.1923e-01,  6.9850e-02, -6.9385e-02, -4.7467e-01, -1.5968e-01,
        -4.0927e-01,  5.2971e-01, -4.6816e-01,  2.4271e-01, -2.7999e-02,
        -2.8392e-01, -7.3902e-01, -5.4150e-01, -5.4046e-01, -2.0140e-01,
        -2.2941e-02, -5.4662e-01, -6.5088e-01, -4.4486e-01, -3.5461e-01,
        -4.4594e-01,  9.9549e-01, -3.0184e-01, -6.2823e-01, -5.7363e-01,
        -6.4825e-01, -3.9657e-01,  3.8536e-03, -8.6961e-01,  2.8713e-01,
        -7.1513e-01,  3.3363e-01,  3.8378e-01,  8.3850e-01,  8.0836e-01,
        -1.2379e+00,  2.5120e-01,  4.1127e-03, -5.3021e-01, -1.1406e-01,
         3.7793e-01, -2.5967e-01, -8.3905e-01, -7.1925e-01, -8.9822e-01,
         1.0592e-01, -2.4122e-02,  3.2277e-02, -4.6667e-01, -5.3510e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([13879]), tensor(0.2117))
INFO:main.py:Create prediction_dataset
INFO:main.py:prediction_dataset first example: (tensor([-2.0605e-01, -5.2218e-01, -7.1876e-01,  1.0886e+00, -2.1833e-01,
        -3.7876e-01, -1.4151e+00, -8.6051e-01,  3.7612e-01,  2.2521e+00,
        -6.3491e-01, -2.5950e-01, -7.1416e-01,  4.2461e-01, -5.3287e-01,
        -1.7617e+00, -3.8402e-01,  2.1642e-01, -1.0447e-01, -1.5780e+00,
         2.2156e-01, -1.7041e-01, -2.5909e-01, -2.1556e+00, -4.2613e-01,
        -8.2028e-01, -5.6331e-01, -6.3917e-02, -7.8576e-01,  1.8501e+00,
        -3.0582e-01, -3.8150e-01, -6.1164e-02,  2.0814e-01, -9.7266e-01,
        -3.3635e-01, -1.1449e-01, -6.7184e-01, -2.8151e-01, -6.4299e-01,
        -1.9568e-01,  5.6402e-01, -4.5384e-01,  4.1728e-01, -1.8735e-01,
        -6.4159e-01, -5.5384e-01, -8.9574e-02, -6.5590e-01, -1.8240e-01,
        -4.0927e-01, -3.6514e-01, -4.6816e-01, -1.1528e+00, -7.8270e-01,
        -7.8624e-01,  2.0984e-02, -6.6591e-01, -3.6310e-01, -1.3020e-01,
        -3.7314e-01,  1.3849e-01,  1.4806e+00, -5.2953e-01, -2.4981e-02,
         3.1637e+00, -4.9530e-01,  4.0239e-01, -6.2823e-01, -5.9706e-01,
        -2.3230e-02,  3.5434e-02,  3.8536e-03, -6.7755e-01, -5.5883e-01,
        -2.1342e-01, -1.1026e+00, -3.1202e-02,  2.1154e+00,  8.0836e-01,
         8.3070e-01,  1.1939e+00,  4.1127e-03, -5.3021e-01, -6.7674e-01,
         1.1840e+00, -2.1592e-01,  8.6651e-02, -5.6895e-01, -7.8911e-01,
        -1.3719e+00, -5.4209e-01,  8.1432e+00, -3.4945e-01, -5.3510e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([3253]), tensor(0.0101))
INFO:main.py:

Create dataloader

INFO:main.py:Create train and test dataloader
INFO:main.py:Create retrain and prediction dataloader
INFO:main.py:

Hyperparameters tuning with Ray Tune

INFO:main.py:Training data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002]
INFO:main.py:Testing data year: 2003
INFO:main.py:

            ray_results_path: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
            num_samples: 60
            max_num_epochs: 20
            num_cpus: 60
            cpus_per_trial: 1
            num_gpus: 2
            gpus_per_trial: 0
            continuous_dim: 102
            num_embeddings: 15835
            device: cuda
            
2024-07-06 10:43:01,804	INFO worker.py:1753 -- Started a local Ray instance.
2024-07-06 10:43:01,831	INFO packaging.py:530 -- Creating a file package for local directory '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src'.
2024-07-06 10:43:01,853	INFO packaging.py:358 -- Pushing file package 'gcs://_ray_pkg_3d7d5eb957aaab70.zip' (1.20MiB) to Ray cluster...
2024-07-06 10:43:01,859	INFO packaging.py:371 -- Successfully pushed file package 'gcs://_ray_pkg_3d7d5eb957aaab70.zip'.
2024-07-06 10:43:05,028	WARNING tune.py:902 -- AIR_VERBOSITY is set, ignoring passed-in ProgressReporter for now.
2024-07-06 11:06:44,148	INFO tune.py:1009 -- Wrote the latest version of all result files and experiment state to '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results/train_fnn_2024-07-06_10-43-05' in 0.1307s.
INFO:model_data_nn.py:Best trial config: {'continuous_dim': 102, 'hidden_dim': 65, 'num_layers': 3, 'num_embeddings': 15835, 'embedding_dim': 5, 'dropout_rate': 0.27180818453385097, 'lr': 0.00011948354480999256, 'weight_decay': 6.430385379260095e-06, 'num_epochs': 20, 'num_gpus': 2}
INFO:model_data_nn.py:Best trial training loss: 0.03862998368658996
INFO:model_data_nn.py:Best trial testing loss: 0.03685569235086107
INFO:main.py:Ray Tune results have been saved to: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
INFO:main.py:Best trial directory: /tmp/ray/session_2024-07-06_10-42-59_275253_1070676/artifacts/2024-07-06_10-43-05/train_fnn_2024-07-06_10-43-05/driver_artifacts/train_fnn_86838_00020_20_dropout_rate=0.2718,embedding_dim=5,hidden_dim=65,lr=0.0001,num_layers=3,weight_decay=0.0000_2024-07-06_10-43-05
INFO:main.py:

Retrain a new model with data in years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003]

            Using the optimized hyperparameters: {'continuous_dim': 102, 'hidden_dim': 65, 'num_layers': 3, 'num_embeddings': 15990, 'embedding_dim': 5, 'dropout_rate': 0.27180818453385097, 'lr': 0.00011948354480999256, 'weight_decay': 6.430385379260095e-06, 'num_epochs': 20, 'num_gpus': 2}

INFO:model_data_nn.py:Epoch 1/20, metrics: {'avg_train_loss': 9.602784934364063, 'avg_test_loss': 0.12786963402803214}
INFO:model_data_nn.py:Epoch 2/20, metrics: {'avg_train_loss': 0.09103650863604137, 'avg_test_loss': 0.022821639950018166}
INFO:model_data_nn.py:Epoch 3/20, metrics: {'avg_train_loss': 0.0393175413224876, 'avg_test_loss': 0.02287179033078675}
INFO:model_data_nn.py:Epoch 4/20, metrics: {'avg_train_loss': 0.03927614062983114, 'avg_test_loss': 0.02277094211631437}
INFO:model_data_nn.py:Epoch 5/20, metrics: {'avg_train_loss': 0.03916045725813988, 'avg_test_loss': 0.022765070990712014}
INFO:model_data_nn.py:Epoch 6/20, metrics: {'avg_train_loss': 0.0390537585066998, 'avg_test_loss': 0.022727738154331607}
INFO:model_data_nn.py:Epoch 7/20, metrics: {'avg_train_loss': 0.03898812316218255, 'avg_test_loss': 0.022773572083404463}
INFO:model_data_nn.py:Epoch 8/20, metrics: {'avg_train_loss': 0.03894413504803841, 'avg_test_loss': 0.022814959217354935}
INFO:model_data_nn.py:Epoch 9/20, metrics: {'avg_train_loss': 0.03887856326577778, 'avg_test_loss': 0.02299182041205536}
INFO:model_data_nn.py:Epoch 10/20, metrics: {'avg_train_loss': 0.03885153142881984, 'avg_test_loss': 0.022888501330700545}
INFO:model_data_nn.py:Epoch 11/20, metrics: {'avg_train_loss': 0.038793428133733286, 'avg_test_loss': 0.02279084040959067}
INFO:model_data_nn.py:Epoch 12/20, metrics: {'avg_train_loss': 0.038771865234721134, 'avg_test_loss': 0.022861690295614162}
INFO:model_data_nn.py:Epoch 13/20, metrics: {'avg_train_loss': 0.038729090654595316, 'avg_test_loss': 0.02290621617114839}
INFO:model_data_nn.py:Epoch 14/20, metrics: {'avg_train_loss': 0.038706522957970314, 'avg_test_loss': 0.02305868430555148}
INFO:model_data_nn.py:Epoch 15/20, metrics: {'avg_train_loss': 0.03865315094753101, 'avg_test_loss': 0.022922506274760893}
INFO:model_data_nn.py:Epoch 16/20, metrics: {'avg_train_loss': 0.03864475127761646, 'avg_test_loss': 0.02317263547524388}
INFO:model_data_nn.py:Epoch 17/20, metrics: {'avg_train_loss': 0.038623783835338876, 'avg_test_loss': 0.022944732285807578}
INFO:model_data_nn.py:Epoch 18/20, metrics: {'avg_train_loss': 0.03859776631014628, 'avg_test_loss': 0.022862573538660863}
INFO:model_data_nn.py:Epoch 19/20, metrics: {'avg_train_loss': 0.03857482419062118, 'avg_test_loss': 0.022869511289996498}
INFO:model_data_nn.py:Epoch 20/20, metrics: {'avg_train_loss': 0.03855407688140179, 'avg_test_loss': 0.022855537108866113}
INFO:main.py:Making prediction for data in year: 2003
INFO:main.py:Prediction data shape: (54127,)
/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src/main.py:372: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  prediction_data['pred'] = predictions
INFO:main.py:Root Mean Squared Error for Prediction in 2004: 0.15110725896284324
INFO:main.py:Prediction Stats:                 ret          pred
count  54127.000000  54127.000000
mean       0.018177      0.016001
std        0.150943      0.013194
min       -0.918750     -0.104990
25%       -0.046137      0.009109
50%        0.009852      0.012813
75%        0.069344      0.019207
max        6.908072      0.174257
INFO:main.py:

Transform data

INFO:transform_data_nn.py:Train data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003]
INFO:transform_data_nn.py:Train_data: (1404695, 158)

INFO:transform_data_nn.py:Test data years: [2004]
INFO:transform_data_nn.py:Test_data: (54127, 158)

INFO:transform_data_nn.py:Retrain data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004]
INFO:transform_data_nn.py:Retrain_data: (1458822, 158)

INFO:transform_data_nn.py:Prediction data years: [2005]
INFO:transform_data_nn.py:Prediction_data: (52696, 158)

INFO:main.py:

Generate X and y with train_data and test_data

INFO:main.py:
            x_train_tf: torch.Size([1404695, 103])
            y_train_tf: torch.Size([1404695])

            x_test_tf: torch.Size([54127, 103])
            y_test_tf: torch.Size([54127])

        
INFO:main.py:

Generate X and y with retrain_data and prediction_data

INFO:main.py:
            x_retrain_tf: torch.Size([1458822, 103])
            y_retrain_tf: torch.Size([1458822])

            x_prediction_tf: torch.Size([52696, 103])
            y_prediction_tf: torch.Size([52696])

        
INFO:main.py:

Create dataset

INFO:main.py:Create train_dataset
INFO:main.py:train_dataset first example: (tensor([ 1.5604e-01,  1.0714e+00,  1.0108e-01, -7.8209e-01, -1.2130e-02,
        -6.0056e-01, -2.2941e-02, -2.7015e-01,  6.8574e-01, -2.7998e-01,
        -7.5737e-01,  2.9376e-03, -7.1416e-01, -5.1553e-01, -4.3972e-01,
         5.1077e-03, -4.0012e-01,  9.7773e-02, -1.0447e-01,  8.1136e-01,
        -5.1791e-01, -1.7780e-01, -2.4061e-01, -6.2239e-04, -5.7070e-02,
        -2.9437e-01, -5.2431e-01, -6.3917e-02,  6.3626e-01,  1.7789e+00,
         3.6687e-01, -1.6265e-01,  9.1426e-01,  2.0814e-01, -3.7507e-01,
        -2.5589e-01,  1.3008e-01,  4.4769e-01, -3.9421e-02, -1.1449e+00,
        -2.2313e-01,  2.2686e-01,  4.3211e-01,  1.5953e-01, -7.7065e-02,
        -7.1923e-01,  6.9850e-02, -6.9385e-02, -4.7467e-01, -1.5968e-01,
        -4.0927e-01,  5.2971e-01, -4.6816e-01,  2.4271e-01, -2.7999e-02,
        -2.8392e-01, -7.3902e-01, -5.4150e-01, -5.4046e-01, -2.0140e-01,
        -2.2941e-02, -5.4662e-01, -6.5088e-01, -4.4486e-01, -3.5461e-01,
        -4.4594e-01,  9.9549e-01, -3.0184e-01, -6.2823e-01, -5.7363e-01,
        -6.4825e-01, -3.9657e-01,  3.8536e-03, -8.6961e-01,  2.8713e-01,
        -7.1513e-01,  3.3363e-01,  3.8378e-01,  8.3850e-01,  8.0836e-01,
        -1.2379e+00,  2.5120e-01,  4.1127e-03, -5.3021e-01, -1.1406e-01,
         3.7793e-01, -2.5967e-01, -8.3905e-01, -7.1925e-01, -8.9822e-01,
         1.0592e-01, -2.4122e-02,  3.2277e-02, -4.6667e-01, -5.3510e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([13879]), tensor(0.2117))
INFO:main.py:Create test_dataset
INFO:main.py:test_dataset first example: (tensor([-2.0605e-01, -5.2218e-01, -7.1876e-01,  1.0886e+00, -2.1833e-01,
        -3.7876e-01, -1.4151e+00, -8.6051e-01,  3.7612e-01,  2.2521e+00,
        -6.3491e-01, -2.5950e-01, -7.1416e-01,  4.2461e-01, -5.3287e-01,
        -1.7617e+00, -3.8402e-01,  2.1642e-01, -1.0447e-01, -1.5780e+00,
         2.2156e-01, -1.7041e-01, -2.5909e-01, -2.1556e+00, -4.2613e-01,
        -8.2028e-01, -5.6331e-01, -6.3917e-02, -7.8576e-01,  1.8501e+00,
        -3.0582e-01, -3.8150e-01, -6.1164e-02,  2.0814e-01, -9.7266e-01,
        -3.3635e-01, -1.1449e-01, -6.7184e-01, -2.8151e-01, -6.4299e-01,
        -1.9568e-01,  5.6402e-01, -4.5384e-01,  4.1728e-01, -1.8735e-01,
        -6.4159e-01, -5.5384e-01, -8.9574e-02, -6.5590e-01, -1.8240e-01,
        -4.0927e-01, -3.6514e-01, -4.6816e-01, -1.1528e+00, -7.8270e-01,
        -7.8624e-01,  2.0984e-02, -6.6591e-01, -3.6310e-01, -1.3020e-01,
        -3.7314e-01,  1.3849e-01,  1.4806e+00, -5.2953e-01, -2.4981e-02,
         3.1637e+00, -4.9530e-01,  4.0239e-01, -6.2823e-01, -5.9706e-01,
        -2.3230e-02,  3.5434e-02,  3.8536e-03, -6.7755e-01, -5.5883e-01,
        -2.1342e-01, -1.1026e+00, -3.1202e-02,  2.1154e+00,  8.0836e-01,
         8.3070e-01,  1.1939e+00,  4.1127e-03, -5.3021e-01, -6.7674e-01,
         1.1840e+00, -2.1592e-01,  8.6651e-02, -5.6895e-01, -7.8911e-01,
        -1.3719e+00, -5.4209e-01,  8.1432e+00, -3.4945e-01, -5.3510e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([3253]), tensor(0.0101))
INFO:main.py:Create retrain_dataset
INFO:main.py:retrain_dataset first example: (tensor([ 0.1553,  1.0893,  0.0985, -0.8022, -0.0040, -0.5988, -0.0226, -0.2695,
         0.6924, -0.2972, -0.7589,  0.0105, -0.7137, -0.5222, -0.4407,  0.0075,
        -0.3964,  0.1043, -0.1031,  0.8277, -0.5019, -0.1596, -0.2382, -0.0026,
        -0.0605, -0.2944, -0.5253, -0.0652,  0.6380,  1.7966,  0.3687, -0.1587,
         0.9125,  0.2140, -0.3660, -0.2422,  0.1447,  0.4623, -0.0308, -1.1443,
        -0.2195,  0.1726,  0.4492,  0.1567, -0.0700, -0.7163,  0.0463, -0.0704,
        -0.4657, -0.1626, -0.4176,  0.5326, -0.4682,  0.2400, -0.0306, -0.2778,
        -0.7273, -0.5366, -0.5409, -0.1958, -0.0247, -0.5474, -0.6479, -0.4408,
        -0.3545, -0.4447,  1.0242, -0.2993, -0.6411, -0.5748, -0.6445, -0.4001,
         0.0022, -0.8664,  0.2891, -0.7025,  0.3299,  0.3861,  0.8468,  0.8202,
        -1.2462,  0.2462,  0.0054, -0.5088, -0.1065,  0.3851, -0.2310, -0.8408,
        -0.7282, -0.9001,  0.1033, -0.0162,  0.0353, -0.4742, -0.5265,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000]), tensor([14014]), tensor(0.2117))
INFO:main.py:Create prediction_dataset
INFO:main.py:prediction_dataset first example: (tensor([-1.1236e-01,  8.7587e-01, -7.4394e-01,  1.0790e+00, -4.2487e-01,
        -2.5505e-01, -1.3047e+00, -8.4505e-01,  6.1018e-02, -2.4169e-01,
        -6.9458e-01, -2.9072e-01, -7.1367e-01, -7.7388e-01, -4.9391e-01,
        -8.0965e-01, -4.0101e-01, -1.0776e+00, -1.0308e-01,  9.2260e-01,
        -2.8307e-01, -1.7532e-01,  5.9833e-01,  8.1763e-01,  1.0331e-03,
        -7.4920e-01, -5.6252e-01, -6.5180e-02, -6.6439e-01, -5.3398e-01,
        -6.0750e-02, -4.7816e-01, -2.1025e-01,  2.1403e-01, -9.7964e-01,
        -7.0044e-01, -4.0833e-01, -6.6975e-01, -5.9906e-01, -5.4847e-01,
        -1.8737e-01,  1.3910e-01, -4.4773e-02,  3.2211e-01, -3.2095e-01,
         1.9846e-01, -2.7192e-01,  9.1109e-01, -9.8202e-01, -4.5284e-01,
        -2.3473e+00, -2.4127e-01, -4.6818e-01, -1.1438e+00, -7.8209e-01,
        -8.2969e-01,  1.9733e-02, -6.5976e-01,  2.0202e-01, -2.4739e-01,
         7.8639e-02, -3.7488e-01, -1.4988e+00,  1.5211e-01, -2.4888e-02,
        -9.3138e-01,  3.5557e+00,  7.6558e-01, -6.4114e-01, -6.4573e-01,
        -1.4363e-03,  3.6485e-02,  2.1950e-03, -1.8529e-01, -2.4033e-01,
        -2.4926e-01, -5.6513e-01, -2.8640e-02, -7.9959e-01,  8.2020e-01,
         8.2809e-01,  1.3298e+00,  5.4471e-03, -5.0877e-01, -4.6875e-01,
         8.5434e-01,  1.0336e+00,  6.0540e-01, -5.6433e-01, -7.8756e-01,
         6.7506e-01, -4.4948e-01,  2.2929e+00, -4.3450e-01, -2.1200e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([3202]), tensor(-0.0406))
INFO:main.py:

Create dataloader

INFO:main.py:Create train and test dataloader
INFO:main.py:Create retrain and prediction dataloader
INFO:main.py:

Hyperparameters tuning with Ray Tune

INFO:main.py:Training data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003]
INFO:main.py:Testing data year: 2004
INFO:main.py:

            ray_results_path: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
            num_samples: 60
            max_num_epochs: 20
            num_cpus: 60
            cpus_per_trial: 1
            num_gpus: 2
            gpus_per_trial: 0
            continuous_dim: 102
            num_embeddings: 15990
            device: cuda
            
2024-07-06 13:24:32,802	INFO worker.py:1753 -- Started a local Ray instance.
2024-07-06 13:24:32,828	INFO packaging.py:530 -- Creating a file package for local directory '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src'.
2024-07-06 13:24:32,848	INFO packaging.py:358 -- Pushing file package 'gcs://_ray_pkg_3d7d5eb957aaab70.zip' (1.20MiB) to Ray cluster...
2024-07-06 13:24:32,854	INFO packaging.py:371 -- Successfully pushed file package 'gcs://_ray_pkg_3d7d5eb957aaab70.zip'.
2024-07-06 13:24:36,237	WARNING tune.py:902 -- AIR_VERBOSITY is set, ignoring passed-in ProgressReporter for now.
2024-07-06 13:45:14,103	INFO tune.py:1009 -- Wrote the latest version of all result files and experiment state to '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results/train_fnn_2024-07-06_13-24-36' in 0.1460s.
INFO:model_data_nn.py:Best trial config: {'continuous_dim': 102, 'hidden_dim': 5, 'num_layers': 2, 'num_embeddings': 15990, 'embedding_dim': 5, 'dropout_rate': 0.3748726632012116, 'lr': 0.00016056406613556383, 'weight_decay': 4.2385261040269034e-06, 'num_epochs': 20, 'num_gpus': 2}
INFO:model_data_nn.py:Best trial training loss: 0.03888157598196418
INFO:model_data_nn.py:Best trial testing loss: 0.022736470258952875
INFO:main.py:Ray Tune results have been saved to: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
INFO:main.py:Best trial directory: /tmp/ray/session_2024-07-06_13-24-30_236663_1070676/artifacts/2024-07-06_13-24-36/train_fnn_2024-07-06_13-24-36/driver_artifacts/train_fnn_16ec9_00027_27_dropout_rate=0.3749,embedding_dim=5,hidden_dim=5,lr=0.0002,num_layers=2,weight_decay=0.0000_2024-07-06_13-24-36
INFO:main.py:

Retrain a new model with data in years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004]

            Using the optimized hyperparameters: {'continuous_dim': 102, 'hidden_dim': 5, 'num_layers': 2, 'num_embeddings': 16149, 'embedding_dim': 5, 'dropout_rate': 0.3748726632012116, 'lr': 0.00016056406613556383, 'weight_decay': 4.2385261040269034e-06, 'num_epochs': 20, 'num_gpus': 2}

INFO:model_data_nn.py:Epoch 1/20, metrics: {'avg_train_loss': 8.349627485346806, 'avg_test_loss': 0.10770846384315236}
INFO:model_data_nn.py:Epoch 2/20, metrics: {'avg_train_loss': 0.12829442213613498, 'avg_test_loss': 0.019702536239315872}
INFO:model_data_nn.py:Epoch 3/20, metrics: {'avg_train_loss': 0.03932828130372095, 'avg_test_loss': 0.01763659073672827}
INFO:model_data_nn.py:Epoch 4/20, metrics: {'avg_train_loss': 0.03856610705130486, 'avg_test_loss': 0.01761198453876434}
INFO:model_data_nn.py:Epoch 5/20, metrics: {'avg_train_loss': 0.038528976435599036, 'avg_test_loss': 0.01759958414595972}
INFO:model_data_nn.py:Epoch 6/20, metrics: {'avg_train_loss': 0.03847949982054204, 'avg_test_loss': 0.017618606002657737}
INFO:model_data_nn.py:Epoch 7/20, metrics: {'avg_train_loss': 0.03844397561894287, 'avg_test_loss': 0.01763275132098606}
INFO:model_data_nn.py:Epoch 8/20, metrics: {'avg_train_loss': 0.0384023116640374, 'avg_test_loss': 0.017626241197610654}
INFO:model_data_nn.py:Epoch 9/20, metrics: {'avg_train_loss': 0.038368817278273716, 'avg_test_loss': 0.017625321570820023}
INFO:model_data_nn.py:Epoch 10/20, metrics: {'avg_train_loss': 0.03835420762153598, 'avg_test_loss': 0.017608348555971407}
INFO:model_data_nn.py:Epoch 11/20, metrics: {'avg_train_loss': 0.038346772700362526, 'avg_test_loss': 0.0176231987792456}
INFO:model_data_nn.py:Epoch 12/20, metrics: {'avg_train_loss': 0.03833980643234403, 'avg_test_loss': 0.017637260703514648}
INFO:model_data_nn.py:Epoch 13/20, metrics: {'avg_train_loss': 0.03833312621582995, 'avg_test_loss': 0.01766291884841054}
INFO:model_data_nn.py:Epoch 14/20, metrics: {'avg_train_loss': 0.038318606907840745, 'avg_test_loss': 0.0176776292489715}
INFO:model_data_nn.py:Epoch 15/20, metrics: {'avg_train_loss': 0.03831133104737892, 'avg_test_loss': 0.017623841534233065}
INFO:model_data_nn.py:Epoch 16/20, metrics: {'avg_train_loss': 0.038310315483825776, 'avg_test_loss': 0.017650134214968645}
INFO:model_data_nn.py:Epoch 17/20, metrics: {'avg_train_loss': 0.038309084527700446, 'avg_test_loss': 0.017583920609079373}
INFO:model_data_nn.py:Epoch 18/20, metrics: {'avg_train_loss': 0.038296582760195506, 'avg_test_loss': 0.017584125255912686}
INFO:model_data_nn.py:Epoch 19/20, metrics: {'avg_train_loss': 0.03829991001835814, 'avg_test_loss': 0.01765846690497569}
INFO:model_data_nn.py:Epoch 20/20, metrics: {'avg_train_loss': 0.03829305232973983, 'avg_test_loss': 0.01767235006052024}
INFO:main.py:Making prediction for data in year: 2004
INFO:main.py:Prediction data shape: (52696,)
/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src/main.py:372: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  prediction_data['pred'] = predictions
INFO:main.py:Root Mean Squared Error for Prediction in 2005: 0.13293631825894767
INFO:main.py:Prediction Stats:                 ret          pred
count  52696.000000  52696.000000
mean       0.003973      0.015484
std        0.132409      0.012431
min       -0.820889     -0.123230
25%       -0.056075      0.010522
50%        0.000000      0.013652
75%        0.056068      0.018008
max        3.303279      0.194280
INFO:main.py:

Transform data

INFO:transform_data_nn.py:Train data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004]
INFO:transform_data_nn.py:Train_data: (1458822, 158)

INFO:transform_data_nn.py:Test data years: [2005]
INFO:transform_data_nn.py:Test_data: (52696, 158)

INFO:transform_data_nn.py:Retrain data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005]
INFO:transform_data_nn.py:Retrain_data: (1511518, 158)

INFO:transform_data_nn.py:Prediction data years: [2006]
INFO:transform_data_nn.py:Prediction_data: (51851, 158)

INFO:main.py:

Generate X and y with train_data and test_data

INFO:main.py:
            x_train_tf: torch.Size([1458822, 103])
            y_train_tf: torch.Size([1458822])

            x_test_tf: torch.Size([52696, 103])
            y_test_tf: torch.Size([52696])

        
INFO:main.py:

Generate X and y with retrain_data and prediction_data

INFO:main.py:
            x_retrain_tf: torch.Size([1511518, 103])
            y_retrain_tf: torch.Size([1511518])

            x_prediction_tf: torch.Size([51851, 103])
            y_prediction_tf: torch.Size([51851])

        
INFO:main.py:

Create dataset

INFO:main.py:Create train_dataset
INFO:main.py:train_dataset first example: (tensor([ 0.1553,  1.0893,  0.0985, -0.8022, -0.0040, -0.5988, -0.0226, -0.2695,
         0.6924, -0.2972, -0.7589,  0.0105, -0.7137, -0.5222, -0.4407,  0.0075,
        -0.3964,  0.1043, -0.1031,  0.8277, -0.5019, -0.1596, -0.2382, -0.0026,
        -0.0605, -0.2944, -0.5253, -0.0652,  0.6380,  1.7966,  0.3687, -0.1587,
         0.9125,  0.2140, -0.3660, -0.2422,  0.1447,  0.4623, -0.0308, -1.1443,
        -0.2195,  0.1726,  0.4492,  0.1567, -0.0700, -0.7163,  0.0463, -0.0704,
        -0.4657, -0.1626, -0.4176,  0.5326, -0.4682,  0.2400, -0.0306, -0.2778,
        -0.7273, -0.5366, -0.5409, -0.1958, -0.0247, -0.5474, -0.6479, -0.4408,
        -0.3545, -0.4447,  1.0242, -0.2993, -0.6411, -0.5748, -0.6445, -0.4001,
         0.0022, -0.8664,  0.2891, -0.7025,  0.3299,  0.3861,  0.8468,  0.8202,
        -1.2462,  0.2462,  0.0054, -0.5088, -0.1065,  0.3851, -0.2310, -0.8408,
        -0.7282, -0.9001,  0.1033, -0.0162,  0.0353, -0.4742, -0.5265,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000]), tensor([14014]), tensor(0.2117))
INFO:main.py:Create test_dataset
INFO:main.py:test_dataset first example: (tensor([-1.1236e-01,  8.7587e-01, -7.4394e-01,  1.0790e+00, -4.2487e-01,
        -2.5505e-01, -1.3047e+00, -8.4505e-01,  6.1018e-02, -2.4169e-01,
        -6.9458e-01, -2.9072e-01, -7.1367e-01, -7.7388e-01, -4.9391e-01,
        -8.0965e-01, -4.0101e-01, -1.0776e+00, -1.0308e-01,  9.2260e-01,
        -2.8307e-01, -1.7532e-01,  5.9833e-01,  8.1763e-01,  1.0331e-03,
        -7.4920e-01, -5.6252e-01, -6.5180e-02, -6.6439e-01, -5.3398e-01,
        -6.0750e-02, -4.7816e-01, -2.1025e-01,  2.1403e-01, -9.7964e-01,
        -7.0044e-01, -4.0833e-01, -6.6975e-01, -5.9906e-01, -5.4847e-01,
        -1.8737e-01,  1.3910e-01, -4.4773e-02,  3.2211e-01, -3.2095e-01,
         1.9846e-01, -2.7192e-01,  9.1109e-01, -9.8202e-01, -4.5284e-01,
        -2.3473e+00, -2.4127e-01, -4.6818e-01, -1.1438e+00, -7.8209e-01,
        -8.2969e-01,  1.9733e-02, -6.5976e-01,  2.0202e-01, -2.4739e-01,
         7.8639e-02, -3.7488e-01, -1.4988e+00,  1.5211e-01, -2.4888e-02,
        -9.3138e-01,  3.5557e+00,  7.6558e-01, -6.4114e-01, -6.4573e-01,
        -1.4363e-03,  3.6485e-02,  2.1950e-03, -1.8529e-01, -2.4033e-01,
        -2.4926e-01, -5.6513e-01, -2.8640e-02, -7.9959e-01,  8.2020e-01,
         8.2809e-01,  1.3298e+00,  5.4471e-03, -5.0877e-01, -4.6875e-01,
         8.5434e-01,  1.0336e+00,  6.0540e-01, -5.6433e-01, -7.8756e-01,
         6.7506e-01, -4.4948e-01,  2.2929e+00, -4.3450e-01, -2.1200e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([3202]), tensor(-0.0406))
INFO:main.py:Create retrain_dataset
INFO:main.py:retrain_dataset first example: (tensor([ 0.1622,  1.1053,  0.0926, -0.8225, -0.0041, -0.5957, -0.0241, -0.2699,
         0.7131, -0.3087, -0.7606,  0.0118, -0.7179, -0.5290, -0.4388,  0.0090,
        -0.3964,  0.1084, -0.1029,  0.8386, -0.5043, -0.1493, -0.2471, -0.0036,
        -0.0631, -0.2958, -0.5276, -0.0699,  0.6390,  1.8221,  0.3692, -0.1611,
         0.9188,  0.2200, -0.3603, -0.2367,  0.1503,  0.4753, -0.0284, -1.1394,
        -0.2162,  0.1786,  0.4626,  0.1603, -0.0666, -0.7117,  0.0495, -0.0701,
        -0.4718, -0.1642, -0.4251,  0.5353, -0.4685,  0.2392, -0.0314, -0.2741,
        -0.7165, -0.5327, -0.5430, -0.1921, -0.0275, -0.5495, -0.6497, -0.4384,
        -0.3579, -0.4441,  1.0446, -0.2974, -0.6569, -0.5768, -0.6431, -0.4052,
         0.0024, -0.8611,  0.2896, -0.6942,  0.3278,  0.3847,  0.8559,  0.8323,
        -1.2565,  0.2418,  0.0049, -0.4921, -0.1039,  0.3991, -0.2041, -0.8435,
        -0.7335, -0.8986,  0.1040, -0.0096,  0.0381, -0.4826, -0.5181,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000]), tensor([14244]), tensor(0.2117))
INFO:main.py:Create prediction_dataset
INFO:main.py:prediction_dataset first example: (tensor([-1.0103e+00,  1.6884e-01,  4.7714e+00,  1.0679e+00, -4.6720e-01,
        -3.8853e-01, -9.7130e-01, -7.7287e-01, -1.1637e-01, -1.3624e-01,
        -8.1367e-01, -1.6486e-01, -7.1795e-01, -2.8948e-02, -3.9210e-01,
         2.2993e-01, -4.3742e-02, -1.2602e+00, -1.0287e-01, -6.1296e-01,
        -6.1484e-01, -1.7964e-01, -5.2120e-01,  3.4554e-01, -8.6572e-02,
        -6.0407e-01, -5.6625e-01, -6.9886e-02, -1.5360e-01, -5.7585e-01,
         2.5450e+00,  1.5041e-01,  3.0586e-01,  2.1998e-01, -8.1444e-01,
        -5.8978e-01, -5.7087e-01, -7.1529e-01, -3.6785e-01, -4.4009e-02,
        -1.9731e-01, -1.2700e-01, -3.8818e-01, -1.0224e-01, -4.9337e-01,
        -5.7775e-01,  3.7481e-01,  5.8834e-02, -5.0899e-01, -2.6266e-02,
        -2.3480e+00,  2.6047e-01, -4.6847e-01, -1.1382e+00, -7.8016e-01,
        -5.9060e-01,  1.9675e-02, -6.5412e-01,  4.7023e-01, -2.7312e-01,
         1.9561e+00,  5.2434e-01,  7.3367e-01,  4.3534e-01, -2.4957e-02,
         2.7953e-01, -1.8815e-01,  1.2564e+00,  1.7452e+00, -5.1120e-01,
        -1.4495e-03,  2.9422e-02,  2.3638e-03, -6.3715e-01, -5.6610e-02,
        -2.9675e-01, -1.9365e-01,  2.2901e-01, -6.3124e-02,  8.3230e-01,
         8.2491e-01,  1.3356e+00,  4.9297e-03, -4.9212e-01, -2.7877e-01,
         3.3738e-01,  1.2243e-01, -2.4649e-01, -5.7009e-01, -7.8557e-01,
         3.2036e-01, -6.2165e-01, -6.7101e-01, -1.5142e-01, -5.1808e-01,
         0.0000e+00,  0.0000e+00,  1.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([3134]), tensor(-0.0165))
INFO:main.py:

Create dataloader

INFO:main.py:Create train and test dataloader
INFO:main.py:Create retrain and prediction dataloader
INFO:main.py:

Hyperparameters tuning with Ray Tune

INFO:main.py:Training data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004]
INFO:main.py:Testing data year: 2005
INFO:main.py:

            ray_results_path: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
            num_samples: 60
            max_num_epochs: 20
            num_cpus: 60
            cpus_per_trial: 1
            num_gpus: 2
            gpus_per_trial: 0
            continuous_dim: 102
            num_embeddings: 16149
            device: cuda
            
2024-07-06 16:04:20,651	INFO worker.py:1753 -- Started a local Ray instance.
2024-07-06 16:04:20,675	INFO packaging.py:530 -- Creating a file package for local directory '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src'.
2024-07-06 16:04:20,710	INFO packaging.py:358 -- Pushing file package 'gcs://_ray_pkg_3d7d5eb957aaab70.zip' (1.20MiB) to Ray cluster...
2024-07-06 16:04:20,716	INFO packaging.py:371 -- Successfully pushed file package 'gcs://_ray_pkg_3d7d5eb957aaab70.zip'.
2024-07-06 16:04:24,068	WARNING tune.py:902 -- AIR_VERBOSITY is set, ignoring passed-in ProgressReporter for now.
2024-07-06 17:07:28,218	INFO tune.py:1009 -- Wrote the latest version of all result files and experiment state to '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results/train_fnn_2024-07-06_16-04-24' in 0.1544s.
INFO:model_data_nn.py:Best trial config: {'continuous_dim': 102, 'hidden_dim': 155, 'num_layers': 4, 'num_embeddings': 16149, 'embedding_dim': 5, 'dropout_rate': 0.5290328931486485, 'lr': 0.00034166582909960413, 'weight_decay': 0.00017456626922659324, 'num_epochs': 20, 'num_gpus': 2}
INFO:model_data_nn.py:Best trial training loss: 0.03829280889486352
INFO:model_data_nn.py:Best trial testing loss: 0.017525641496284206
INFO:main.py:Ray Tune results have been saved to: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
INFO:main.py:Best trial directory: /tmp/ray/session_2024-07-06_16-04-18_121376_1070676/artifacts/2024-07-06_16-04-24/train_fnn_2024-07-06_16-04-24/driver_artifacts/train_fnn_69b78_00009_9_dropout_rate=0.5290,embedding_dim=5,hidden_dim=155,lr=0.0003,num_layers=4,weight_decay=0.0002_2024-07-06_16-04-24
INFO:main.py:

Retrain a new model with data in years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005]

            Using the optimized hyperparameters: {'continuous_dim': 102, 'hidden_dim': 155, 'num_layers': 4, 'num_embeddings': 16418, 'embedding_dim': 5, 'dropout_rate': 0.5290328931486485, 'lr': 0.00034166582909960413, 'weight_decay': 0.00017456626922659324, 'num_epochs': 20, 'num_gpus': 2}

INFO:model_data_nn.py:Epoch 1/20, metrics: {'avg_train_loss': 9.889960739009593, 'avg_test_loss': 0.017194929929551087}
INFO:model_data_nn.py:Epoch 2/20, metrics: {'avg_train_loss': 0.039139150953666324, 'avg_test_loss': 0.016801863486690473}
INFO:model_data_nn.py:Epoch 3/20, metrics: {'avg_train_loss': 0.03923995117550427, 'avg_test_loss': 0.016822889376101383}
INFO:model_data_nn.py:Epoch 4/20, metrics: {'avg_train_loss': 0.03802170336363202, 'avg_test_loss': 0.01655596295564339}
INFO:model_data_nn.py:Epoch 5/20, metrics: {'avg_train_loss': 0.03767139700625429, 'avg_test_loss': 0.016575302586895345}
INFO:model_data_nn.py:Epoch 6/20, metrics: {'avg_train_loss': 0.03762980355746306, 'avg_test_loss': 0.01656734467864844}
INFO:model_data_nn.py:Epoch 7/20, metrics: {'avg_train_loss': 0.03761526489761247, 'avg_test_loss': 0.016566689240888423}
INFO:model_data_nn.py:Epoch 8/20, metrics: {'avg_train_loss': 0.03760592930498363, 'avg_test_loss': 0.016554407968089498}
INFO:model_data_nn.py:Epoch 9/20, metrics: {'avg_train_loss': 0.037589573282448795, 'avg_test_loss': 0.016549805729773832}
INFO:model_data_nn.py:Epoch 10/20, metrics: {'avg_train_loss': 0.03759252840840746, 'avg_test_loss': 0.01658847403662105}
INFO:model_data_nn.py:Epoch 11/20, metrics: {'avg_train_loss': 0.03759802606392094, 'avg_test_loss': 0.01654541970051715}
INFO:model_data_nn.py:Epoch 12/20, metrics: {'avg_train_loss': 0.037596429060359156, 'avg_test_loss': 0.016564674285501974}
INFO:model_data_nn.py:Epoch 13/20, metrics: {'avg_train_loss': 0.0376014851404324, 'avg_test_loss': 0.01657881815527827}
INFO:model_data_nn.py:Epoch 14/20, metrics: {'avg_train_loss': 0.037599273378646145, 'avg_test_loss': 0.01655473273816367}
INFO:model_data_nn.py:Epoch 15/20, metrics: {'avg_train_loss': 0.037609216665957915, 'avg_test_loss': 0.016570899674549625}
INFO:model_data_nn.py:Epoch 16/20, metrics: {'avg_train_loss': 0.03758861336109499, 'avg_test_loss': 0.016548193631042252}
INFO:model_data_nn.py:Epoch 17/20, metrics: {'avg_train_loss': 0.03759899983162046, 'avg_test_loss': 0.01655066287915768}
INFO:model_data_nn.py:Epoch 18/20, metrics: {'avg_train_loss': 0.03760339842823781, 'avg_test_loss': 0.016559417249423822}
INFO:model_data_nn.py:Epoch 19/20, metrics: {'avg_train_loss': 0.037609390303442077, 'avg_test_loss': 0.016562982370590635}
INFO:model_data_nn.py:Epoch 20/20, metrics: {'avg_train_loss': 0.037597431897309554, 'avg_test_loss': 0.01654533376421761}
INFO:main.py:Making prediction for data in year: 2005
INFO:main.py:Prediction data shape: (51851,)
/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src/main.py:372: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  prediction_data['pred'] = predictions
INFO:main.py:Root Mean Squared Error for Prediction in 2006: 0.12866815669900794
INFO:main.py:Prediction Stats:                 ret          pred
count  51851.000000  51851.000000
mean       0.014179      0.011958
std        0.128870      0.006657
min       -0.879154     -0.039991
25%       -0.043642      0.008149
50%        0.007018      0.011826
75%        0.062500      0.015331
max        4.022988      0.205997
INFO:main.py:

Transform data

INFO:transform_data_nn.py:Train data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005]
INFO:transform_data_nn.py:Train_data: (1511518, 158)

INFO:transform_data_nn.py:Test data years: [2006]
INFO:transform_data_nn.py:Test_data: (51851, 158)

INFO:transform_data_nn.py:Retrain data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006]
INFO:transform_data_nn.py:Retrain_data: (1563369, 158)

INFO:transform_data_nn.py:Prediction data years: [2007]
INFO:transform_data_nn.py:Prediction_data: (50615, 158)

INFO:main.py:

Generate X and y with train_data and test_data

INFO:main.py:
            x_train_tf: torch.Size([1511518, 103])
            y_train_tf: torch.Size([1511518])

            x_test_tf: torch.Size([51851, 103])
            y_test_tf: torch.Size([51851])

        
INFO:main.py:

Generate X and y with retrain_data and prediction_data

INFO:main.py:
            x_retrain_tf: torch.Size([1563369, 103])
            y_retrain_tf: torch.Size([1563369])

            x_prediction_tf: torch.Size([50615, 103])
            y_prediction_tf: torch.Size([50615])

        
INFO:main.py:

Create dataset

INFO:main.py:Create train_dataset
INFO:main.py:train_dataset first example: (tensor([ 0.1622,  1.1053,  0.0926, -0.8225, -0.0041, -0.5957, -0.0241, -0.2699,
         0.7131, -0.3087, -0.7606,  0.0118, -0.7179, -0.5290, -0.4388,  0.0090,
        -0.3964,  0.1084, -0.1029,  0.8386, -0.5043, -0.1493, -0.2471, -0.0036,
        -0.0631, -0.2958, -0.5276, -0.0699,  0.6390,  1.8221,  0.3692, -0.1611,
         0.9188,  0.2200, -0.3603, -0.2367,  0.1503,  0.4753, -0.0284, -1.1394,
        -0.2162,  0.1786,  0.4626,  0.1603, -0.0666, -0.7117,  0.0495, -0.0701,
        -0.4718, -0.1642, -0.4251,  0.5353, -0.4685,  0.2392, -0.0314, -0.2741,
        -0.7165, -0.5327, -0.5430, -0.1921, -0.0275, -0.5495, -0.6497, -0.4384,
        -0.3579, -0.4441,  1.0446, -0.2974, -0.6569, -0.5768, -0.6431, -0.4052,
         0.0024, -0.8611,  0.2896, -0.6942,  0.3278,  0.3847,  0.8559,  0.8323,
        -1.2565,  0.2418,  0.0049, -0.4921, -0.1039,  0.3991, -0.2041, -0.8435,
        -0.7335, -0.8986,  0.1040, -0.0096,  0.0381, -0.4826, -0.5181,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000]), tensor([14244]), tensor(0.2117))
INFO:main.py:Create test_dataset
INFO:main.py:test_dataset first example: (tensor([-1.0103e+00,  1.6884e-01,  4.7714e+00,  1.0679e+00, -4.6720e-01,
        -3.8853e-01, -9.7130e-01, -7.7287e-01, -1.1637e-01, -1.3624e-01,
        -8.1367e-01, -1.6486e-01, -7.1795e-01, -2.8948e-02, -3.9210e-01,
         2.2993e-01, -4.3742e-02, -1.2602e+00, -1.0287e-01, -6.1296e-01,
        -6.1484e-01, -1.7964e-01, -5.2120e-01,  3.4554e-01, -8.6572e-02,
        -6.0407e-01, -5.6625e-01, -6.9886e-02, -1.5360e-01, -5.7585e-01,
         2.5450e+00,  1.5041e-01,  3.0586e-01,  2.1998e-01, -8.1444e-01,
        -5.8978e-01, -5.7087e-01, -7.1529e-01, -3.6785e-01, -4.4009e-02,
        -1.9731e-01, -1.2700e-01, -3.8818e-01, -1.0224e-01, -4.9337e-01,
        -5.7775e-01,  3.7481e-01,  5.8834e-02, -5.0899e-01, -2.6266e-02,
        -2.3480e+00,  2.6047e-01, -4.6847e-01, -1.1382e+00, -7.8016e-01,
        -5.9060e-01,  1.9675e-02, -6.5412e-01,  4.7023e-01, -2.7312e-01,
         1.9561e+00,  5.2434e-01,  7.3367e-01,  4.3534e-01, -2.4957e-02,
         2.7953e-01, -1.8815e-01,  1.2564e+00,  1.7452e+00, -5.1120e-01,
        -1.4495e-03,  2.9422e-02,  2.3638e-03, -6.3715e-01, -5.6610e-02,
        -2.9675e-01, -1.9365e-01,  2.2901e-01, -6.3124e-02,  8.3230e-01,
         8.2491e-01,  1.3356e+00,  4.9297e-03, -4.9212e-01, -2.7877e-01,
         3.3738e-01,  1.2243e-01, -2.4649e-01, -5.7009e-01, -7.8557e-01,
         3.2036e-01, -6.2165e-01, -6.7101e-01, -1.5142e-01, -5.1808e-01,
         0.0000e+00,  0.0000e+00,  1.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([3134]), tensor(-0.0165))
INFO:main.py:Create retrain_dataset
INFO:main.py:retrain_dataset first example: (tensor([ 1.7245e-01,  1.1188e+00,  8.6957e-02, -8.4058e-01, -3.7799e-03,
        -5.9245e-01, -2.5470e-02, -2.7060e-01,  7.3368e-01, -3.1458e-01,
        -7.6181e-01,  1.1902e-02, -7.2240e-01, -5.3523e-01, -4.3356e-01,
         1.0123e-02, -3.9648e-01,  1.1690e-01, -1.0005e-01,  8.4777e-01,
        -5.0234e-01, -1.5760e-01, -2.6105e-01, -4.9144e-03, -6.4184e-02,
        -2.9708e-01, -5.3039e-01, -7.5051e-02,  6.3662e-01,  1.8474e+00,
         3.7016e-01, -1.6191e-01,  9.2347e-01,  2.2480e-01, -3.5513e-01,
        -2.3950e-01,  1.5269e-01,  4.8745e-01, -2.8577e-02, -1.1303e+00,
        -2.1300e-01,  1.8342e-01,  4.7329e-01,  1.6442e-01, -6.4969e-02,
        -7.0720e-01,  5.1813e-02, -7.0849e-02, -4.7924e-01, -1.6303e-01,
        -4.3283e-01,  5.3343e-01, -4.6873e-01,  2.3747e-01, -3.0624e-02,
        -2.7049e-01, -7.0535e-01, -5.2215e-01, -5.4443e-01, -1.8873e-01,
        -2.6441e-02, -5.5091e-01, -6.4878e-01, -4.3732e-01, -3.6154e-01,
        -4.4407e-01,  1.0641e+00, -2.9530e-01, -6.7211e-01, -5.7917e-01,
        -6.4249e-01, -4.1622e-01,  1.5457e-03, -8.5557e-01,  2.8945e-01,
        -6.8274e-01,  3.2411e-01,  3.8258e-01,  8.6595e-01,  8.4318e-01,
        -1.2669e+00,  2.3971e-01,  4.5293e-03, -4.9952e-01, -1.0416e-01,
         4.1430e-01, -1.7812e-01, -8.4766e-01, -7.3608e-01, -8.9559e-01,
         1.0484e-01, -3.7786e-03,  3.9667e-02, -4.9212e-01, -5.1006e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([14473]), tensor(0.2117))
INFO:main.py:Create prediction_dataset
INFO:main.py:prediction_dataset first example: (tensor([ 2.4399e-01, -8.2929e-01, -3.0829e-01,  1.0549e+00, -4.6329e-01,
        -5.8049e-01, -7.5662e-01, -6.9851e-01,  1.0153e-02, -1.6801e-01,
        -6.5807e-01, -7.9359e-02, -7.2240e-01,  5.5125e-01, -3.0706e-01,
         1.0388e+00, -3.8408e-01, -4.6354e-01, -1.0005e-01,  3.0185e-01,
         5.8164e-01, -1.8272e-01, -5.2523e-01,  4.8090e-01, -1.7715e-02,
        -5.6704e-01, -5.7707e-01, -7.5051e-02, -3.0510e-01, -5.7375e-01,
         4.1915e-01, -1.0944e-01,  5.2341e-01,  2.2480e-01, -7.5733e-01,
        -4.3995e-01, -3.9470e-01, -6.9504e-01, -5.4303e-01, -2.2238e-01,
         1.8292e-01,  2.0426e-01, -1.4680e-01, -1.5679e-01, -4.5749e-01,
        -7.3195e-01,  1.1754e-01, -3.0126e-01,  2.8688e-01,  6.4227e-01,
        -4.3283e-01,  3.8988e-01, -4.6873e-01, -1.1355e+00, -7.7899e-01,
        -5.7320e-01,  1.9917e-02, -6.4766e-01, -2.4549e-02, -3.3728e-01,
        -2.4913e-02, -3.7387e-01, -9.6120e-01,  9.5812e-01, -2.5211e-02,
        -5.4224e-01, -4.7158e-01, -4.6422e-01,  2.3213e+00, -5.7214e-01,
        -2.5389e-03,  3.4142e-02,  1.5457e-03, -7.4045e-01,  1.2267e-01,
        -2.7863e-01,  9.9935e-02,  3.2192e-01, -8.4093e-01,  8.4318e-01,
         8.2060e-01,  1.3391e+00,  4.5293e-03, -4.9952e-01, -1.9711e-01,
         4.6344e-01,  2.2342e+00, -7.7465e-01, -6.0570e-01, -8.0367e-01,
         2.8266e-01, -3.5426e-01,  7.2973e-01, -6.0387e-01, -5.1006e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([3080]), tensor(0.0233))
INFO:main.py:

Create dataloader

INFO:main.py:Create train and test dataloader
INFO:main.py:Create retrain and prediction dataloader
INFO:main.py:

Hyperparameters tuning with Ray Tune

INFO:main.py:Training data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005]
INFO:main.py:Testing data year: 2006
INFO:main.py:

            ray_results_path: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
            num_samples: 60
            max_num_epochs: 20
            num_cpus: 60
            cpus_per_trial: 1
            num_gpus: 2
            gpus_per_trial: 0
            continuous_dim: 102
            num_embeddings: 16418
            device: cuda
            
2024-07-06 19:38:57,818	INFO worker.py:1753 -- Started a local Ray instance.
2024-07-06 19:38:57,845	INFO packaging.py:530 -- Creating a file package for local directory '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src'.
2024-07-06 19:38:57,865	INFO packaging.py:358 -- Pushing file package 'gcs://_ray_pkg_3d7d5eb957aaab70.zip' (1.20MiB) to Ray cluster...
2024-07-06 19:38:57,869	INFO packaging.py:371 -- Successfully pushed file package 'gcs://_ray_pkg_3d7d5eb957aaab70.zip'.
2024-07-06 19:39:01,138	WARNING tune.py:902 -- AIR_VERBOSITY is set, ignoring passed-in ProgressReporter for now.
2024-07-06 20:09:54,177	INFO tune.py:1009 -- Wrote the latest version of all result files and experiment state to '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results/train_fnn_2024-07-06_19-39-01' in 0.1566s.
INFO:model_data_nn.py:Best trial config: {'continuous_dim': 102, 'hidden_dim': 45, 'num_layers': 3, 'num_embeddings': 16418, 'embedding_dim': 20, 'dropout_rate': 0.35428103453181514, 'lr': 0.00045881565491609705, 'weight_decay': 2.6100256506134747e-05, 'num_epochs': 20, 'num_gpus': 2}
INFO:model_data_nn.py:Best trial training loss: 0.03738172066403485
INFO:model_data_nn.py:Best trial testing loss: 0.01653031157926092
INFO:main.py:Ray Tune results have been saved to: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
INFO:main.py:Best trial directory: /tmp/ray/session_2024-07-06_19-38-55_230054_1070676/artifacts/2024-07-06_19-39-01/train_fnn_2024-07-06_19-39-01/driver_artifacts/train_fnn_650c8_00013_13_dropout_rate=0.3543,embedding_dim=20,hidden_dim=45,lr=0.0005,num_layers=3,weight_decay=0.0000_2024-07-06_19-39-01
INFO:main.py:

Retrain a new model with data in years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006]

            Using the optimized hyperparameters: {'continuous_dim': 102, 'hidden_dim': 45, 'num_layers': 3, 'num_embeddings': 16677, 'embedding_dim': 20, 'dropout_rate': 0.35428103453181514, 'lr': 0.00045881565491609705, 'weight_decay': 2.6100256506134747e-05, 'num_epochs': 20, 'num_gpus': 2}

INFO:model_data_nn.py:Epoch 1/20, metrics: {'avg_train_loss': 2.326256706874524, 'avg_test_loss': 0.01794248902135425}
INFO:model_data_nn.py:Epoch 2/20, metrics: {'avg_train_loss': 0.037570376329633934, 'avg_test_loss': 0.01804589107632637}
INFO:model_data_nn.py:Epoch 3/20, metrics: {'avg_train_loss': 0.037470947161276615, 'avg_test_loss': 0.018036622749265246}
INFO:model_data_nn.py:Epoch 4/20, metrics: {'avg_train_loss': 0.03710048415763534, 'avg_test_loss': 0.018178447083842874}
INFO:model_data_nn.py:Epoch 5/20, metrics: {'avg_train_loss': 0.03690960655952385, 'avg_test_loss': 0.01794148906077625}
INFO:model_data_nn.py:Epoch 6/20, metrics: {'avg_train_loss': 0.03682703776256077, 'avg_test_loss': 0.017787472523673617}
INFO:model_data_nn.py:Epoch 7/20, metrics: {'avg_train_loss': 0.03678905680886663, 'avg_test_loss': 0.017858501406141904}
INFO:model_data_nn.py:Epoch 8/20, metrics: {'avg_train_loss': 0.036775841951383656, 'avg_test_loss': 0.01782134742090347}
INFO:model_data_nn.py:Epoch 9/20, metrics: {'avg_train_loss': 0.03675042842616226, 'avg_test_loss': 0.017998088341714305}
INFO:model_data_nn.py:Epoch 10/20, metrics: {'avg_train_loss': 0.03675042003114402, 'avg_test_loss': 0.017839069407659048}
INFO:model_data_nn.py:Epoch 11/20, metrics: {'avg_train_loss': 0.03674120772953278, 'avg_test_loss': 0.01799024391750043}
INFO:model_data_nn.py:Epoch 12/20, metrics: {'avg_train_loss': 0.03673870449305308, 'avg_test_loss': 0.018007844042108215}
INFO:model_data_nn.py:Epoch 13/20, metrics: {'avg_train_loss': 0.03675126703341668, 'avg_test_loss': 0.017971794064523594}
INFO:model_data_nn.py:Epoch 14/20, metrics: {'avg_train_loss': 0.03673683323679193, 'avg_test_loss': 0.01794668779510892}
INFO:model_data_nn.py:Epoch 15/20, metrics: {'avg_train_loss': 0.03672383692291226, 'avg_test_loss': 0.017917991345372013}
INFO:model_data_nn.py:Epoch 16/20, metrics: {'avg_train_loss': 0.036723243048076344, 'avg_test_loss': 0.01785033350725743}
INFO:model_data_nn.py:Epoch 17/20, metrics: {'avg_train_loss': 0.03673234320301651, 'avg_test_loss': 0.017802846055910593}
INFO:model_data_nn.py:Epoch 18/20, metrics: {'avg_train_loss': 0.03673233568426804, 'avg_test_loss': 0.017825792983381286}
INFO:model_data_nn.py:Epoch 19/20, metrics: {'avg_train_loss': 0.036721247950312896, 'avg_test_loss': 0.01771415635764674}
INFO:model_data_nn.py:Epoch 20/20, metrics: {'avg_train_loss': 0.03673240530303238, 'avg_test_loss': 0.017845218483772542}
INFO:main.py:Making prediction for data in year: 2006
INFO:main.py:Prediction data shape: (50615,)
/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src/main.py:372: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  prediction_data['pred'] = predictions
INFO:main.py:Root Mean Squared Error for Prediction in 2007: 0.13355642800649298
INFO:main.py:Prediction Stats:                 ret          pred
count  50615.000000  50615.000000
mean      -0.004768      0.011478
std        0.132573      0.006556
min       -0.952684     -0.065244
25%       -0.062608      0.008746
50%       -0.005441      0.010627
75%        0.048482      0.013083
max        5.801008      0.273265
INFO:main.py:

Transform data

INFO:transform_data_nn.py:Train data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006]
INFO:transform_data_nn.py:Train_data: (1563369, 158)

INFO:transform_data_nn.py:Test data years: [2007]
INFO:transform_data_nn.py:Test_data: (50615, 158)

INFO:transform_data_nn.py:Retrain data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007]
INFO:transform_data_nn.py:Retrain_data: (1613984, 158)

INFO:transform_data_nn.py:Prediction data years: [2008]
INFO:transform_data_nn.py:Prediction_data: (49474, 158)

INFO:main.py:

Generate X and y with train_data and test_data

INFO:main.py:
            x_train_tf: torch.Size([1563369, 103])
            y_train_tf: torch.Size([1563369])

            x_test_tf: torch.Size([50615, 103])
            y_test_tf: torch.Size([50615])

        
INFO:main.py:

Generate X and y with retrain_data and prediction_data

INFO:main.py:
            x_retrain_tf: torch.Size([1613984, 103])
            y_retrain_tf: torch.Size([1613984])

            x_prediction_tf: torch.Size([49474, 103])
            y_prediction_tf: torch.Size([49474])

        
INFO:main.py:

Create dataset

INFO:main.py:Create train_dataset
INFO:main.py:train_dataset first example: (tensor([ 1.7245e-01,  1.1188e+00,  8.6957e-02, -8.4058e-01, -3.7799e-03,
        -5.9245e-01, -2.5470e-02, -2.7060e-01,  7.3368e-01, -3.1458e-01,
        -7.6181e-01,  1.1902e-02, -7.2240e-01, -5.3523e-01, -4.3356e-01,
         1.0123e-02, -3.9648e-01,  1.1690e-01, -1.0005e-01,  8.4777e-01,
        -5.0234e-01, -1.5760e-01, -2.6105e-01, -4.9144e-03, -6.4184e-02,
        -2.9708e-01, -5.3039e-01, -7.5051e-02,  6.3662e-01,  1.8474e+00,
         3.7016e-01, -1.6191e-01,  9.2347e-01,  2.2480e-01, -3.5513e-01,
        -2.3950e-01,  1.5269e-01,  4.8745e-01, -2.8577e-02, -1.1303e+00,
        -2.1300e-01,  1.8342e-01,  4.7329e-01,  1.6442e-01, -6.4969e-02,
        -7.0720e-01,  5.1813e-02, -7.0849e-02, -4.7924e-01, -1.6303e-01,
        -4.3283e-01,  5.3343e-01, -4.6873e-01,  2.3747e-01, -3.0624e-02,
        -2.7049e-01, -7.0535e-01, -5.2215e-01, -5.4443e-01, -1.8873e-01,
        -2.6441e-02, -5.5091e-01, -6.4878e-01, -4.3732e-01, -3.6154e-01,
        -4.4407e-01,  1.0641e+00, -2.9530e-01, -6.7211e-01, -5.7917e-01,
        -6.4249e-01, -4.1622e-01,  1.5457e-03, -8.5557e-01,  2.8945e-01,
        -6.8274e-01,  3.2411e-01,  3.8258e-01,  8.6595e-01,  8.4318e-01,
        -1.2669e+00,  2.3971e-01,  4.5293e-03, -4.9952e-01, -1.0416e-01,
         4.1430e-01, -1.7812e-01, -8.4766e-01, -7.3608e-01, -8.9559e-01,
         1.0484e-01, -3.7786e-03,  3.9667e-02, -4.9212e-01, -5.1006e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([14473]), tensor(0.2117))
INFO:main.py:Create test_dataset
INFO:main.py:test_dataset first example: (tensor([ 2.4399e-01, -8.2929e-01, -3.0829e-01,  1.0549e+00, -4.6329e-01,
        -5.8049e-01, -7.5662e-01, -6.9851e-01,  1.0153e-02, -1.6801e-01,
        -6.5807e-01, -7.9359e-02, -7.2240e-01,  5.5125e-01, -3.0706e-01,
         1.0388e+00, -3.8408e-01, -4.6354e-01, -1.0005e-01,  3.0185e-01,
         5.8164e-01, -1.8272e-01, -5.2523e-01,  4.8090e-01, -1.7715e-02,
        -5.6704e-01, -5.7707e-01, -7.5051e-02, -3.0510e-01, -5.7375e-01,
         4.1915e-01, -1.0944e-01,  5.2341e-01,  2.2480e-01, -7.5733e-01,
        -4.3995e-01, -3.9470e-01, -6.9504e-01, -5.4303e-01, -2.2238e-01,
         1.8292e-01,  2.0426e-01, -1.4680e-01, -1.5679e-01, -4.5749e-01,
        -7.3195e-01,  1.1754e-01, -3.0126e-01,  2.8688e-01,  6.4227e-01,
        -4.3283e-01,  3.8988e-01, -4.6873e-01, -1.1355e+00, -7.7899e-01,
        -5.7320e-01,  1.9917e-02, -6.4766e-01, -2.4549e-02, -3.3728e-01,
        -2.4913e-02, -3.7387e-01, -9.6120e-01,  9.5812e-01, -2.5211e-02,
        -5.4224e-01, -4.7158e-01, -4.6422e-01,  2.3213e+00, -5.7214e-01,
        -2.5389e-03,  3.4142e-02,  1.5457e-03, -7.4045e-01,  1.2267e-01,
        -2.7863e-01,  9.9935e-02,  3.2192e-01, -8.4093e-01,  8.4318e-01,
         8.2060e-01,  1.3391e+00,  4.5293e-03, -4.9952e-01, -1.9711e-01,
         4.6344e-01,  2.2342e+00, -7.7465e-01, -6.0570e-01, -8.0367e-01,
         2.8266e-01, -3.5426e-01,  7.2973e-01, -6.0387e-01, -5.1006e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([3080]), tensor(0.0233))
INFO:main.py:Create retrain_dataset
INFO:main.py:retrain_dataset first example: (tensor([ 1.8081e-01,  1.1299e+00,  8.1754e-02, -8.5688e-01, -2.9729e-03,
        -5.9015e-01, -2.6610e-02, -2.7131e-01,  7.5339e-01, -3.1464e-01,
        -7.6226e-01,  1.3451e-02, -7.2699e-01, -5.4012e-01, -4.2671e-01,
         1.0501e-02, -3.9521e-01,  1.2720e-01, -9.8723e-02,  8.5720e-01,
        -4.9987e-01, -1.4979e-01, -2.7226e-01, -4.4893e-03, -6.4843e-02,
        -2.9821e-01, -5.3236e-01, -7.7792e-02,  6.3565e-01,  1.8706e+00,
         3.7247e-01, -1.6200e-01,  9.2473e-01,  2.2940e-01, -3.4979e-01,
        -2.4244e-01,  1.5359e-01,  4.9836e-01, -2.7892e-02, -1.1199e+00,
        -2.1005e-01,  1.9173e-01,  4.8207e-01,  1.6785e-01, -6.3700e-02,
        -7.0327e-01,  5.6449e-02, -6.8392e-02, -4.7758e-01, -1.6196e-01,
        -4.3977e-01,  5.3375e-01, -4.6882e-01,  2.3686e-01, -2.7563e-02,
        -2.6653e-01, -6.9397e-01, -5.1298e-01, -5.4474e-01, -1.8561e-01,
        -2.4264e-02, -5.5142e-01, -6.4465e-01, -4.3580e-01, -3.6323e-01,
        -4.4318e-01,  1.0833e+00, -2.9267e-01, -6.8522e-01, -5.8088e-01,
        -6.4221e-01, -4.3580e-01,  6.5830e-04, -8.5149e-01,  2.8978e-01,
        -6.7319e-01,  3.2148e-01,  3.8196e-01,  8.7619e-01,  8.5330e-01,
        -1.2770e+00,  2.3675e-01,  4.4636e-03, -5.5726e-01, -1.0409e-01,
         4.2875e-01, -1.5309e-01, -8.5311e-01, -7.4030e-01, -8.9302e-01,
         1.0518e-01,  1.5803e-03,  4.3146e-02, -5.0315e-01, -5.0213e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([14700]), tensor(0.2117))
INFO:main.py:Create prediction_dataset
INFO:main.py:prediction_dataset first example: (tensor([-3.0903e-01,  7.3711e-01, -7.6079e-01,  1.0431e+00, -6.0344e-01,
        -3.1123e-01, -3.2522e-01, -4.7886e-01, -3.0371e-01, -2.2511e-01,
        -5.1001e-02, -6.2754e-02, -4.2656e-01, -1.8681e-01, -4.0545e-01,
        -1.6596e+00, -4.8206e-01, -5.9225e-01, -9.8723e-02, -2.2748e-01,
        -9.9496e-01, -1.8182e-01, -5.2955e-01, -5.0763e-01,  2.8372e-01,
        -1.9479e-01, -5.8072e-01, -7.7792e-02, -2.6690e-01,  7.1187e-01,
         3.7424e-02, -3.4615e-02,  3.1261e-01,  2.2940e-01, -7.5705e-01,
        -5.0702e-01, -1.6651e+00, -6.8575e-01, -9.2762e-01, -3.1140e-01,
        -1.5838e-01, -1.2513e-01, -1.6052e+00, -4.2583e-01, -6.2173e-01,
        -4.4947e-01,  3.1349e-01, -9.2870e-02,  3.2916e-01, -2.4358e-01,
        -1.7155e+00,  5.3375e-01, -4.6882e-01, -1.1336e+00, -7.7706e-01,
        -6.2215e-01,  1.9837e-02, -6.3879e-01,  9.9768e-01, -2.7096e-01,
         5.3430e-01,  1.1035e+00, -8.8223e-01, -4.4429e-01, -2.2210e-02,
        -6.3095e-01,  6.5730e-01, -9.5429e-01,  5.1045e-01, -2.6679e-01,
        -3.5490e-03,  4.1185e-02,  6.5830e-04, -3.0184e-01, -1.9884e-02,
        -3.6101e-01, -9.8605e-02,  4.6718e-01, -1.7182e-01,  3.4168e-01,
         6.8178e-01,  1.3437e+00,  4.4636e-03, -5.5726e-01, -8.3076e-01,
        -2.5493e-01,  7.3786e-01, -7.3500e-01, -5.7143e-01, -7.8691e-01,
        -8.8933e-02,  1.0780e-01,  2.7388e-01, -5.7037e-01, -1.4923e-01,
         0.0000e+00,  1.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00]), tensor([3019]), tensor(-0.0061))
INFO:main.py:

Create dataloader

INFO:main.py:Create train and test dataloader
INFO:main.py:Create retrain and prediction dataloader
INFO:main.py:

Hyperparameters tuning with Ray Tune

INFO:main.py:Training data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006]
INFO:main.py:Testing data year: 2007
INFO:main.py:

            ray_results_path: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
            num_samples: 60
            max_num_epochs: 20
            num_cpus: 60
            cpus_per_trial: 1
            num_gpus: 2
            gpus_per_trial: 0
            continuous_dim: 102
            num_embeddings: 16677
            device: cuda
            
2024-07-06 22:41:27,001	INFO worker.py:1753 -- Started a local Ray instance.
2024-07-06 22:41:27,028	INFO packaging.py:530 -- Creating a file package for local directory '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src'.
2024-07-06 22:41:27,061	INFO packaging.py:358 -- Pushing file package 'gcs://_ray_pkg_3d7d5eb957aaab70.zip' (1.20MiB) to Ray cluster...
2024-07-06 22:41:27,068	INFO packaging.py:371 -- Successfully pushed file package 'gcs://_ray_pkg_3d7d5eb957aaab70.zip'.
2024-07-06 22:41:30,404	WARNING tune.py:902 -- AIR_VERBOSITY is set, ignoring passed-in ProgressReporter for now.
2024-07-06 23:08:21,428	INFO tune.py:1009 -- Wrote the latest version of all result files and experiment state to '/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results/train_fnn_2024-07-06_22-41-30' in 0.1575s.
INFO:model_data_nn.py:Best trial config: {'continuous_dim': 102, 'hidden_dim': 5, 'num_layers': 2, 'num_embeddings': 16677, 'embedding_dim': 5, 'dropout_rate': 0.3748726632012116, 'lr': 0.00016056406613556383, 'weight_decay': 4.2385261040269034e-06, 'num_epochs': 20, 'num_gpus': 2}
INFO:model_data_nn.py:Best trial training loss: 0.03685918031557748
INFO:model_data_nn.py:Best trial testing loss: 0.017881609170199042
INFO:main.py:Ray Tune results have been saved to: /zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/ray_results
INFO:main.py:Best trial directory: /tmp/ray/session_2024-07-06_22-41-24_379540_1070676/artifacts/2024-07-06_22-41-30/train_fnn_2024-07-06_22-41-30/driver_artifacts/train_fnn_e351e_00027_27_dropout_rate=0.3749,embedding_dim=5,hidden_dim=5,lr=0.0002,num_layers=2,weight_decay=0.0000_2024-07-06_22-41-30
INFO:main.py:

Retrain a new model with data in years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007]

            Using the optimized hyperparameters: {'continuous_dim': 102, 'hidden_dim': 5, 'num_layers': 2, 'num_embeddings': 16943, 'embedding_dim': 5, 'dropout_rate': 0.3748726632012116, 'lr': 0.00016056406613556383, 'weight_decay': 4.2385261040269034e-06, 'num_epochs': 20, 'num_gpus': 2}

INFO:model_data_nn.py:Epoch 1/20, metrics: {'avg_train_loss': 4.457791903327847, 'avg_test_loss': 0.11387007092077707}
INFO:model_data_nn.py:Epoch 2/20, metrics: {'avg_train_loss': 0.0825833151378417, 'avg_test_loss': 0.045112045889854735}
INFO:model_data_nn.py:Epoch 3/20, metrics: {'avg_train_loss': 0.036642222951072535, 'avg_test_loss': 0.04356429217498481}
INFO:model_data_nn.py:Epoch 4/20, metrics: {'avg_train_loss': 0.03654787382280822, 'avg_test_loss': 0.04331765431411488}
INFO:model_data_nn.py:Epoch 5/20, metrics: {'avg_train_loss': 0.03652831578315557, 'avg_test_loss': 0.0436591745603868}
INFO:model_data_nn.py:Epoch 6/20, metrics: {'avg_train_loss': 0.036491000780083896, 'avg_test_loss': 0.04346467905495431}
INFO:model_data_nn.py:Epoch 7/20, metrics: {'avg_train_loss': 0.03646133684395893, 'avg_test_loss': 0.04360269509332696}
INFO:model_data_nn.py:Epoch 8/20, metrics: {'avg_train_loss': 0.036441068071502714, 'avg_test_loss': 0.04395579951863313}
INFO:model_data_nn.py:Epoch 9/20, metrics: {'avg_train_loss': 0.03642945045385211, 'avg_test_loss': 0.04381859959247186}
INFO:model_data_nn.py:Epoch 10/20, metrics: {'avg_train_loss': 0.03640364320811348, 'avg_test_loss': 0.04393547372028385}
INFO:model_data_nn.py:Epoch 11/20, metrics: {'avg_train_loss': 0.036386852358703474, 'avg_test_loss': 0.043635571356286706}
INFO:model_data_nn.py:Epoch 12/20, metrics: {'avg_train_loss': 0.03637938258429423, 'avg_test_loss': 0.04391532812805213}
INFO:model_data_nn.py:Epoch 13/20, metrics: {'avg_train_loss': 0.03637498776627074, 'avg_test_loss': 0.04350151359247639}
INFO:model_data_nn.py:Epoch 14/20, metrics: {'avg_train_loss': 0.036352555831180834, 'avg_test_loss': 0.04389492357053708}
INFO:model_data_nn.py:Epoch 15/20, metrics: {'avg_train_loss': 0.036351688473406384, 'avg_test_loss': 0.04375126561841246}
INFO:model_data_nn.py:Epoch 16/20, metrics: {'avg_train_loss': 0.03633544384224915, 'avg_test_loss': 0.0441234759055078}
INFO:model_data_nn.py:Epoch 17/20, metrics: {'avg_train_loss': 0.03634285552517277, 'avg_test_loss': 0.04398652044672173}
INFO:model_data_nn.py:Epoch 18/20, metrics: {'avg_train_loss': 0.036326771065397785, 'avg_test_loss': 0.043865862657728884}
INFO:model_data_nn.py:Epoch 19/20, metrics: {'avg_train_loss': 0.03632633177331641, 'avg_test_loss': 0.044106663564776945}
INFO:model_data_nn.py:Epoch 20/20, metrics: {'avg_train_loss': 0.03632121507955817, 'avg_test_loss': 0.04422671213438831}
INFO:main.py:Making prediction for data in year: 2007
INFO:main.py:Prediction data shape: (49474,)
/zfs/projects/darc/wolee_edehaan_suzienoh-exploratory-ml/kevin/src/main.py:372: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  prediction_data['pred'] = predictions
INFO:main.py:Root Mean Squared Error for Prediction in 2008: 0.21017088893563213
INFO:main.py:Prediction Stats:                 ret          pred
count  49474.000000  49474.000000
mean      -0.044267      0.019043
std        0.200234      0.014112
min       -0.944667     -0.037206
25%       -0.142857      0.012094
50%       -0.036210      0.014454
75%        0.051037      0.019470
max        4.900000      0.166358
INFO:main.py:

Transform data

INFO:transform_data_nn.py:Train data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007]
INFO:transform_data_nn.py:Train_data: (1613984, 158)

INFO:transform_data_nn.py:Test data years: [2008]
INFO:transform_data_nn.py:Test_data: (49474, 158)

INFO:transform_data_nn.py:Retrain data years: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008]
INFO:transform_data_nn.py:Retrain_data: (1663458, 158)

INFO:transform_data_nn.py:Prediction data years: [2009]
INFO:transform_data_nn.py:Prediction_data: (47649, 158)

INFO:main.py:

Generate X and y with train_data and test_data

slurmstepd-yen-gpu1: error: *** JOB 411617 ON yen-gpu1 CANCELLED AT 2024-07-06T23:55:56 DUE TO TIME LIMIT ***
